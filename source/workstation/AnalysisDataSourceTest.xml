<PictoData id="2"><Name id="7">AnalysisDataSourceTest</Name><Experiment id="1">
    <Task id="3">
      <StateMachine id="4">
        
        
        
        <Name id="18">Top</Name>
        
        
        
        
        
        
        
        
        
        <EntryScript id="381"/>
        <ExitScript id="382"/>
        
        <UIEnabled id="384">false</UIEnabled>
        <UIOrder id="385">0</UIOrder>
      <StateMachineElement type="StateMachine" id="13"><EntryScript id="14"/><ExitScript id="15">rewardDuration.value++;</ExitScript><Name id="16">Trial</Name><Result id="26"><EntryScript id="27"/><Name id="28">Done</Name><UIEnabled id="29">false</UIEnabled><UIOrder id="30">0</UIOrder></Result><StateMachineElement type="Reward" id="37"><EntryScript id="38">Reward.unitQuantity = rewardDuration.value;</EntryScript><ExitScript id="39"/><MinRewardPeriod id="40">125</MinRewardPeriod><Name id="41">Reward</Name><NumRewards id="42">10</NumRewards><Result id="5"><Name id="6">done</Name></Result><RewardChan id="43">1</RewardChan><RewardQty id="44">60</RewardQty><UIEnabled id="45">false</UIEnabled><UIOrder id="46">0</UIOrder></StateMachineElement><StateMachineElement type="State" id="53"><BackgroundColor id="54">0,0,0,255</BackgroundColor><ControlElement type="Stopwatch Controller" id="73"><Name id="74">Timer</Name><Result id="11"><Name id="12">Success</Name></Result><Time id="75">1500</Time><TimeUnits id="76">Ms</TimeUnits><UIEnabled id="77">false</UIEnabled><UIOrder id="78">0</UIOrder></ControlElement><EntryScript id="55">Timer.timeout = msTimeout.value;
circle.radius = circleRadius.value;</EntryScript><ExitScript id="56"/><FrameScript id="57">var fracLeft = (msTimeout.value - elapsedTime.value)/msTimeout.value;
if(fracLeft &lt; 0)
	fracLeft = 1;
circle.radius = circleRadius.value*fracLeft;</FrameScript><Name id="58">TestValues</Name><Result id="85"><EntryScript id="86"/><Name id="87">Done</Name><UIEnabled id="88">false</UIEnabled><UIOrder id="89">0</UIOrder></Result><Transition id="124"><DId id="125">85</DId><Destination id="126">Done</Destination><SId id="127">73</SId><SRId id="128">11</SRId><Source id="129">Timer</Source><SourceResult id="130">Success</SourceResult></Transition><UIEnabled id="59">false</UIEnabled><UIOrder id="60">0</UIOrder><VisualElement type="Circle Graphic" id="102"><Color id="103">0,170,255,255</Color><Layer id="104">0</Layer><Name id="105">circle</Name><OperatorView id="106">true</OperatorView><Outline id="107">false</Outline><OutlineThickness id="108">0</OutlineThickness><Position id="109">400,300</Position><Radius id="110">100</Radius><SubjectView id="111">true</SubjectView><UIEnabled id="112">false</UIEnabled><UIOrder id="113">0</UIOrder><Visible id="114">true</Visible></VisualElement><Parameter type="Timer" id="166"><Name id="167">elapsedTime</Name><TimeUnits id="168">Ms</TimeUnits><UIEnabled id="169">false</UIEnabled><UIOrder id="170">0</UIOrder></Parameter><Parameter type="Range" id="206"><Increment id="207">0</Increment><Max id="208">10000</Max><Min id="209">0</Min><Name id="210">msTimeout</Name><UIEnabled id="211">true</UIEnabled><UIOrder id="212">0</UIOrder><Value id="213">1500</Value></Parameter><Parameter type="Range" id="220"><Increment id="221">0</Increment><Max id="222">1000</Max><Min id="223">0</Min><Name id="224">circleRadius</Name><UIEnabled id="225">true</UIEnabled><UIOrder id="226">0</UIOrder><Value id="227">100</Value></Parameter></StateMachineElement><Transition id="138"><DId id="139">53</DId><Destination id="140">TestValues</Destination><SId id="141">37</SId><SRId id="142">5</SRId><Source id="143">Reward</Source><SourceResult id="144">done</SourceResult></Transition><UIEnabled id="17">false</UIEnabled><UIOrder id="19">0</UIOrder><StateMachineElement type="State" id="413"><BackgroundColor id="414">0,0,0,255</BackgroundColor><EntryScript id="415"/><ExitScript id="416"/><FrameScript id="417"/><Name id="418">Wait</Name><UIEnabled id="419">false</UIEnabled><UIOrder id="420">0</UIOrder><ControlElement type="Stopwatch Controller" id="177"><Name id="178">Timer</Name><Result id="131"><Name id="132">Success</Name></Result><Time id="179">1000</Time><TimeUnits id="180">Ms</TimeUnits><UIEnabled id="181">false</UIEnabled><UIOrder id="182">0</UIOrder></ControlElement><Result id="446"><EntryScript id="447"/><Name id="448">Done</Name><UIEnabled id="449">false</UIEnabled><UIOrder id="450">0</UIOrder></Result><Transition id="136"><DId id="137">446</DId><Destination id="463">Done</Destination><SId id="464">177</SId><SRId id="465">131</SRId><Source id="466">Timer</Source><SourceResult id="467">Success</SourceResult></Transition></StateMachineElement><Transition id="475"><DId id="476">37</DId><Destination id="477">Reward</Destination><SId id="478">413</SId><SRId id="479">446</SRId><Source id="480">Wait</Source><SourceResult id="481">Done</SourceResult></Transition><StateMachineElement type="State" id="764"><BackgroundColor id="765">0,0,0,255</BackgroundColor><ControlElement type="Stopwatch Controller" id="805"><Name id="806">Timer</Name><Result id="154"><Name id="155">Success</Name></Result><Time id="807">1000</Time><TimeUnits id="808">Ms</TimeUnits><UIEnabled id="809">false</UIEnabled><UIOrder id="810">0</UIOrder></ControlElement><EntryScript id="766"/><ExitScript id="767"/><FrameScript id="768"/><Name id="769">PreInterval</Name><Result id="794"><EntryScript id="795"/><Name id="796">Done</Name><UIEnabled id="797">false</UIEnabled><UIOrder id="798">0</UIOrder></Result><Transition id="470"><DId id="471">794</DId><Destination id="472">Done</Destination><SId id="473">805</SId><SRId id="474">154</SRId><Source id="746">Timer</Source><SourceResult id="747">Success</SourceResult></Transition><UIEnabled id="770">false</UIEnabled><UIOrder id="771">0</UIOrder></StateMachineElement><StateMachineElement type="Reward" id="778"><EntryScript id="779"/><ExitScript id="780"/><MinRewardPeriod id="781">10</MinRewardPeriod><Name id="782">preReward</Name><NumRewards id="783">10</NumRewards><Result id="748"><Name id="749">done</Name></Result><RewardChan id="784">1</RewardChan><RewardQty id="785">2</RewardQty><UIEnabled id="786">false</UIEnabled><UIOrder id="787">0</UIOrder></StateMachineElement><Transition id="829"><DId id="830">778</DId><Destination id="831">preReward</Destination><SId id="832">764</SId><SRId id="833">794</SRId><Source id="834">PreInterval</Source><SourceResult id="835">Done</SourceResult></Transition><Transition id="836"><DId id="837">413</DId><Destination id="838">Wait</Destination><SId id="839">778</SId><SRId id="840">748</SRId><Source id="841">preReward</Source><SourceResult id="842">done</SourceResult></Transition><Transition id="843"><DId id="844">764</DId><Destination id="845">PreInterval</Destination><SId id="846">0</SId><SRId id="847">0</SRId><Source id="848"/><SourceResult id="849"/></Transition><StateMachineElement type="State" id="902"><BackgroundColor id="903">0,0,0,255</BackgroundColor><ControlElement type="Stopwatch Controller" id="927"><Name id="928">Timer</Name><Result id="893"><Name id="894">Success</Name></Result><Time id="929">1000</Time><TimeUnits id="930">Ms</TimeUnits><UIEnabled id="931">false</UIEnabled><UIOrder id="932">0</UIOrder></ControlElement><EntryScript id="904"/><ExitScript id="905"/><FrameScript id="906"/><Name id="907">PostInterval</Name><Result id="916"><EntryScript id="917"/><Name id="918">Done</Name><UIEnabled id="919">false</UIEnabled><UIOrder id="920">0</UIOrder></Result><Transition id="895"><DId id="896">916</DId><Destination id="897">Done</Destination><SId id="898">927</SId><SRId id="899">893</SRId><Source id="900">Timer</Source><SourceResult id="901">Success</SourceResult></Transition><UIEnabled id="908">false</UIEnabled><UIOrder id="909">0</UIOrder></StateMachineElement><StateMachineElement type="Reward" id="856"><EntryScript id="857"/><ExitScript id="858"/><MinRewardPeriod id="859">11</MinRewardPeriod><Name id="890">postReward</Name><NumRewards id="891">7</NumRewards><Result id="469"><Name id="750">done</Name></Result><RewardChan id="892">1</RewardChan><RewardQty id="951">3</RewardQty><UIEnabled id="952">false</UIEnabled><UIOrder id="953">0</UIOrder></StateMachineElement><Transition id="851"><DId id="852">902</DId><Destination id="853">PostInterval</Destination><SId id="854">53</SId><SRId id="855">85</SRId><Source id="960">TestValues</Source><SourceResult id="961">Done</SourceResult></Transition><Transition id="962"><DId id="963">856</DId><Destination id="964">postReward</Destination><SId id="965">902</SId><SRId id="966">916</SRId><Source id="967">PostInterval</Source><SourceResult id="968">Done</SourceResult></Transition><Transition id="969"><DId id="970">26</DId><Destination id="971">Done</Destination><SId id="978">856</SId><SRId id="979">469</SRId><Source id="980">postReward</Source><SourceResult id="981">done</SourceResult></Transition></StateMachineElement><Transition id="145"><DId id="146">13</DId><Destination id="147">Trial</Destination><SId id="148">13</SId><SRId id="149">26</SRId><Source id="150">Trial</Source><SourceResult id="151">Done</SourceResult></Transition><StateMachineElement type="State" id="393"><BackgroundColor id="482">0,0,0,255</BackgroundColor><ControlElement type="Stopwatch Controller" id="705"><Name id="706">NewItem1</Name><Result id="152"><Name id="153">Success</Name></Result><Time id="707">5000</Time><TimeUnits id="708">Ms</TimeUnits><UIEnabled id="709">false</UIEnabled><UIOrder id="710">0</UIOrder></ControlElement><EntryScript id="483"/><ExitScript id="484"/><FrameScript id="485"/><Name id="486">StartupTime</Name><Result id="717"><EntryScript id="718"/><Name id="719">Done</Name><UIEnabled id="720">false</UIEnabled><UIOrder id="721">0</UIOrder></Result><Transition id="157"><DId id="158">717</DId><Destination id="335">Done</Destination><SId id="336">705</SId><SRId id="337">152</SRId><Source id="338">NewItem1</Source><SourceResult id="340">Success</SourceResult></Transition><UIEnabled id="487">false</UIEnabled><UIOrder id="488">0</UIOrder></StateMachineElement><Transition id="341"><DId id="351">13</DId><Destination id="734">Trial</Destination><SId id="735">393</SId><SRId id="736">717</SRId><Source id="737">StartupTime</Source><SourceResult id="738">Done</SourceResult></Transition><Transition id="739"><DId id="740">393</DId><Destination id="741">StartupTime</Destination><SId id="742">0</SId><SRId id="743">0</SRId><Source id="744"/><SourceResult id="745"/></Transition><Variable type="NumberVariable" id="753"><Name id="754">rewardDuration</Name><UIEnabled id="755">false</UIEnabled><UIOrder id="756">0</UIOrder><Value id="757">1</Value></Variable></StateMachine>
      
      <Name id="389">Test</Name>
    </Task>


<XGain id="394">1</XGain>
<XOffset id="395">0</XOffset>
<XYSignalShear id="396">0</XYSignalShear>
<YGain id="397">1</YGain>
<YOffset id="398">0</YOffset>
<HostId id="339">{37b3c4fd-c0b7-4de3-a474-72eea8f71773}</HostId></Experiment><SyntaxVersion id="342">0.0.1</SyntaxVersion><UIData id="343"><AssociateId id="344">{962098af-381b-4e81-adb7-4f3365d1c042}</AssociateId><LinkedHostId id="345">{37b3c4fd-c0b7-4de3-a474-72eea8f71773}</LinkedHostId><LinkedHostName id="346">Experiment</LinkedHostName><Name id="347">Not Yet Named</Name><OpenAsset id="348">53</OpenAsset><UIElement id="564"><HostLink id="565"><ParentId id="566">4</ParentId><ParentPath id="567">Test::Top</ParentPath></HostLink><Pos id="568">645,521</Pos></UIElement><UIElement id="593"><HostLink id="594"><ParentId id="595">3</ParentId><ParentPath id="596">Test</ParentPath></HostLink><Pos id="597">1668,1744</Pos></UIElement><UIElement id="598"><HostLink id="599"><ParentId id="600">1</ParentId><ParentPath id="601"/></HostLink><Pos id="602">0,0</Pos></UIElement><UIEnabled id="349">false</UIEnabled><UIOrder id="350">0</UIOrder><UIElement id="20"><HostLink id="21"><ParentId id="22">13</ParentId><ParentPath id="23">Test::Top::Trial</ParentPath></HostLink><Notes id="24"/><Pos id="25">293,115</Pos></UIElement><UIElement id="31"><HostLink id="32"><ParentId id="33">26</ParentId><ParentPath id="34">Test::Top::Trial::Done</ParentPath></HostLink><Notes id="35"/><Pos id="36">804,288</Pos></UIElement><UIElement id="47"><HostLink id="48"><ParentId id="49">37</ParentId><ParentPath id="50">Test::Top::Trial::Reward</ParentPath></HostLink><Notes id="51"/><Pos id="52">508,165</Pos></UIElement><UIElement id="61"><HostLink id="62"><ParentId id="63">53</ParentId><ParentPath id="64">Test::Top::Trial::TestValues</ParentPath></HostLink><Notes id="65"/><Pos id="66">211,303</Pos></UIElement><UIElement id="67"><HostLink id="68"><ParentId id="69">5</ParentId><ParentPath id="70">Test::Top::Trial::Reward::done</ParentPath></HostLink><Notes id="71"/><Pos id="72">0,0</Pos></UIElement><UIElement id="79"><HostLink id="80"><ParentId id="81">73</ParentId><ParentPath id="82">Test::Top::Trial::TestValues::Timer</ParentPath></HostLink><Notes id="83"/><Pos id="84">183,73</Pos></UIElement><UIElement id="90"><HostLink id="91"><ParentId id="92">85</ParentId><ParentPath id="93">Test::Top::Trial::TestValues::Done</ParentPath></HostLink><Notes id="94"/><Pos id="95">422,112</Pos></UIElement><UIElement id="96"><HostLink id="97"><ParentId id="98">5</ParentId><ParentPath id="99">Test::Top::Trial::Reward::done</ParentPath></HostLink><Notes id="100"/><Pos id="101">0,0</Pos></UIElement><UIElement id="115"><HostLink id="116"><ParentId id="117">102</ParentId><ParentPath id="118">Test::Top::Trial::TestValues::circle</ParentPath></HostLink><Notes id="119"/><Pos id="120">179,257</Pos></UIElement><UIElement id="171"><HostLink id="172"><ParentId id="173">166</ParentId><ParentPath id="174">Test::Top::Trial::TestValues::elapsedTime</ParentPath></HostLink><Notes id="175"/><Pos id="176">280,256</Pos></UIElement><UIElement id="214"><HostLink id="215"><ParentId id="216">206</ParentId><ParentPath id="217">Test::Top::Trial::TestValues::msTimeout</ParentPath></HostLink><Notes id="218"/><Pos id="219">67,195</Pos></UIElement><UIElement id="228"><HostLink id="229"><ParentId id="230">220</ParentId><ParentPath id="231">Test::Top::Trial::TestValues::circleRadius</ParentPath></HostLink><Notes id="232"/><Pos id="233">64,281</Pos></UIElement><UIElement id="421"><HostLink id="422"><ParentId id="423">413</ParentId><ParentPath id="424">Test::Top::Trial::Wait</ParentPath></HostLink><Notes id="425"/><Pos id="426">374,160</Pos></UIElement><UIElement id="183"><HostLink id="427"><ParentId id="442">177</ParentId><ParentPath id="443">Test::Top::Trial::Wait::Timer</ParentPath></HostLink><Notes id="444"/><Pos id="445">141,94</Pos></UIElement><UIElement id="451"><HostLink id="452"><ParentId id="453">446</ParentId><ParentPath id="454">Test::Top::Trial::Wait::Done</ParentPath></HostLink><Notes id="455"/><Pos id="456">473,117</Pos></UIElement><UIElement id="457"><HostLink id="458"><ParentId id="459">131</ParentId><ParentPath id="460">Test::Top::Trial::Wait::Timer::Success</ParentPath></HostLink><Notes id="461"/><Pos id="462">0,0</Pos></UIElement><UIElement id="386"><HostLink id="387"><ParentId id="388">11</ParentId><ParentPath id="390">Test::Top::Trial::TestValues::Timer::Success</ParentPath></HostLink><Notes id="391"/><Pos id="392">0,0</Pos></UIElement><UIElement id="699"><HostLink id="700"><ParentId id="701">393</ParentId><ParentPath id="702">Test::Top::StartupTime</ParentPath></HostLink><Notes id="703"/><Pos id="704">171,108</Pos></UIElement><UIElement id="711"><HostLink id="712"><ParentId id="713">705</ParentId><ParentPath id="714">Test::Top::StartupTime::NewItem1</ParentPath></HostLink><Notes id="715"/><Pos id="716">217,73</Pos></UIElement><UIElement id="722"><HostLink id="723"><ParentId id="724">717</ParentId><ParentPath id="725">Test::Top::StartupTime::Done</ParentPath></HostLink><Notes id="726"/><Pos id="727">444,102</Pos></UIElement><UIElement id="728"><HostLink id="729"><ParentId id="730">152</ParentId><ParentPath id="731">Test::Top::StartupTime::NewItem1::Success</ParentPath></HostLink><Notes id="732"/><Pos id="733">0,0</Pos></UIElement><UIElement id="758"><HostLink id="759"><ParentId id="760">753</ParentId><ParentPath id="761">Test::Top::rewardDuration</ParentPath></HostLink><Notes id="762"/><Pos id="763">289,267</Pos></UIElement><UIElement id="772"><HostLink id="773"><ParentId id="774">764</ParentId><ParentPath id="775">Test::Top::Trial::PreInterval</ParentPath></HostLink><Notes id="776"/><Pos id="777">142,155</Pos></UIElement><UIElement id="788"><HostLink id="789"><ParentId id="790">778</ParentId><ParentPath id="791">Test::Top::Trial::preReward</ParentPath></HostLink><Notes id="792"/><Pos id="793">253,158</Pos></UIElement><UIElement id="799"><HostLink id="800"><ParentId id="801">794</ParentId><ParentPath id="802">Test::Top::Trial::PreInterval::Done</ParentPath></HostLink><Notes id="803"/><Pos id="804">348,159</Pos></UIElement><UIElement id="811"><HostLink id="812"><ParentId id="813">805</ParentId><ParentPath id="814">Test::Top::Trial::PreInterval::Timer</ParentPath></HostLink><Notes id="815"/><Pos id="816">161,120</Pos></UIElement><UIElement id="817"><HostLink id="818"><ParentId id="819">154</ParentId><ParentPath id="820">Test::Top::Trial::PreInterval::Timer::Success</ParentPath></HostLink><Notes id="821"/><Pos id="822">0,0</Pos></UIElement><UIElement id="823"><HostLink id="824"><ParentId id="825">154</ParentId><ParentPath id="826">Test::Top::Trial::PreInterval::Timer::Success</ParentPath></HostLink><Notes id="827"/><Pos id="828">0,0</Pos></UIElement><UIElement id="910"><HostLink id="911"><ParentId id="912">902</ParentId><ParentPath id="913">Test::Top::Trial::PostInterval</ParentPath></HostLink><Notes id="914"/><Pos id="915">580,297</Pos></UIElement><UIElement id="933"><HostLink id="934"><ParentId id="935">927</ParentId><ParentPath id="936">Test::Top::Trial::PostInterval::Timer</ParentPath></HostLink><Notes id="937"/><Pos id="938">161,120</Pos></UIElement><UIElement id="939"><HostLink id="940"><ParentId id="941">893</ParentId><ParentPath id="942">Test::Top::Trial::PostInterval::Timer::Success</ParentPath></HostLink><Notes id="943"/><Pos id="944">0,0</Pos></UIElement><UIElement id="945"><HostLink id="946"><ParentId id="947">893</ParentId><ParentPath id="948">Test::Top::Trial::PostInterval::Timer::Success</ParentPath></HostLink><Notes id="949"/><Pos id="950">0,0</Pos></UIElement><UIElement id="921"><HostLink id="922"><ParentId id="923">916</ParentId><ParentPath id="924">Test::Top::Trial::PostInterval::Done</ParentPath></HostLink><Notes id="925"/><Pos id="926">348,159</Pos></UIElement><UIElement id="954"><HostLink id="955"><ParentId id="956">856</ParentId><ParentPath id="957">Test::Top::Trial::postReward</ParentPath></HostLink><Notes id="958"/><Pos id="959">690,297</Pos></UIElement><UIElement id="972"><HostLink id="973"><ParentId id="974">469</ParentId><ParentPath id="975">Test::Top::Trial::postReward::done</ParentPath></HostLink><Notes id="976"/><Pos id="977">0,0</Pos></UIElement></UIData><Analysis id="184"><AnalysisOutput type="File" id="200"><FileSuffix id="201">.resultsPast.txt</FileSuffix><FileType id="202">Text</FileType><HostLink id="203"><ParentId id="204">4</ParentId><ParentPath id="205">Test::Top</ParentPath></HostLink><Name id="234">outFile</Name><UIEnabled id="235">false</UIEnabled><UIOrder id="236">0</UIOrder></AnalysisOutput><AnalysisScriptContainer id="243"><AnalysisEntryScript id="250"/><AnalysisExitScript id="251">//Verify that there was enough time to finish all the rewards within the state
assert(Reward.minRewardPeriod*(Reward.number+1) &lt; Timer.timeout,&quot;Timer timeout wasn't long enough for all rewards to be finished while in the state.&quot;);

//Do additional tests if the state wasn't manually ended with a stop
if(TestValues.getLatestResult() == &quot;Done&quot;)
{
	//Verify that we have the correct number of rewards in the list from the reward data source
	assert(rewardData.getPrevTimes(frameData.getLatestTime()+0.300).length == Reward.number,&quot;There were not enough rewards listed in the getPrevTimes() list&quot;);
	//Verify that there is at least one frame in the list of previous frames
	assert((frameData.getLatestTime() &gt; 0) &amp;&amp; (frameData.getPrevTimes(frameData.getLatestTime()).length &gt; 0),&quot;frameData.getPrevTimes() at the end of the state was empty or getLatestTime was less than zero.&quot;);
}</AnalysisExitScript><AnalysisFrameScript id="252">checkRewardTimes();
checkRewardDurations();
checkFrames();
frameNum.value++;</AnalysisFrameScript><HostLink id="244"><ParentId id="245">53</ParentId><ParentPath id="246">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="247">NotYetNamed</Name><UIEnabled id="248">false</UIEnabled><UIOrder id="249">0</UIOrder></AnalysisScriptContainer><AnalysisScriptContainer type="Frame" id="279"><HostLink id="280"><ParentId id="281">53</ParentId><ParentPath id="282">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="283">frameData</Name><UIEnabled id="284">false</UIEnabled><UIOrder id="285">0</UIOrder></AnalysisScriptContainer><AnalysisScriptContainer type="Reward" id="292"><HostLink id="293"><ParentId id="294">53</ParentId><ParentPath id="295">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="296">rewardData</Name><UIEnabled id="297">false</UIEnabled><UIOrder id="298">0</UIOrder></AnalysisScriptContainer><AnalysisVariable type="VariableList" id="253"><HostLink id="254"><ParentId id="255">53</ParentId><ParentPath id="256">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="257">rewardTimeBuffer</Name><UIEnabled id="258">false</UIEnabled><UIOrder id="259">0</UIOrder></AnalysisVariable><AnalysisVariable type="VariableList" id="266"><HostLink id="267"><ParentId id="268">53</ParentId><ParentPath id="269">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="270">frameBuffer</Name><UIEnabled id="271">false</UIEnabled><UIOrder id="272">0</UIOrder></AnalysisVariable><AssociateId id="185">{30e671ac-41eb-46b5-9aba-5b35026b6b81}</AssociateId><HostId id="186">{e8324faa-b3fd-49ea-8b0f-297309e4a026}</HostId><LinkedHostId id="187">{37b3c4fd-c0b7-4de3-a474-72eea8f71773}</LinkedHostId><LinkedHostName id="188">Experiment</LinkedHostName><Name id="189">CheckSourcesPast</Name><UIEnabled id="190">false</UIEnabled><UIOrder id="191">0</UIOrder><AnalysisFunction id="305"><HostLink id="306"><ParentId id="307">53</ParentId><ParentPath id="308">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="309"/><Name id="310">checkRewardTimes</Name><Script id="311">assert(Reward.unitQuantity &lt; Reward.minRewardPeriod,&quot;Unit reward quantity must be less than minRewardPeriod for the reward in this experiment.&quot;);
var rewardList = rewardData.getPrevTimes(frameData.getLatestTime());
matchCurrPrevData(rewardList,rewardTimeBuffer);</Script><UIEnabled id="312">false</UIEnabled><UIOrder id="313">0</UIOrder></AnalysisFunction><AnalysisFunction id="320"><HostLink id="321"><ParentId id="322">53</ParentId><ParentPath id="323">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="324"/><Name id="325">checkFrames</Name><Script id="326">//Check that our list of frames since the beginning of the state maches
//last frame's list
var frameList = frameData.getPrevTimes(frameData.getLatestTime());
matchCurrPrevData(frameList,frameBuffer);

//Check that our prev frame value matches last frame's latest
//frame value
if(frameNum.value !=  0)
{
	assert(lastFrame.value == frameData.getPrevTime(),&quot;Previous frame value does not match the 'latest' value returned last frame.&quot;);
}
lastFrame.value = frameData.getLatestTime();</Script><UIEnabled id="327">false</UIEnabled><UIOrder id="328">0</UIOrder></AnalysisFunction><AnalysisFunction id="360"><HostLink id="361"><ParentId id="362">53</ParentId><ParentPath id="363">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="364">curr,prev</Inputs><Name id="365">matchCurrPrevData</Name><Script id="366">if(prev.length())
{
	//Find the time in the current list that is at the end of the prev list
	for(var i=1;i&lt;=curr.length;i++)
	{
		if(prev.lastAsNum() == curr[curr.length-i])
			break;
	}
	//Verify that the end of the prev list is in the current list
	assert(i &lt;= curr.length,&quot;The end of the previous saved list is not in the current previous value list&quot;);

	//Make sure that all values from the end of the previous list to one after the beginning
	//are in the curr list.  We don't check one after the beginning of the list due to 
	//possible floating point offset issues adding or subtracting a single value from the beginning
	//of the list.
	var endOffset = i;
	for(var i=0; i&lt;prev.length()-1;i++)
	{
		assert(prev.getValueAsNum(prev.length()-1-i) == curr[curr.length - endOffset - i],&quot;Values from the current prev value call and last frames prev value call didn't match.&quot;);
	}
}
prev.fromArray(curr);</Script><UIEnabled id="367">false</UIEnabled><UIOrder id="368">0</UIOrder></AnalysisFunction><AnalysisVariable type="NumberVariable" id="399"><HostLink id="400"><ParentId id="401">53</ParentId><ParentPath id="402">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="403">lastFrame</Name><UIEnabled id="404">false</UIEnabled><UIOrder id="405">0</UIOrder><Value id="406">-1</Value></AnalysisVariable><AnalysisVariable type="NumberVariable" id="428"><HostLink id="429"><ParentId id="430">53</ParentId><ParentPath id="431">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="432">frameNum</Name><UIEnabled id="433">false</UIEnabled><UIOrder id="434">0</UIOrder><Value id="435">0</Value></AnalysisVariable><AnalysisFunction id="352"><HostLink id="353"><ParentId id="354">4</ParentId><ParentPath id="355">Test::Top</ParentPath></HostLink><Inputs id="356">trueVal,errorStr</Inputs><Name id="357">assert</Name><Script id="358">if(!trueVal)
{
	outFile.writeLine(errorStr);
	print(errorStr);
	debugger;
}</Script><UIEnabled id="359">false</UIEnabled><UIOrder id="375">0</UIOrder></AnalysisFunction><AnalysisFunction id="860"><HostLink id="861"><ParentId id="862">53</ParentId><ParentPath id="863">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="864"/><Name id="865">checkRewardDurations</Name><Script id="866">assert(preReward.unitQuantity &lt; preReward.minRewardPeriod,&quot;Unit reward quantity must be less than minRewardPeriod for the reward in this experiment.&quot;);
var rewardList = rewardData.getPrevDurations(frameData.getLatestTime()+ 1.2);
//Check if first if preReward.numRewards values are correct and then if last Reward.numRewards values are correct
for(var i=0;i&lt;preReward.number;i++)
{
	assert(rewardList[i] = preReward.unitQuantity,&quot;A reward duration returned from getPrevDurations() was invalid.&quot;);
}
//If enough time has passed for the first reward from &quot;Reward&quot; to have been supplied, check that its in the list
if(frameData.getLatestTime() &gt; Reward.unitQuantity/1000)
	assert(i &lt; rewardList.length,&quot;getPrevDuration() should have returned some reward durations from the Reward element.&quot;);
for(;i&lt;rewardList.length;i++)
{
	assert(rewardList[i] = Reward.unitQuantity,&quot;A reward duration returned from getPrevDurations() was invalid.&quot;);
}
//If enough time has passed for the first reward from &quot;Reward&quot; to have been supplied, make sure that its at the end of the list
assert(rewardData.getLatestDuration() == rewardList[rewardList.length-1],&quot;Reward duration from getLatestDuration() should have been &quot; + rewardList[rewardList.length-1] +&quot; but was &quot; + rewardData.getLatestDuration());</Script><UIEnabled id="867">false</UIEnabled><UIOrder id="868">0</UIOrder></AnalysisFunction><AnalysisScriptContainer id="992"><AnalysisEntryScript id="999"/><AnalysisExitScript id="1000"/><HostLink id="993"><ParentId id="994">37</ParentId><ParentPath id="995">Test::Top::Trial::Reward</ParentPath></HostLink><Name id="996">NotYetNamed</Name><UIEnabled id="997">false</UIEnabled><UIOrder id="998">0</UIOrder></AnalysisScriptContainer></Analysis><UIData id="192"><AssociateId id="193">{963cf1d6-9841-45a5-954c-7248d76a9f91}</AssociateId><LinkedHostId id="194">{e8324faa-b3fd-49ea-8b0f-297309e4a026}</LinkedHostId><LinkedHostName id="195">CheckSourcesPast</LinkedHostName><Name id="196">NotYetNamed</Name><OpenAsset id="197">0</OpenAsset><UIElement id="237"><HostLink id="238"><ParentId id="239">200</ParentId><ParentPath id="240">AnalysisDataSourceTest::CheckSourcesPast::outFile</ParentPath></HostLink><Notes id="241"/><Pos id="242">395,320</Pos></UIElement><UIElement id="260"><HostLink id="261"><ParentId id="262">253</ParentId><ParentPath id="263">AnalysisDataSourceTest::CheckSourcesPast::rewardTimeBuffer</ParentPath></HostLink><Notes id="264"/><Pos id="265">487,215</Pos></UIElement><UIElement id="273"><HostLink id="274"><ParentId id="275">266</ParentId><ParentPath id="276">AnalysisDataSourceTest::CheckSourcesPast::frameBuffer</ParentPath></HostLink><Notes id="277"/><Pos id="278">490,306</Pos></UIElement><UIElement id="286"><HostLink id="287"><ParentId id="288">279</ParentId><ParentPath id="289">AnalysisDataSourceTest::CheckSourcesPast::frameData</ParentPath></HostLink><Notes id="290"/><Pos id="291">603,298</Pos></UIElement><UIElement id="299"><HostLink id="300"><ParentId id="301">292</ParentId><ParentPath id="302">AnalysisDataSourceTest::CheckSourcesPast::rewardData</ParentPath></HostLink><Notes id="303"/><Pos id="304">594,209</Pos></UIElement><UIEnabled id="198">false</UIEnabled><UIOrder id="199">0</UIOrder><UIElement id="314"><HostLink id="315"><ParentId id="316">305</ParentId><ParentPath id="317">AnalysisDataSourceTest::CheckSourcesPast::checkRewardTimes</ParentPath></HostLink><Notes id="318"/><Pos id="319">86,378</Pos></UIElement><UIElement id="329"><HostLink id="330"><ParentId id="331">320</ParentId><ParentPath id="332">AnalysisDataSourceTest::CheckSourcesPast::checkFrames</ParentPath></HostLink><Notes id="333"/><Pos id="334">339,391</Pos></UIElement><UIElement id="369"><HostLink id="370"><ParentId id="371">360</ParentId><ParentPath id="372">AnalysisDataSourceTest::CheckSourcesPast::matchCurrPrevData</ParentPath></HostLink><Notes id="373"/><Pos id="374">125,483</Pos></UIElement><UIElement id="407"><HostLink id="408"><ParentId id="409">399</ParentId><ParentPath id="410">AnalysisDataSourceTest::CheckSourcesPast::lastFrame</ParentPath></HostLink><Notes id="411"/><Pos id="412">376,309</Pos></UIElement><UIElement id="436"><HostLink id="437"><ParentId id="438">428</ParentId><ParentPath id="439">AnalysisDataSourceTest::CheckSourcesPast::frameNum</ParentPath></HostLink><Notes id="440"/><Pos id="441">551,406</Pos></UIElement><UIElement id="376"><HostLink id="377"><ParentId id="378">352</ParentId><ParentPath id="379">AnalysisDataSourceTest::CheckSourcesPast::assert</ParentPath></HostLink><Notes id="380"/><Pos id="383">206,311</Pos></UIElement><UIElement id="869"><HostLink id="870"><ParentId id="871">860</ParentId><ParentPath id="872">AnalysisDataSourceTest::CheckSourcesPast::checkRewardDurations</ParentPath></HostLink><Notes id="873"/><Pos id="874">201,384</Pos></UIElement></UIData><Analysis id="489"><AnalysisFunction id="627"><HostLink id="628"><ParentId id="629">4</ParentId><ParentPath id="630">Test::Top</ParentPath></HostLink><Inputs id="631">trueVal,errorStr</Inputs><Name id="632">assert</Name><Script id="633">if(!trueVal)
{
	outFile.writeLine(errorStr);
	print(errorStr);
	debugger;
}</Script><UIEnabled id="634">false</UIEnabled><UIOrder id="635">0</UIOrder></AnalysisFunction><AnalysisFunction id="587"><HostLink id="588"><ParentId id="589">53</ParentId><ParentPath id="590">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="591"/><Name id="592">checkRewards</Name><Script id="603">assert(Reward.unitQuantity &lt; Reward.minRewardPeriod,&quot;Unit reward quantity must be less than minRewardPeriod for the reward in this experiment.&quot;);
var rewardList = rewardData.getNextTimes(Timer.timeout/1000 - frameData.getLatestTime() + 0.3);
matchCurrNextData(rewardList,rewardBuffer);
//Check that our latest reward value matches the previous next reward
//value if there is one
var lastFrameLength = frameData.getLatestTime() - frameData.getPrevTime();
if(	
	(lastFrameLength * 1000 &lt; Reward.minRewardPeriod) 
	&amp;&amp; (nextReward.value &gt;  0)
	&amp;&amp; (nextReward.value != rewardData.getNextTime())
	)
{
	assert(nextReward.value  == rewardData.getLatestTime(),&quot;Latest reward time value: &quot; 
			+ rewardData.getLatestTime()
			+&quot; and previously recorded next reward time value: &quot;
			+ nextReward.value
			+&quot; don't match up&quot;);
}
nextReward.value = rewardData.getNextTime();</Script><UIEnabled id="604">false</UIEnabled><UIOrder id="605">0</UIOrder></AnalysisFunction><AnalysisFunction id="612"><HostLink id="613"><ParentId id="614">53</ParentId><ParentPath id="615">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="616"/><Name id="617">checkFrames</Name><Script id="618">//Check that our list of frames since the beginning of the state maches
//last frame's list
var frameList = frameData.getNextTimes(Timer.timeout/1000 - frameData.getLatestTime());
matchCurrNextData(frameList,frameBuffer);
//Check that our latest frame value matches last frame's next
//frame value
if(frameNum.value !=  0)
{
	assert(nextFrame.value == frameData.getLatestTime(),&quot;Latest frame time value and previously recorded next frame time value don't match up.&quot;);
}
nextFrame.value = frameData.getNextTime();</Script><UIEnabled id="619">false</UIEnabled><UIOrder id="620">0</UIOrder></AnalysisFunction><AnalysisFunction id="642"><HostLink id="643"><ParentId id="644">53</ParentId><ParentPath id="645">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="646">next,lastNext</Inputs><Name id="647">matchCurrNextData</Name><Script id="648">if(lastNext.length() &amp;&amp; next.length)
{
	//Find the time in the lastNext list that is at the beginning of the next list
	for(var i=0;i&lt;lastNext.length();i++)
	{
		if(next[0] == lastNext.getValueAsNum(i))
			break;
	}
	//Verify that the beginning of the next list is in the lastNext list
	assert(i &lt; lastNext.length(),&quot;The beginning of the next list is not in the lastNext list&quot;);

	//Make sure that all values from the beginning of the next list to one before
	//the end are in the lastNext list.  We don't check one before the end of the list due to 
	//possible floating point offset issues adding or subtracting a single value from the end
	//of the list.
	var beginOffset = i;
	for(var i=0; i&lt;next.length-1;i++)
	{
		assert(lastNext.getValueAsNum(beginOffset + i) == next[i], &quot;A value in the lastNext list: &quot; + lastNext.getValueAsNum(beginOffset + i) + &quot; doesn't correspond to a value in the next list: &quot; + next[i]);
	}
}
else if(!next.length)
{
	//If there's no next list, make sure that the lastNext list ended before the current
	//time
	assert(lastNext.lastAsNum() &lt;= frameData.getLatestTime(),&quot;The next list was empty but shouldn't have been.&quot;);
}
lastNext.fromArray(next);</Script><UIEnabled id="649">false</UIEnabled><UIOrder id="650">0</UIOrder></AnalysisFunction><AnalysisOutput type="File" id="505"><FileSuffix id="506">.resultsFuture.txt</FileSuffix><FileType id="507">Text</FileType><HostLink id="508"><ParentId id="509">4</ParentId><ParentPath id="510">Test::Top</ParentPath></HostLink><Name id="511">outFile</Name><UIEnabled id="512">false</UIEnabled><UIOrder id="513">0</UIOrder></AnalysisOutput><AnalysisScriptContainer id="520"><AnalysisEntryScript id="527">//Verify that there will be enough time to finish all the rewards within the state
assert(Reward.minRewardPeriod*(Reward.number+1) &lt; Timer.timeout);

//If there is at least one frame in the list of next frames and this state is not 
//manually stopped.
var nextFrames = frameData.getNextTimes(Timer.timeout).length &gt; 0;
if(nextFrames.length &amp;&amp; nextFrames[nextFrames.length-1] - nextFrames[0] &gt; Timer.timeout/1000)
{
	//Verify that we have the correct number of rewards in the list from the reward data source
	assert(rewardData.getNextTimes( Timer.timeout+0.300).length == Reward.number);
}

//Verify that first reward isn't before the beginning of the state and last
//reward isn't after the end of the frame.</AnalysisEntryScript><AnalysisExitScript id="528"/><AnalysisFrameScript id="529">checkRewards();
checkFrames();
frameNum.value++;</AnalysisFrameScript><HostLink id="521"><ParentId id="522">53</ParentId><ParentPath id="523">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="524">NotYetNamed</Name><UIEnabled id="525">false</UIEnabled><UIOrder id="526">0</UIOrder></AnalysisScriptContainer><AnalysisScriptContainer type="Frame" id="556"><HostLink id="557"><ParentId id="558">53</ParentId><ParentPath id="559">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="560">frameData</Name><UIEnabled id="561">false</UIEnabled><UIOrder id="562">0</UIOrder></AnalysisScriptContainer><AnalysisScriptContainer type="Reward" id="574"><HostLink id="575"><ParentId id="576">53</ParentId><ParentPath id="577">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="578">rewardData</Name><UIEnabled id="579">false</UIEnabled><UIOrder id="580">0</UIOrder></AnalysisScriptContainer><AnalysisVariable type="VariableList" id="530"><HostLink id="531"><ParentId id="532">53</ParentId><ParentPath id="533">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="534">rewardBuffer</Name><UIEnabled id="535">false</UIEnabled><UIOrder id="536">0</UIOrder></AnalysisVariable><AnalysisVariable type="VariableList" id="543"><HostLink id="544"><ParentId id="545">53</ParentId><ParentPath id="546">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="547">frameBuffer</Name><UIEnabled id="548">false</UIEnabled><UIOrder id="549">0</UIOrder></AnalysisVariable><AnalysisVariable type="NumberVariable" id="657"><HostLink id="658"><ParentId id="659">53</ParentId><ParentPath id="660">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="661">nextReward</Name><UIEnabled id="662">false</UIEnabled><UIOrder id="663">0</UIOrder><Value id="664">-1</Value></AnalysisVariable><AnalysisVariable type="NumberVariable" id="671"><HostLink id="672"><ParentId id="673">53</ParentId><ParentPath id="674">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="675">nextFrame</Name><UIEnabled id="676">false</UIEnabled><UIOrder id="677">0</UIOrder><Value id="678">-1</Value></AnalysisVariable><AnalysisVariable type="NumberVariable" id="685"><HostLink id="686"><ParentId id="687">53</ParentId><ParentPath id="688">Test::Top::Trial::TestValues</ParentPath></HostLink><Name id="689">frameNum</Name><UIEnabled id="690">false</UIEnabled><UIOrder id="691">0</UIOrder><Value id="692">0</Value></AnalysisVariable><AssociateId id="490">{c2bd951a-afb5-45d9-9d8b-b70295a0a1d0}</AssociateId><HostId id="491">{d66bfd08-a9b5-43f9-978f-65f946650e20}</HostId><LinkedHostId id="492">{37b3c4fd-c0b7-4de3-a474-72eea8f71773}</LinkedHostId><LinkedHostName id="493">Experiment</LinkedHostName><Name id="494">CheckSourcesFuture</Name><UIEnabled id="495">false</UIEnabled><UIOrder id="496">0</UIOrder><AnalysisFunction id="875"><HostLink id="876"><ParentId id="877">53</ParentId><ParentPath id="878">Test::Top::Trial::TestValues</ParentPath></HostLink><Inputs id="879"/><Name id="880">checkRewardDurations</Name><Script id="881">assert(preReward.unitQuantity &lt; preReward.minRewardPeriod,&quot;Unit reward quantity must be less than minRewardPeriod for the reward in this experiment.&quot;);
var rewardList = rewardData.getNextDurations(Timer.timeout/1000 - frameData.getLatestTime() + 1.3);
//Check first if postReward.numRewards values are correct and then if Reward.numRewards values are correct
for(var i=rewardList.length-1;i&gt;rewardList.length-1 - postReward.number;i--)
{
	assert(rewardList[i] = postReward.unitQuantity,&quot;A reward duration returned from getNextDurations() was invalid.&quot;);
}
assert(i &gt; 0,&quot;getNextDuration() didn't return enough values.&quot;);
for(;i&gt;=0;i--)
{
	assert(rewardList[i] = Reward.unitQuantity,&quot;A reward duration returned from getNextDurations() was invalid.&quot;);
}
assert(rewardData.getNextDuration() ==rewardList[0],&quot;Reward duration from getNexttDuration() was invalid.&quot;);</Script><UIEnabled id="882">false</UIEnabled><UIOrder id="883">0</UIOrder></AnalysisFunction></Analysis><UIData id="497"><AssociateId id="498">{c6d8c8f0-2068-49fe-971c-4e7376f118c4}</AssociateId><LinkedHostId id="499">{d66bfd08-a9b5-43f9-978f-65f946650e20}</LinkedHostId><LinkedHostName id="500">CheckSourcesFuture</LinkedHostName><Name id="501">NotYetNamed</Name><OpenAsset id="502">0</OpenAsset><UIElement id="636"><HostLink id="637"><ParentId id="638">627</ParentId><ParentPath id="639">AnalysisDataSourceTest::CheckSourcesFuture::assert</ParentPath></HostLink><Notes id="640"/><Pos id="641">200,288</Pos></UIElement><UIElement id="514"><HostLink id="515"><ParentId id="516">505</ParentId><ParentPath id="517">AnalysisDataSourceTest::CheckSourcesFuture::outFile</ParentPath></HostLink><Notes id="518"/><Pos id="519">395,320</Pos></UIElement><UIElement id="606"><HostLink id="607"><ParentId id="608">587</ParentId><ParentPath id="609">AnalysisDataSourceTest::CheckSourcesFuture::checkRewards</ParentPath></HostLink><Notes id="610"/><Pos id="611">86,378</Pos></UIElement><UIElement id="621"><HostLink id="622"><ParentId id="623">612</ParentId><ParentPath id="624">AnalysisDataSourceTest::CheckSourcesFuture::checkFrames</ParentPath></HostLink><Notes id="625"/><Pos id="626">195,380</Pos></UIElement><UIElement id="651"><HostLink id="652"><ParentId id="653">642</ParentId><ParentPath id="654">AnalysisDataSourceTest::CheckSourcesFuture::matchCurrNextData</ParentPath></HostLink><Notes id="655"/><Pos id="656">125,483</Pos></UIElement><UIElement id="563"><HostLink id="569"><ParentId id="570">556</ParentId><ParentPath id="571">AnalysisDataSourceTest::CheckSourcesFuture::frameData</ParentPath></HostLink><Notes id="572"/><Pos id="573">603,298</Pos></UIElement><UIElement id="581"><HostLink id="582"><ParentId id="583">574</ParentId><ParentPath id="584">AnalysisDataSourceTest::CheckSourcesFuture::rewardData</ParentPath></HostLink><Notes id="585"/><Pos id="586">594,209</Pos></UIElement><UIElement id="537"><HostLink id="538"><ParentId id="539">530</ParentId><ParentPath id="540">AnalysisDataSourceTest::CheckSourcesFuture::rewardBuffer</ParentPath></HostLink><Notes id="541"/><Pos id="542">487,215</Pos></UIElement><UIElement id="550"><HostLink id="551"><ParentId id="552">543</ParentId><ParentPath id="553">AnalysisDataSourceTest::CheckSourcesFuture::frameBuffer</ParentPath></HostLink><Notes id="554"/><Pos id="555">490,306</Pos></UIElement><UIElement id="665"><HostLink id="666"><ParentId id="667">657</ParentId><ParentPath id="668">AnalysisDataSourceTest::CheckSourcesFuture::nextReward</ParentPath></HostLink><Notes id="669"/><Pos id="670">380,207</Pos></UIElement><UIElement id="679"><HostLink id="680"><ParentId id="681">671</ParentId><ParentPath id="682">AnalysisDataSourceTest::CheckSourcesFuture::nextFrame</ParentPath></HostLink><Notes id="683"/><Pos id="684">376,309</Pos></UIElement><UIElement id="693"><HostLink id="694"><ParentId id="695">685</ParentId><ParentPath id="696">AnalysisDataSourceTest::CheckSourcesFuture::frameNum</ParentPath></HostLink><Notes id="697"/><Pos id="698">551,406</Pos></UIElement><UIEnabled id="503">false</UIEnabled><UIOrder id="504">0</UIOrder><UIElement id="884"><HostLink id="885"><ParentId id="886">875</ParentId><ParentPath id="887">AnalysisDataSourceTest::CheckSourcesFuture::checkRewardDurations</ParentPath></HostLink><Notes id="888"/><Pos id="889">307,388</Pos></UIElement></UIData></PictoData>