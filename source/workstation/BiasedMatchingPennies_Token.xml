<PictoData><AnalysisContainer id="0">
  <AnalysisDefinition id="0"><Period id="0"><EnderContainer id="0"><Name id="">EndTriggers</Name><UIInfo id="0"><Pos id="" x="1780" y="1661"/></UIInfo><Trigger type="Element" id="0"><ElementPath id="">Frame and Risky Choice::Top::Block::PostWatch</ElementPath><Name id="">PostwatchEnds</Name><UIInfo id="0"><Pos id="" x="1538" y="1388"/></UIInfo><When id="">Ends</When></Trigger></EnderContainer><Name id="">trial</Name><StarterContainer id="0"><Name id="">StartTriggers</Name><UIInfo id="0"><Pos id="" x="1648" y="1665"/></UIInfo><Trigger type="Element" id="0"><Name id="">PrewatchBegins</Name><UIInfo id="0"><Pos id="" x="1301" y="1345"/></UIInfo><ElementPath id="">Frame and Risky Choice::Top::Block::PreWatch</ElementPath></Trigger></StarterContainer><UIInfo id="0"><Pos id="" x="1721" y="1715"/></UIInfo><EndBufferMs id="">1000</EndBufferMs><StartBufferMs id="">1000</StartBufferMs><Trigger type="Element" id="0"><ElementPath id="">Frame and Risky Choice::Top::Block::Pause</ElementPath><Name id="">PauseStarts</Name><UIInfo id="0"><Pos id="" x="1874" y="1903"/></UIInfo><DataSource type="Property" id="0"><Name id="">ernData</Name><PropertyPath id="">Frame and Risky Choice::Top::ernData::Values</PropertyPath><UIInfo id="0"><Pos id="" x="1767" y="1679"/></UIInfo></DataSource><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1921" y="1677"/></UIInfo></DataSource><DataSource type="Property" id="0"><Name id="">algo1pr</Name><PropertyPath id="">Frame and Risky Choice::Top::Block::alg1Pr::Values</PropertyPath><UIInfo id="0"><Pos id="" x="1755" y="1797"/></UIInfo></DataSource><DataSource type="Property" id="0"><Name id="">algo1bias</Name><PropertyPath id="">Frame and Risky Choice::Top::Block::alg1Bias::Values</PropertyPath><UIInfo id="0"><Pos id="" x="1887" y="1790"/></UIInfo></DataSource><DataSource type="Property" id="0"><Name id="">algo2pr</Name><PropertyPath id="">Frame and Risky Choice::Top::Block::alg2Pr::Values</PropertyPath><UIInfo id="0"><Pos id="" x="2016" y="1785"/></UIInfo></DataSource><DataSource type="Property" id="0"><Name id="">algo2bias</Name><PropertyPath id="">Frame and Risky Choice::Top::Block::alg2Bias::Values</PropertyPath><UIInfo id="0"><Pos id="" x="2141" y="1788"/></UIInfo></DataSource></Trigger><Trigger type="Element" id="0"><ElementPath id="">Frame and Risky Choice::Top::Block::ConsumeTrial</ElementPath><Name id="">ConsumeTrialStarts</Name><UIInfo id="0"><Pos id="" x="1850" y="1790"/></UIInfo><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1387" y="1460"/></UIInfo></DataSource></Trigger><Trigger type="Element" id="0"><ElementPath id="">Frame and Risky Choice::Top::Block::Trial::ShowRing</ElementPath><Name id="">ShowRingStarts</Name><UIInfo id="0"><Pos id="" x="1614" y="1903"/></UIInfo><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1469" y="1632"/></UIInfo></DataSource></Trigger><Trigger type="Element" id="0"><ElementPath id="">Frame and Risky Choice::Top::Block::Trial::Fixation</ElementPath><Name id="">FixationStarts</Name><UIInfo id="0"><Pos id="" x="1737" y="1905"/></UIInfo><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1499" y="1440"/></UIInfo></DataSource></Trigger><Script id="">//Function for getting first time a trigger occurs in the current trial
function getFirstTime(list) {
    for (var i = 0; i &lt; list.length; i++) {
        if (
				(list[i].time.value &lt; startTime)
				|| (list[i].time.value &gt; endTime)
			)
            continue;
        return Math.round(1000 * (list[i].time.value - startTime));
    }
    return -1;
}

//Initialize variables
var ernStr = &quot;&quot;;
var isConsume = getFirstTime(ConsumeTrialStarts) &gt;= 0;
var rewardTimes = &quot;-1,-1,-1,-1,-1,-1,&quot;;
var expErnStr = &quot;&quot;;
var fixStartTime = getFirstTime(FixationStarts);
var sampleStartTime = getFirstTime(SampleStarts);
var sampleEndTime = getFirstTime(SampleEnds);
var saccadeInitTime = getFirstTime(MakeChoiceStarts);
var showRingTime = getFirstTime(ShowRingStarts);
var showDotTime = getFirstTime(ShowDotStarts);
var choiceEnteredTime = -1;

//Get time that monkey entered choice target
for (var i = 0; i &lt; ChoiceEntered.length; i++) {
    if (
			(ChoiceEntered[i].time.value &lt; startTime)
			|| (ChoiceEntered[i].time.value &gt; endTime)
		)
        continue;
    if (ChoiceEntered[i].value.value == &quot;true&quot;) {
        choiceEnteredTime = Math.round(1000 * (ChoiceEntered[i].time.value - startTime));
        break;
    }
}

//If its a consume trial, get all 6 reward times and put them in a comma separated string
if (isConsume) {
    rewardTimes = &quot;&quot;;
    for (var i = 0; i &lt; RewardStarts.length; i++) {
        if (
				(RewardStarts[i].time.value &lt; startTime)
				|| (RewardStarts[i].time.value &gt; endTime)
			)
            continue;
        rewardTimes += Math.round(1000 * (RewardStarts[i].time.value - startTime)) + &quot;,&quot;;
    }
}

//When trial ends, put together ern comma separated text
for (var i = 0; i &lt; PauseStarts.length; i++) {
    if (
			(PauseStarts[i].time.value &lt; startTime)
			|| (PauseStarts[i].time.value &gt; endTime)
		)
        continue;
    expErnStr = PauseStarts[i].ernData.value;
    ernStr += &quot;&quot; + expErnStr + &quot;,&quot;; //Add all ern data saved during the experiment
    //Add all consume trial data or zeroes if its a regular trial
    if (!isConsume) {
        ernStr += PauseStarts[i].algo1pr.value + &quot;,&quot;
		+ PauseStarts[i].algo1bias.value + &quot;,&quot;
		+ PauseStarts[i].algo2pr.value + &quot;,&quot;
		+ PauseStarts[i].algo2bias.value;
    }
    else {
        ernStr += &quot;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0&quot;;
    }
    //Add timing data
    ernStr += &quot;,&quot; + Math.round(1000 * startTime) + &quot;,&quot;	//Trial start time
	+ fixStartTime + &quot;,&quot;
	+ sampleStartTime + &quot;,&quot;
	+ sampleEndTime + &quot;,&quot;
	+ saccadeInitTime + &quot;,&quot;
	+ choiceEnteredTime + &quot;,&quot;
	+ showRingTime + &quot;,&quot;
	+ showDotTime + &quot;,&quot;
	+ rewardTimes //no comma here, its included in rewardTimes
	+ Math.round(1000 * (endTime - startTime)); //Trial end time
}
//Add spike data
ernStr += &quot;,&quot; + &quot;-1000&quot; + &quot;,&quot;	//Spike window start
+ Math.round(1000 * (endTime + 1 - startTime)) + &quot;,&quot;; //Spike window end

//Loop through spikes building up data strings for each channel/unit and counting total numbers of spikes
var totNeurons = 0;
var spikeStrs = [];
for (var j = 0; j &lt; spikes.length; j++) {
    var chan = spikes[j].data.channel;
    var unit = spikes[j].data.unit;
    var spikeTime = &quot;&quot; + Math.round(1000 * (spikes[j].time.value - startTime));
    if (typeof spikeStrs[chan] == 'undefined')
        spikeStrs[chan] = [];
    if (typeof spikeStrs[chan][unit] == 'undefined') {
        totNeurons++;
        spikeStrs[chan][unit] = [];
        spikeStrs[chan][unit].text = &quot;&quot;;
        spikeStrs[chan][unit].num = 0;
    }
    spikeStrs[chan][unit].text += &quot;,&quot; + spikeTime;
    spikeStrs[chan][unit].num++;
}
//Create strings here.
ernStr += totNeurons;
for (var j = 0; j &lt; spikeStrs.length; j++) {
    if (typeof spikeStrs[j] == 'undefined')
        continue;
    for (var k = 0; k &lt; spikeStrs[j].length; k++) {
        if (typeof spikeStrs[j][k] == 'undefined')
            continue;
        //Chan,Unit,Num,All Times
        ernStr += &quot;,&quot; + j + &quot;,&quot; + k + &quot;,&quot; + spikeStrs[j][k].num + spikeStrs[j][k].text;
    }
}
//finish off line
ernStr += &quot;\n&quot;;
ernStr = ernStr.replace(/,/g, &quot; &quot;);
ernFile.writeText(ernStr);

//Build up .eye output
var eyeStr = &quot;&quot;;
var ernFields = expErnStr.split(&quot;,&quot;);
eyeStr += ernFields[0] + &quot;,&quot;//totalTrial
        + ernFields[3] + &quot;,&quot;//blockNumber
        + ernFields[4] + &quot;,&quot;//trial_success
        + fixStartTime + &quot;,&quot;//fix_start_time
        + sampleStartTime + &quot;,&quot;//sample_start_time
        + sampleEndTime + &quot;,&quot;//sample_stop_time
        + showRingTime + &quot;,&quot;//show_start_time
        + ernFields[6] + &quot;,&quot;//monkey_pick
        + ernFields[7] + &quot;,&quot;//compPick
        + ernFields[15] + &quot;,&quot;;  //rewCount
var neyes = 0;
var xThenY = &quot;&quot;;
for (var i = 0; i &lt; eye.length; i++) {
    if (
			(eye[i].data.time &lt; startTime)
			|| (eye[i].data.time &gt; endTime)
		)
        continue;
    neyes++;
    xThenY += &quot;,&quot; + eye[i].data.value[0];   //xs
}

for (var i = 0; i &lt; eye.length; i++) {
    if (
			(eye[i].data.time &lt; startTime)
			|| (eye[i].data.time &gt; endTime)
		)
        continue;
    xThenY += &quot;,&quot; + eye[i].data.value[1];   //ys
}
eyeStr += &quot;&quot; + neyes;
if (neyes &gt; 0) {
    eyeStr += xThenY;
}

eyeFile.writeBinary(eyeStr, &quot;int,int,int,int,int,int,int,int,int,int,int,short&quot;);

//Build up .lfp output
if (lfp.length) {
    var lfpStr = &quot;&quot;;
    lfpStr += ernFields[0] + &quot;,&quot;//totalTrial
            + ernFields[3] + &quot;,&quot;//blockNumber
            + ernFields[5] + &quot;,&quot;//trial_type
            + ernFields[4] + &quot;,&quot;//trial_success
            + fixStartTime + &quot;,&quot;//fix_start_time
            + sampleStartTime + &quot;,&quot;//sample_start_time
            + sampleEndTime + &quot;,&quot;//sample_stop_time
            + showRingTime + &quot;,&quot;//show_start_time
            + ernFields[6] + &quot;,&quot;//monkey_pick
            + ernFields[7] + &quot;,&quot;//compPick
            + ernFields[15] + &quot;,&quot;;  //rewCount

    //Loop through lfp building up data strings for each channel and counting total number of lfp vals
    var totChans = 0;
    var lfpStrs = [];
    for (var i = 0; i &lt; lfp.length; i++) {
        var chan = lfp[i].data.channel;
        var lfpTime = &quot;&quot; + Math.round(1000 * (lfp[i].data.time));
        if (typeof lfpStrs[chan] == 'undefined') {
            totChans++;
            lfpStrs[chan] = [];
            lfpStrs[chan].text = &quot;&quot;;
            lfpStrs[chan].num = 0;
            lfpStrs[chan].startTime = lfpTime;
            lfpStrs[chan].time_per_samp = 0;
        }
        if (lfpStrs[chan].num == 1) {
            lfpStrs[chan].time_per_samp = lfpTime - lfpStrs[chan].startTime;
        }
        lfpStrs[chan].text += &quot;,&quot; + lfp[i].data.value;
        lfpStrs[chan].num++;
    }
    //Create strings here.
    var nLfp = 0;
    lfpStr += totChans + &quot;,&quot;;
    for (var i = 0; i &lt; lfpStrs.length; i++) {
        if (typeof lfpStrs[i] == 'undefined')
            continue;
        //Chan,Unit,Num,All Times
        lfpStr += i + &quot;,&quot; + lfpStrs[i].startTime + &quot;,&quot; + lfpStrs[i].time_per_samp + &quot;,&quot;;
        nLfp = lfpStrs[i].num;
    }
    lfpStr += nLfp;   //They should all have the same nLFP so we only print it once
    lfpFile.writeBinary(lfpStr, &quot;int&quot;); //Write all ints to file
    var lfpDatStr = &quot;&quot;;
    for (var i = 0; i &lt; lfpStrs.length; i++) {
        if (typeof lfpStrs[i] == 'undefined')
            continue;
        //Data
        lfpDatStr += lfpStrs[i].text;
    }
    lfpFile.writeBinary(lfpDatStr.substring(1), &quot;float&quot;);    //Don't use first comma
}

//Build up .swf output
if (spikes.length) {
    var swfStr = &quot;&quot;;
    for (var i = 0; i &lt; spikes.length; i++) {

        swfStr += ernFields[0] + &quot;,&quot;; //totalTrial
        swfStr += spikes[i].data.channel + &quot;,&quot;; //channel
        swfStr += spikes[i].data.unit + &quot;,&quot;; //unit
        swfStr += Math.round(1000 * (spikes[i].time.value - startTime)) + &quot;,&quot;; //spiketime
        swfStr += (1000 * spikes[i].data.samplePeriod) + &quot;,&quot;; //time per sample
        swfStr += spikes[i].data.waveSize + &quot;,&quot;; //size
        swfStr += spikes[i].data.wave; //wave
        swfStr += &quot;\n&quot;;
    }
    swfStr = swfStr.replace(/,/g, &quot; &quot;);
    swfFile.writeText(swfStr);
}</Script><Tool type="File" id="0"><FileName id="">.ern</FileName><Name id="">ernFile</Name><UIInfo id="0"><Pos id="" x="1932" y="1665"/></UIInfo></Tool><Trigger type="Element" id="0"><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1325" y="1658"/></UIInfo></DataSource><ElementPath id="">Frame and Risky Choice::Top::Block::Trial::Sample</ElementPath><Name id="">SampleStarts</Name><UIInfo id="0"><Pos id="" x="1620" y="2022"/></UIInfo></Trigger><Trigger type="Element" id="0"><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1494" y="1652"/></UIInfo></DataSource><ElementPath id="">Frame and Risky Choice::Top::Block::Trial::Sample</ElementPath><Name id="">SampleEnds</Name><UIInfo id="0"><Pos id="" x="1741" y="2020"/></UIInfo><When id="">Ends</When></Trigger><Trigger type="Element" id="0"><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1684" y="1699"/></UIInfo></DataSource><ElementPath id="">Frame and Risky Choice::Top::Block::Trial::ShowDot</ElementPath><Name id="">ShowDotStarts</Name><UIInfo id="0"><Pos id="" x="1874" y="2023"/></UIInfo></Trigger><Trigger type="Element" id="0"><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1505" y="1656"/></UIInfo></DataSource><ElementPath id="">Frame and Risky Choice::Top::Block::Trial::SampleChoiceControl::MakeChoice</ElementPath><Name id="">MakeChoiceStarts</Name><UIInfo id="0"><Pos id="" x="1992" y="2033"/></UIInfo></Trigger><Trigger type="Property" id="0"><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1669" y="1521"/></UIInfo></DataSource><DataSource type="Property" id="0"><Name id="">value</Name><PropertyPath id="">Frame and Risky Choice::Top::Block::Trial::SampleChoiceControl::choiceEntered::Value</PropertyPath><UIInfo id="0"><Pos id="" x="1472" y="1514"/></UIInfo></DataSource><Name id="">ChoiceEntered</Name><PropertyPath id="">Frame and Risky Choice::Top::Block::Trial::SampleChoiceControl::choiceEntered::Value</PropertyPath><UIInfo id="0"><Pos id="" x="1991" y="1893"/></UIInfo></Trigger><Trigger type="Element" id="0"><ElementPath id="">Frame and Risky Choice::Top::Block::ConsumeTrial::Reward</ElementPath><Name id="">RewardStarts</Name><UIInfo id="0"><Pos id="" x="1978" y="1781"/></UIInfo><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1706" y="1633"/></UIInfo></DataSource></Trigger><Trigger type="Spike" id="0"><DataSource type="Spike" id="0"><Name id="">data</Name><UIInfo id="0"><Pos id="" x="1460" y="1550"/></UIInfo><DecimalPlaces id="">5</DecimalPlaces><ScaleFactor id="">1</ScaleFactor></DataSource><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1633" y="1551"/></UIInfo></DataSource><Name id="">spikes</Name><UIInfo id="0"><Pos id="" x="1734" y="1783"/></UIInfo></Trigger><Trigger type="Signal" id="0"><DataSource type="Signal" id="0"><Name id="">data</Name><UIInfo id="0"><Pos id="" x="1414" y="1523"/></UIInfo><SignalName id="">Position</SignalName></DataSource><Name id="">eye</Name><SignalName id="">Position</SignalName><UIInfo id="0"><Pos id="" x="1599" y="1789"/></UIInfo><DataSource type="Time" id="0"><Name id="">time</Name><UIInfo id="0"><Pos id="" x="1545" y="1519"/></UIInfo></DataSource></Trigger><Tool type="File" id="0"><FileName id="">.eye</FileName><Name id="">eyeFile</Name><UIInfo id="0"><Pos id="" x="2049" y="1663"/></UIInfo><BinaryByteOrder id="">LittleEndian</BinaryByteOrder></Tool><Tool type="File" id="0"><FileName id="">.swf</FileName><Name id="">swfFile</Name><UIInfo id="0"><Pos id="" x="2176" y="1668"/></UIInfo></Tool><Tool type="File" id="0"><FileName id="">.lfp</FileName><Name id="">lfpFile</Name><UIInfo id="0"><Pos id="" x="2288" y="1667"/></UIInfo><BinaryByteOrder id="">LittleEndian</BinaryByteOrder></Tool><Trigger type="LFP" id="0"><DataSource type="LFP" id="0"><Name id="">data</Name><UIInfo id="0"><Pos id="" x="1520" y="1589"/></UIInfo></DataSource><Name id="">lfp</Name><UIInfo id="0"><Pos id="" x="2086" y="1776"/></UIInfo></Trigger></Period><UIInfo id="0"><Pos id="" x="1974" y="2000"/></UIInfo><Name id="">MatchingPenniesAnalysis</Name><Script id="">
      readme.writeLine(&quot;Name:\t&quot; + name);
      readme.writeLine(&quot;Started:\t&quot; +startTime);
      readme.writeLine(&quot;Ended:\t&quot; +endTime);
      readme.writeLine(&quot;Run Number:\t&quot; + runNumber);
      readme.writeLine(&quot;-----Notes-----&quot;);
      readme.writeLine(notes);
    </Script><Tool type="File" id="0"><FileName id="">_readme.txt</FileName><Name id="">readme</Name><UIInfo id="0"><Pos id="" x="1860" y="1722"/></UIInfo><BinaryByteOrder id="">BigEndian</BinaryByteOrder></Tool></AnalysisDefinition>
  </AnalysisContainer><Experiment id="1">
    <SyntaxVersion id="2">0.0.1</SyntaxVersion>
<UIInfo id="390">
	<Pos id="392" x="0" y="0"/>
<OpenDescendant id="597">2738</OpenDescendant></UIInfo>
<Task id="587"><Name id="588">RewardCalibration</Name><StateMachine id="589"><EntryScript id="590"/><ExitScript id="591"/><Level id="592">Stage</Level><Name id="593">Top</Name><Type id="594">StateMachine</Type><UIEnabled id="595">false</UIEnabled><UIOrder id="599">0</UIOrder><UIInfo id="715"><Pos id="716" x="2000" y="2000"/></UIInfo><StateMachineElement type="StateMachine" id="744"><EntryScript id="745">GiveRewards.unitQuantity = RewardQuantity.value;
GiveRewards.minRewardPeriod = RewardQuantity.value+InterRewardTime.value;</EntryScript><ExitScript id="746"/><Level id="747">Stage</Level><Name id="748">Trial</Name><Result id="782"><Name id="783">RewardsSupplied</Name><UIEnabled id="784">false</UIEnabled><UIOrder id="788">0</UIOrder><UIInfo id="658"><Pos id="659" x="338" y="76"/></UIInfo></Result><StateMachineElement type="Reward" id="762"><MinRewardPeriod id="763">0</MinRewardPeriod><Name id="764">GiveRewards</Name><NumRewards id="765">1</NumRewards><Result id="676"><Name id="679">done</Name><UIEnabled id="680">false</UIEnabled><UIInfo id="681"><Pos id="687" x="2000" y="2000"/></UIInfo><UIOrder id="689">0</UIOrder></Result><RewardChan id="766">1</RewardChan><RewardQty id="767">60</RewardQty><Type id="768">Reward</Type><UIEnabled id="769">false</UIEnabled><UIOrder id="773">0</UIOrder><UIInfo id="694"><Pos id="697" x="554" y="184"/></UIInfo></StateMachineElement><Type id="749">StateMachine</Type><UIEnabled id="750">false</UIEnabled><UIOrder id="754">0</UIOrder><UIInfo id="729"><Pos id="730" x="97" y="177"/></UIInfo><Parameter type="Numeric" id="776"><Name id="777">InterRewardTime</Name><UIEnabled id="778">true</UIEnabled><UIOrder id="785">0</UIOrder><Units id="786"/><Value id="787">500</Value><UIInfo id="639"><Pos id="640" x="218" y="479"/></UIInfo></Parameter><Parameter type="Numeric" id="812"><Name id="813">RewardQuantity</Name><UIEnabled id="814">true</UIEnabled><UIOrder id="818">0</UIOrder><Units id="819"/><Value id="820">150</Value><UIInfo id="663"><Pos id="707" x="330" y="479"/></UIInfo></Parameter><Parameter type="Numeric" id="826"><Name id="827">NumRewards</Name><UIEnabled id="828">true</UIEnabled><UIOrder id="832">0</UIOrder><Units id="833"/><Value id="834">100</Value><UIInfo id="722"><Pos id="723" x="461" y="479"/></UIInfo></Parameter><StateMachineElement type="State" id="794"><BackgroundColor A="255" B="0" G="0" R="0" id="795">#000000</BackgroundColor><EntryScript id="796">RemainingRewards.text = &quot;RemainingRewards: &quot; + NumRewards.value;
RewardTimer.restart();</EntryScript><ExitScript id="797"/><FrameScript id="798"/><Name id="799">RewardsLeft</Name><UIEnabled id="800">false</UIEnabled><UIOrder id="804">0</UIOrder><Result id="890"><Name id="891">done</Name><UIEnabled id="892">false</UIEnabled><UIOrder id="896">0</UIOrder><UIInfo id="830"><Pos id="831" x="2156" y="2033"/></UIInfo></Result><UIInfo id="759"><Pos id="760" x="355" y="355"/></UIInfo><ControlElement type="Script Controller" id="944"><Name id="945">WaitForReward</Name><Result id="825"><Name id="829">Done</Name><UIEnabled id="835">false</UIEnabled><UIInfo id="845"><Pos id="846" x="0" y="0"/></UIInfo><UIOrder id="849">0</UIOrder></Result><Script id="946">return RewardTimer.value &gt;= RewardQuantity.value+InterRewardTime.value;</Script><Type id="947"/><UIEnabled id="948">false</UIEnabled><UIOrder id="952">0</UIOrder><UIInfo id="853"><Pos id="856" x="2000" y="2000"/></UIInfo></ControlElement><Parameter type="Timer" id="932"><Name id="933">RewardTimer</Name><TimeUnits id="934">Ms</TimeUnits><UIEnabled id="935">false</UIEnabled><UIOrder id="939">0</UIOrder><UIInfo id="859"><Pos id="860" x="1908" y="2242"/></UIInfo></Parameter><Transition id="866"><Destination id="867">done</Destination><Source id="868">WaitForReward</Source><SourceResult id="869">Done</SourceResult></Transition></StateMachineElement><StateMachineElement type="ScriptElement" id="840"><Name id="841">MoreRewards</Name><Result id="781"><Name id="789">false</Name><UIEnabled id="790">false</UIEnabled><UIInfo id="791"><Pos id="792" x="0" y="0"/></UIInfo><UIOrder id="801">0</UIOrder></Result><Result id="806"><Name id="807">true</Name><UIEnabled id="808">false</UIEnabled><UIInfo id="809"><Pos id="810" x="0" y="0"/></UIInfo><UIOrder id="815">0</UIOrder></Result><Script id="842">return NumRewards.value-- &gt; 0;</Script><Type id="843">ScriptElement</Type><UIEnabled id="844">false</UIEnabled><UIOrder id="848">0</UIOrder><UIInfo id="822"><Pos id="823" x="190" y="155"/></UIInfo></StateMachineElement><Transition id="836"><Destination id="837">GiveRewards</Destination><Source id="838">MoreRewards</Source><SourceResult id="839">true</SourceResult></Transition><Transition id="910"><Destination id="911">RewardsLeft</Destination><Source id="912">GiveRewards</Source><SourceResult id="915">done</SourceResult></Transition><Transition id="894"><Destination id="895">MoreRewards</Destination><Source id="897">RewardsLeft</Source><SourceResult id="898">done</SourceResult></Transition><Transition id="899"><Destination id="916">MoreRewards</Destination><Source id="917"/><SourceResult id="918"/></Transition><Transition id="919"><Destination id="920">RewardsSupplied</Destination><Source id="921">MoreRewards</Source><SourceResult id="922">false</SourceResult></Transition></StateMachineElement><Transition id="755"><Destination id="756">Trial</Destination><Source id="757"/><SourceResult id="758"/></Transition><StateMachineElement type="PausePoint" id="664"><BackgroundColor A="255" B="0" G="0" R="0" id="688">#000000</BackgroundColor><ForcePause id="691">true</ForcePause><Name id="692">Pause</Name><PausingScript id="693"/><RestartingScript id="698"/><Result id="646"><Name id="647">done</Name><UIEnabled id="648">false</UIEnabled><UIInfo id="649"><Pos id="657" x="0" y="0"/></UIInfo><UIOrder id="662">0</UIOrder></Result><Type id="699">PausePoint</Type><UIEnabled id="700">false</UIEnabled><UIOrder id="710">0</UIOrder><UIInfo id="709"><Pos id="711" x="379" y="98"/></UIInfo></StateMachineElement><Transition id="739"><Destination id="740">Trial</Destination><Source id="741">Pause</Source><SourceResult id="742">done</SourceResult></Transition><VisualElement type="Text Graphic" id="925"><Color A="255" B="0" G="0" R="255" id="926">#ff0000</Color><Dimensions height="20" id="927" width="200" x="0" y="0"/><Layer id="928">0</Layer><Name id="929">RemainingRewards</Name><OperatorView id="930">true</OperatorView><Position id="931" x="0" y="0"/><SubjectView id="936">true</SubjectView><Text id="937"/><UIEnabled id="938">false</UIEnabled><UIOrder id="943">0</UIOrder><Visible id="949">true</Visible><UIInfo id="906"><Pos id="907" x="252" y="302"/></UIInfo></VisualElement><Transition id="772"><Destination id="774">Pause</Destination><Source id="775">Trial</Source><SourceResult id="779">RewardsSupplied</SourceResult></Transition></StateMachine><UIInfo id="725"><Pos id="726" x="1618" y="1743"/></UIInfo></Task>
    <Task id="3">
      <StateMachine id="4">
        <Parameter type="OperatorClick" id="5">
          <Name id="6">operatorClick</Name>
          <UIInfo id="7">
            <Pos id="8" x="58" y="341"/>
          </UIInfo>
          <NewClick id="10">false</NewClick>
          <Pos id="11" x="294" y="302"/>
          <UIEnabled id="12">false</UIEnabled>
          <UIOrder id="13">0</UIOrder>
        </Parameter>
        <UIInfo id="14">
          <Pos id="15" x="2012" y="2000"/>
        </UIInfo>

        <Name id="18">PresentStimuli</Name>
        <Type id="19">StateMachine</Type>
        <StateMachineElement type="StateMachine" id="20">

          <Name id="22">PresentSingleStimulus</Name>
          <UIInfo id="23">
            <Pos id="24" x="184" y="178"/>
          </UIInfo>
          <StateMachineElement type="State" id="26">
            <EntryScript id="27">
              Square.alpha = 255;
              colWidth = Grid.width/Grid.columns;
              rowHeight = Grid.height/Grid.rows;
              Square.x = operatorClick.x-(operatorClick.x%colWidth)+colWidth/2;
              Square.y = operatorClick.y-(operatorClick.y%rowHeight)+rowHeight/2;
              Square.width = SquareDimension.value;
              Square.height = SquareDimension.value;
              Square.subjectView = true;
              Target.x = Square.x;
              Target.y = Square.y;
            </EntryScript>
            <FrameScript id="28"/>
            <Name id="29">PresentStimulus</Name>
            <Result id="30">
              <Name id="31">Failed</Name>
              <UIInfo id="32">
                <Pos id="33" x="1998" y="1547"/>
              </UIInfo>
              <UIEnabled id="35">false</UIEnabled>
              <UIOrder id="36">0</UIOrder>
            </Result>
            <UIInfo id="37">
              <Pos id="38" x="404" y="179"/>
            </UIInfo>
            <ExitScript id="40">
              Square.subjectView = false;
              Square.alpha = 122;
            </ExitScript>
            <ControlElement type="Target Controller" id="42">
              <Name id="43">FixationTracker</Name>
              <Result id="44">
                <Name id="45">Reaquistion Time Exceeded</Name>
                <UIEnabled id="46">false</UIEnabled>
                <UIInfo id="47">
                  <Pos id="48" x="2000" y="2000"/>
                </UIInfo>
                <UIOrder id="50">0</UIOrder>
              </Result>
              <Result id="51">
                <Name id="52">Initial Aquistion Time Exceeded</Name>
                <UIEnabled id="53">false</UIEnabled>
                <UIInfo id="54">
                  <Pos id="55" x="2209" y="2000"/>
                </UIInfo>
                <UIOrder id="57">0</UIOrder>
              </Result>
              <Result id="58">
                <Name id="59">Total Time Excceeded</Name>
                <UIEnabled id="60">false</UIEnabled>
                <UIInfo id="61">
                  <Pos id="62" x="2443" y="2000"/>
                </UIInfo>
                <UIOrder id="64">0</UIOrder>
              </Result>
              <Result id="65">
                <Name id="66">Broke Fixation</Name>
                <UIEnabled id="67">false</UIEnabled>
                <UIInfo id="68">
                  <Pos id="69" x="2609" y="2000"/>
                </UIInfo>
                <UIOrder id="71">0</UIOrder>
              </Result>
              <Result id="72">
                <Name id="73">Success</Name>
                <UIEnabled id="74">false</UIEnabled>
                <UIInfo id="75">
                  <Pos id="76" x="2723" y="2000"/>
                </UIInfo>
                <UIOrder id="78">0</UIOrder>
              </Result>
              <UIInfo id="79">
                <Pos id="80" x="1471" y="1498"/>
              </UIInfo>
              <ControlTarget id="82">Target</ControlTarget>
              <FixationTime id="83">400</FixationTime>
              <MaxInitialAcquisitionTime id="84">1100</MaxInitialAcquisitionTime>
              <SignalChannel id="85">Position</SignalChannel>
              <TimeUnits id="86">Ms</TimeUnits>
              <TotalTime id="87">1500</TotalTime>
              <MaxReacquisitionTime id="88">1100</MaxReacquisitionTime>
              <MinInitialAcquisitionTime id="89">0</MinInitialAcquisitionTime>
              <ReacquisitionAllowed id="90">true</ReacquisitionAllowed>
              <TargetEntryScript id="91"/>
              <TargetExitScript id="92"/>
              <Type id="93"/>
              <UIEnabled id="94">true</UIEnabled>
              <UIOrder id="95">0</UIOrder>
            </ControlElement>
            <Result id="96">
              <Name id="97">Fixated</Name>
              <UIInfo id="98">
                <Pos id="99" x="1992" y="1665"/>
              </UIInfo>
              <UIEnabled id="101">false</UIEnabled>
              <UIOrder id="102">0</UIOrder>
            </Result>
            <Transition id="103">
              <Destination id="104">Failed</Destination>
              <Source id="105">FixationTracker</Source>
              <SourceResult id="106">Reaquistion Time Exceeded</SourceResult>
            </Transition>
            <Transition id="107">
              <Destination id="108">Failed</Destination>
              <Source id="109">FixationTracker</Source>
              <SourceResult id="110">Initial Aquistion Time Exceeded</SourceResult>
            </Transition>
            <Transition id="111">
              <Destination id="112">Failed</Destination>
              <Source id="113">FixationTracker</Source>
              <SourceResult id="114">Total Time Excceeded</SourceResult>
            </Transition>
            <Transition id="115">
              <Destination id="116">Failed</Destination>
              <Source id="117">FixationTracker</Source>
              <SourceResult id="118">Broke Fixation</SourceResult>
            </Transition>
            <Transition id="119">
              <Destination id="120">Fixated</Destination>
              <Source id="121">FixationTracker</Source>
              <SourceResult id="122">Success</SourceResult>
            </Transition>
            <BackgroundColor A="255" B="0" G="0" R="0" id="123">#000000</BackgroundColor>
            <UIEnabled id="125">false</UIEnabled>
            <UIOrder id="126">0</UIOrder>
          </StateMachineElement>
          <Result id="127">
            <Name id="128">StimulusPresented</Name>
            <UIInfo id="129">
              <Pos id="130" x="631" y="103"/>
            </UIInfo>
            <UIEnabled id="132">false</UIEnabled>
            <UIOrder id="133">0</UIOrder>
          </Result>
          <Transition id="134">
            <Destination id="135">StimulusPresented</Destination>
            <Source id="136">PresentStimulus</Source>
            <SourceResult id="137">Failed</SourceResult>
          </Transition>
          <StateMachineElement type="State" id="138">
            <ControlElement type="Script Controller" id="139">
              <Name id="140">WaitForOperatorClick</Name>
              <Result id="141">
                <Name id="142">Done</Name>
                <UIEnabled id="143">false</UIEnabled>
                <UIInfo id="144">
                  <Pos id="145" x="2000" y="2000"/>
                </UIInfo>
                <UIOrder id="147">0</UIOrder>
              </Result>
              <Script id="148">return operatorClick.newClick;</Script>
              <UIInfo id="149">
                <Pos id="150" x="1189" y="1347"/>
              </UIInfo>
              <Type id="152"/>
              <UIEnabled id="153">false</UIEnabled>
              <UIOrder id="154">0</UIOrder>
            </ControlElement>
            <Name id="155">WaitForClick</Name>
            <Result id="156">
              <Name id="157">OperatorClicked</Name>
              <UIInfo id="158">
                <Pos id="159" x="1601" y="1367"/>
              </UIInfo>
              <UIEnabled id="161">false</UIEnabled>
              <UIOrder id="162">0</UIOrder>
            </Result>
            <UIInfo id="163">
              <Pos id="164" x="197" y="180"/>
            </UIInfo>
            <Transition id="166">
              <Destination id="167">OperatorClicked</Destination>
              <Source id="168">WaitForOperatorClick</Source>
              <SourceResult id="169">Done</SourceResult>
            </Transition>
            <ExitScript id="170">Square.red = 255;</ExitScript>
            <BackgroundColor A="255" B="0" G="0" R="0" id="171">#000000</BackgroundColor>
            <EntryScript id="173"/>
            <FrameScript id="174"/>
            <UIEnabled id="176">false</UIEnabled>
            <UIOrder id="177">0</UIOrder>
          </StateMachineElement>
          <Transition id="178">
            <Destination id="179">PresentStimulus</Destination>
            <Source id="180">WaitForClick</Source>
            <SourceResult id="181">OperatorClicked</SourceResult>
          </Transition>
          <VisualElement type="Grid Graphic" id="182">
            <Color A="255" B="255" G="255" R="255" id="183">#ffffff</Color>
            <Dimensions height="600" id="184" width="800" x="0" y="0"/>
            <Name id="185">Grid</Name>
            <UIInfo id="186">
              <Pos id="187" x="229" y="386"/>
            </UIInfo>
            <UIEnabled id="189">true</UIEnabled>
            <Columns id="190">7</Columns>
            <Rows id="191">7</Rows>
            <SubjectView id="192">false</SubjectView>
            <Layer id="193">0</Layer>
            <OperatorView id="194">true</OperatorView>
            <Position id="195" x="0" y="0"/>
            <UIOrder id="196">0</UIOrder>
            <Visible id="197">true</Visible>
          </VisualElement>
          <Parameter type="Range" id="198">
            <Increment id="199">1</Increment>
            <Max id="200">200</Max>
            <Name id="201">SquareDimension</Name>
            <UIInfo id="202">
              <Pos id="203" x="366" y="386"/>
            </UIInfo>
            <Value id="205">16</Value>
            <UIEnabled id="206">true</UIEnabled>
            <Min id="207">0</Min>
            <UIOrder id="208">0</UIOrder>
            <Units id="209"/>
          </Parameter>
          <StateMachineElement type="StateMachine" id="210">

            <Name id="212">FixationFeedback</Name>
            <Result id="213">
              <Name id="214">Done</Name>
              <UIInfo id="215">
                <Pos id="216" x="549" y="109"/>
              </UIInfo>
              <UIEnabled id="218">false</UIEnabled>
              <UIOrder id="219">0</UIOrder>
            </Result>
            <StateMachineElement type="ScriptElement" id="220">
              <Name id="221">SetTargetRed</Name>
              <Result id="222">
                <Name id="223">false</Name>
                <UIEnabled id="224">false</UIEnabled>
                <UIInfo id="225">
                  <Pos id="226" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="228">0</UIOrder>
              </Result>
              <Result id="229">
                <Name id="230">true</Name>
                <UIEnabled id="231">false</UIEnabled>
                <UIInfo id="232">
                  <Pos id="233" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="235">0</UIOrder>
              </Result>
              <Script id="236">Square.red = 0;</Script>
              <UIInfo id="237">
                <Pos id="238" x="90" y="219"/>
              </UIInfo>
              <Type id="240">ScriptElement</Type>
              <UIEnabled id="241">false</UIEnabled>
              <UIOrder id="242">0</UIOrder>
            </StateMachineElement>
            <StateMachineElement type="Reward" id="243">
              <Name id="244">Reward</Name>
              <Result id="245">
                <Name id="246">done</Name>
                <UIEnabled id="247">false</UIEnabled>
                <UIInfo id="248">
                  <Pos id="249" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="251">0</UIOrder>
              </Result>
              <RewardChan id="252">1</RewardChan>
              <RewardQty id="253">150</RewardQty>
              <UIInfo id="254">
                <Pos id="255" x="343" y="231"/>
              </UIInfo>
              <Type id="257">Reward</Type>
              <UIEnabled id="258">true</UIEnabled>
              <UIOrder id="259">0</UIOrder>
              <NumRewards id="499">1</NumRewards>
              <MinRewardPeriod id="491">125</MinRewardPeriod>
            </StateMachineElement>
            <Transition id="260">
              <Destination id="261">Reward</Destination>
              <Source id="262">SetTargetRed</Source>
              <SourceResult id="263">false</SourceResult>
            </Transition>
            <Transition id="264">
              <Destination id="265">Reward</Destination>
              <Source id="266">SetTargetRed</Source>
              <SourceResult id="267">true</SourceResult>
            </Transition>
            <Transition id="268">
              <Destination id="269">Done</Destination>
              <Source id="270">Reward</Source>
              <SourceResult id="271">done</SourceResult>
            </Transition>
            <UIInfo id="272">
              <Pos id="273" x="542" y="308"/>
            </UIInfo>
            <EntryScript id="275"/>
            <ExitScript id="276"/>
            <Level id="277">Stage</Level>
            <Type id="278">StateMachine</Type>
            <UIEnabled id="279">false</UIEnabled>
            <UIOrder id="280">0</UIOrder>
            <Transition id="502">
              <Destination id="498">SetTargetRed</Destination>
              <Source id="500"/>
              <SourceResult id="501"/>
            </Transition>
          </StateMachineElement>
          <Transition id="281">
            <Destination id="282">FixationFeedback</Destination>
            <Source id="283">PresentStimulus</Source>
            <SourceResult id="284">Fixated</SourceResult>
          </Transition>
          <Transition id="285">
            <Destination id="286">StimulusPresented</Destination>
            <Source id="287">FixationFeedback</Source>
            <SourceResult id="288">Done</SourceResult>
          </Transition>
          <EntryScript id="289">Target.radius = TargetRadius.value;</EntryScript>
          <Parameter type="Range" id="290">
            <Increment id="291">1</Increment>
            <Max id="292">1000</Max>
            <Min id="293">0</Min>
            <Name id="294">TargetRadius</Name>
            <UIEnabled id="295">true</UIEnabled>
            <UIInfo id="296">
              <Pos id="297" x="98" y="380"/>
            </UIInfo>
            <Value id="299">80</Value>
            <UIOrder id="300">0</UIOrder>
            <Units id="301"/>
          </Parameter>
          <ExitScript id="302"/>
          <Level id="303">Stage</Level>
          <Type id="304">StateMachine</Type>
          <UIEnabled id="305">false</UIEnabled>
          <UIOrder id="306">0</UIOrder>
          <Transition id="520">
            <Destination id="519">WaitForClick</Destination>
            <Source id="521"/>
            <SourceResult id="522"/>
          </Transition>
        </StateMachineElement>
        <VisualElement type="Box Graphic" id="307">
          <Color A="255" B="0" G="255" R="255" id="308">#ffff00</Color>
          <Dimensions height="0" id="309" width="0" x="0" y="0"/>
          <Name id="310">Square</Name>
          <UIInfo id="311">
            <Pos id="312" x="171" y="343"/>
          </UIInfo>
          <Visible id="314">true</Visible>
          <SubjectView id="315">false</SubjectView>
          <Layer id="316">0</Layer>
          <OperatorView id="317">true</OperatorView>
          <Outline id="318">false</Outline>
          <OutlineThickness id="319">0</OutlineThickness>
          <Position id="320" x="0" y="0"/>
          <UIEnabled id="321">false</UIEnabled>
          <UIOrder id="322">0</UIOrder>
        </VisualElement>
        <Parameter type="Numeric" id="323">
          <Name id="324">StimuliPresented</Name>
          <UIInfo id="325">
            <Pos id="326" x="294" y="341"/>
          </UIInfo>
          <UIEnabled id="328">false</UIEnabled>
          <UIOrder id="329">0</UIOrder>
          <Units id="330"/>
          <Value id="331">0</Value>
        </Parameter>
        <StateMachineElement type="ScriptElement" id="332">
          <Name id="333">IncrementStimulusCounter</Name>
          <Result id="334">
            <Name id="335">false</Name>
            <UIEnabled id="336">false</UIEnabled>
            <UIInfo id="337">
              <Pos id="338" x="2000" y="2000"/>
            </UIInfo>
            <UIOrder id="340">0</UIOrder>
          </Result>
          <Result id="341">
            <Name id="342">true</Name>
            <UIEnabled id="343">false</UIEnabled>
            <UIInfo id="344">
              <Pos id="345" x="2075" y="2000"/>
            </UIInfo>
            <UIOrder id="347">0</UIOrder>
          </Result>
          <Script id="348">StimuliPresented.value++; return true;</Script>
          <UIInfo id="349">
            <Pos id="350" x="490" y="97"/>
          </UIInfo>
          <Type id="352">ScriptElement</Type>
          <UIEnabled id="353">false</UIEnabled>
          <UIOrder id="354">0</UIOrder>
        </StateMachineElement>
        <Transition id="355">
          <Destination id="356">IncrementStimulusCounter</Destination>
          <Source id="357">PresentSingleStimulus</Source>
          <SourceResult id="358">StimulusPresented</SourceResult>
        </Transition>
        <Transition id="359">
          <Destination id="360">PresentSingleStimulus</Destination>
          <Source id="361">IncrementStimulusCounter</Source>
          <SourceResult id="362">false</SourceResult>
        </Transition>
        <Transition id="363">
          <Destination id="364">PresentSingleStimulus</Destination>
          <Source id="365">IncrementStimulusCounter</Source>
          <SourceResult id="366">true</SourceResult>
        </Transition>
        <ControlTarget type="CircleTarget" id="367">
          <Name id="368">Target</Name>
          <UIInfo id="369">
            <Pos id="370" x="188" y="437"/>
          </UIInfo>
          <Radius id="372">0</Radius>
          <Color A="255" B="0" G="255" R="0" id="373">#00ff00</Color>
          <Layer id="374">0</Layer>
          <OperatorView id="375">true</OperatorView>
          <Position id="376" x="0" y="0"/>
          <SubjectView id="377">false</SubjectView>
          <UIEnabled id="378">false</UIEnabled>
          <UIOrder id="379">0</UIOrder>
          <Visible id="380">true</Visible>
        </ControlTarget>
        <EntryScript id="381"/>
        <ExitScript id="382"/>
        <Level id="383">Stage</Level>
        <UIEnabled id="384">false</UIEnabled>
        <UIOrder id="385">0</UIOrder>
        <Transition id="573">
          <Destination id="575">PresentSingleStimulus</Destination>
          <Source id="576"/>
          <SourceResult id="577"/>
        </Transition>
      </StateMachine>
      <UIInfo id="386">
        <Pos id="387" x="1784" y="1744"/>
      </UIInfo>
      <Name id="389">Eye Calibration</Name>
    </Task>
    <Name id="393">BiasedMatchingPennies_Token</Name>
    <XGain id="394">1</XGain>
    <XOffset id="395">0</XOffset>
    <XYSignalShear id="396">0</XYSignalShear>
    <YGain id="397">1</YGain>
    <YOffset id="398">0</YOffset>
    <Task id="1234">
      <Name id="1235">Frame and Risky Choice</Name>
      <StateMachine id="1236">
        <EntryScript id="1237">										if (Math.random() &lt; .5)
										    lambda.value = 0;
										else
										    lambda.value = 1;
										tokensCollected.value = Math.floor(Math.random() * 3) + 2;


										//Reset all ern values
										ernData.setData(&quot;totalTrial&quot;,-1);
										ernData.setData(&quot;totalTrialInBlock&quot;,-1);
										ernData.setData(&quot;goodTrialInBlock&quot;,-1);
										ernData.setData(&quot;blockNumber&quot;,-1);
										ernData.setData(&quot;trial_success&quot;,-1);
										ernData.setData(&quot;trialType&quot;,-1);
										ernData.setData(&quot;monkeyPick&quot;,-1);
										ernData.setData(&quot;compPick&quot;,-1);
										ernData.setData(&quot;maxdevpr&quot;,-1);
										ernData.setData(&quot;lambda&quot;,-1);
										ernData.setData(&quot;monkeqpr&quot;,-1);
										ernData.setData(&quot;compeqpr&quot;,-1);
										ernData.setData(&quot;initdot&quot;,-1);
										ernData.setData(&quot;finaldot&quot;,-1);
										ernData.setData(&quot;nring&quot;,-1);
										ernData.setData(&quot;rewcount&quot;,-1);
										ernData.setData(&quot;feedbacktype&quot;,-1);
										ernData.setData(&quot;nconsume&quot;,-1);
										ernData.setData(&quot;biasyes&quot;,-1);
										ernData.setData(&quot;fstage&quot;,-1);
										ernData.setData(&quot;outcomecolor&quot;,-1);
										ernData.setData(&quot;pickedTargX&quot;,-1);
										ernData.setData(&quot;pickedTargY&quot;,-1);</EntryScript>
        <ExitScript id="1249"/>
        <Level id="1252">Stage</Level>
        <Name id="1253">Top</Name>
        <Type id="1254">StateMachine</Type>
        <UIEnabled id="1255">false</UIEnabled>
        <UIInfo id="596">
          <Pos id="1256" x="2002" y="2000"/>
        </UIInfo>
        <UIOrder id="1258">0</UIOrder>
        <StateMachineElement type="StateMachine" id="610">
          <EntryScript id="611">																																																												blockInfo.setData(&quot;Block&quot;,blockNum.value);
																																																												lambda.value = !lambda.value;
																																																												rightIsSafe.value = !lambda.value;

																																																												//Initialize Monkey and Computer Nash Probabilities
																																																												monkNashPr.value = (2 - lambda.value) / 3;
																																																												compNashPr.value = (1 + lambda.value) / 3;

																																																												//Initialize the algpr and algbiases
																																																												alg1Pr.setData(0, 0);
																																																												alg1Bias.setData(0, 0);
																																																												for(var i=0;i&lt;=histDepth.value;i++)
																																																												{
																																																													alg1Pr.setData(i, 0);
																																																													alg1Bias.setData(i, 0);
																																																													if(i==0)
																																																														continue;
																																																													alg2Pr.setData(i, 0);
																																																													alg2Bias.setData(i, 0);
																																																												}
																																																												ernData.setData(&quot;totalTrialInBlock&quot;,-1);
																																																												ernData.setData(&quot;goodTrialInBlock&quot;,-1);</EntryScript>
          <ExitScript id="612">blockNum.value++;</ExitScript>
          <Level id="613">Stage</Level>
          <Name id="614">Block</Name>
          <Type id="615">StateMachine</Type>
          <UIEnabled id="616">false</UIEnabled>
          <UIInfo id="617">
            <Pos id="618" x="217" y="188"/>
          </UIInfo>
          <UIOrder id="620">0</UIOrder>
          <Result id="1260">
            <Name id="1261">Done</Name>
            <UIEnabled id="1279">false</UIEnabled>
            <UIInfo id="1281">
              <Pos id="650" x="833" y="634"/>
            </UIInfo>
            <UIOrder id="652">0</UIOrder>
          </Result>
          <StateMachineElement type="StateMachine" id="656">
            <EntryScript id="1286">																																										//Computer picks its token
																																										drawCompPick();

																																										fixTarget.radius = fixationWindowRadius.value;
																																										lTarget.radius = saccadeWindowRadius.value;
																																										rTarget.radius = saccadeWindowRadius.value;

																																										ernData.setData(&quot;trial_success&quot;,0);
																																										ernData.setData(&quot;trialType&quot;,1);
																																										ernData.setData(&quot;compPick&quot;,Number(compChoosesRight.value));
																																										ernData.setData(&quot;biasyes&quot;,Number(biasYes.value));
																																										ernData.setData(&quot;lambda&quot;,lambda.value);
																																										ernData.setData(&quot;monkeqpr&quot;,monkNashPr.value);
																																										ernData.setData(&quot;compeqpr&quot;,compNashPr.value);
																																										ernData.setData(&quot;initdot&quot;,tokensCollected.value);
																																										ernData.setData(&quot;nring&quot;,6);
</EntryScript>
            <ExitScript id="1287">fixGraphic.visible = false;</ExitScript>
            <Level id="1288">Stage</Level>
            <Name id="660">Trial</Name>
            <Type id="661">StateMachine</Type>
            <UIEnabled id="1289">false</UIEnabled>
            <UIInfo id="1290">
              <Pos id="1291" x="373" y="71"/>
            </UIInfo>
            <UIOrder id="666">0</UIOrder>
            <Parameter type="Double" id="2578">
              <Max id="2579">1000000</Max>
              <Min id="2580">0</Min>
              <Name id="2581">pDev</Name>
              <UIEnabled id="2582">false</UIEnabled>
              <UIInfo id="2583">
                <Pos id="2584" x="464" y="734"/>
              </UIInfo>
              <UIOrder id="2586">0</UIOrder>
              <Value id="2587">0</Value>
            </Parameter>
            <Parameter type="Boolean" id="2624">
              <FalseLabel id="2625">False</FalseLabel>
              <Name id="2626">biasYes</Name>
              <TrueLabel id="2627">True</TrueLabel>
              <UIEnabled id="2628">false</UIEnabled>
              <UIInfo id="2629">
                <Pos id="2630" x="471" y="929"/>
              </UIInfo>
              <UIOrder id="2632">0</UIOrder>
              <Value id="2633">false</Value>
            </Parameter>
            
            
            <Parameter type="Boolean" id="2693">
              <FalseLabel id="2694">False</FalseLabel>
              <Name id="2695">compChoosesRight</Name>
              <TrueLabel id="2708">True</TrueLabel>
              <UIEnabled id="2712">false</UIEnabled>
              <UIInfo id="2713">
                <Pos id="2714" x="453" y="832"/>
              </UIInfo>
              <UIOrder id="2716">0</UIOrder>
              <Value id="2717">false</Value>
            </Parameter>
            
            <ScriptFunction type="ScriptFunction" id="2321">
              <Inputs id="2322"/>
              <Name id="2323">drawCompPick</Name>
              <Script id="2324">																																var center = monkNashPr;
																																//Pick computer's choice according to Nash equilibrium
																																//Pick of 1 means right side.
																																var cSelect = Math.floor(Math.random() * 3);
																																compChoosesRight.value = (cSelect &lt; compNashPr.value * 3) ? 1 : 0;

																																//Algorithm1
																																for (var i = 0; i &lt;= histDepth.value; i++) {
																																    if (choice.getNumEntries() &lt;= i)
																																        break;
																																    calProb(i);
																																}
																																//Algorithm2
																																for (var i = 1; i &lt;= histDepth.value; i++) {
																																    if (choice.getNumEntries() &lt;= i)
																																        break;
																																    calProb1(i);
																																}

																																//Update value field of info graphics to reflect finalized data
																																alg1Pr.updateValue();
																																alg1Bias.updateValue();
																																alg2Pr.updateValue();
																																alg2Bias.updateValue();
              
																																//Update Operator Bias Information	
																																if(biasYes.value)
																																{
																																	biasInfo.setData(&quot;pDev&quot;,Math.round(pDev.value*100)/100);
																																	biasInfo.x = compChoosesRight.value?250:550;
																																	biasInfo.visible = true;
																																	biasInfo.updateValue();
																																	ernData.setData(&quot;maxdevpr&quot;,maxDevR.value);
																																}</Script>
              <UIEnabled id="2325">false</UIEnabled>
              <UIInfo id="2326">
                <Pos id="2327" x="48" y="732"/>
              </UIInfo>
              <UIOrder id="2329">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2480">
              <Inputs id="2481">depth</Inputs>
              <Name id="2482">calProb</Name>
              <Script id="2483">																																																var BINOALPHA = binoAlpha.value;
																																																var biasFlag = 0;
																																																var total = choice.getNumEntries();
																																																var ntarget = 0;
																																																var nright = 0;
																																																var biasProbR = 0;

																																																if (depth == 0)       // p(R) for entire choice set (choice_)
																																																{
																																																    ntarget = total;
																																																    for (var m = 0; m &lt; total; m++) nright = nright + choice.getDataAsInt(m);
																																																}
																																																else {
																																																    // algorithm 1
																																																    // depth 1: target = 0 or 1
																																																    //       2:          0 to 3
																																																    //       3:          0 to 7
																																																    //       4:          0 to 15

																																																    var target = 0.0;
																																																    for (var m = 0; m &lt; depth; m++)
																																																        target = target + Math.pow(2, m) * choice.getDataAsInt(total - m - 1);

																																																    for (var i = total - 2; i &gt;= depth - 1; i--) {
																																																        var sample = 0.0;
																																																        for (var m = 0; m &lt; depth; m++)
																																																            sample = sample + Math.pow(2.0, m) * choice.getDataAsInt(i - m);

																																																        if (sample == target) {
																																																            ntarget++;
																																																            nright = nright + choice.getDataAsInt(i + 1);
																																																        }
																																																    }
																																																}

																																																// biasflag 0 : around the equilibrium
																																																//          1 : rightward bias
																																																//          2 : leftward bias

																																																if (ntarget &gt; 0) {
																																																    // rightward bias
																																																    var upperp = binocdf(nright - 1, ntarget, monkNashPr.value);
																																																    // leftward bias
																																																    var lowerp = binocdf(nright, ntarget, monkNashPr.value);

																																																    if (1 - upperp &lt;= BINOALPHA) biasFlag = 1;
																																																    else if (lowerp &lt;= BINOALPHA) biasFlag = 2;
																																																    biasProbR = nright / ntarget;
																																																}
																																																else biasProbR = -1.0;

																																																//Write latest data out to OperatorInfo graphics
																																																alg1Pr.setData(depth, biasProbR);
																																																alg1Bias.setData(depth, biasFlag);

																																																//Update the computer choice with latest data
																																																updateCompChoice(biasFlag, biasProbR);
              </Script>
              <UIEnabled id="2484">false</UIEnabled>
              <UIInfo id="2485">
                <Pos id="2486" x="155" y="691"/>
              </UIInfo>
              <UIOrder id="2488">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2494">
              <Inputs id="2495">depth</Inputs>
              <Name id="2496">calProb1</Name>
              <Script id="2497">																var BINOALPHA = binoAlpha.value;
																var biasFlag = 0;
																var total = choice.getNumEntries();
																var ntarget = 0;
																var nright = 0;
																var biasProbR = 0;

																var crcomb = new Array(total);
																for (var m = 0; m &lt; total; m++)
																    crcomb[m] = 2 * choice.getDataAsInt(m) + reward.getDataAsInt(m);

																// algorithm 2
																// depth 1: target = 0 or 1
																//       2:          0 to 3
																//       3:          0 to 7
																//       4:          0 to 15

																var target = 0.0;
																for (var m = 0; m &lt; depth; m++)
																    target = target + Math.pow(4, m) * crcomb[total - m - 1];

																for (var i = total - 2; i &gt;= depth - 1; i--) {
																    var sample = 0.0;
																    for (var m = 0; m &lt; depth; m++)
																        sample = sample + Math.pow(4.0, m) * crcomb[i - m];

																    if (sample == target) {
																        ntarget++;
																        nright = nright + choice.getDataAsInt(i + 1);
																    }
																}

																// biasflag 0 : around the equilibrium
																//          1 : rightward bias
																//          2 : leftward bias

																if (ntarget &gt; 0) {
																    // rightward bias
																    var upperp = binocdf(nright - 1, ntarget, monkNashPr.value);
																    // leftward bias
																    var lowerp = binocdf(nright, ntarget, monkNashPr.value);

																    if (1 - upperp &lt;= BINOALPHA) biasFlag = 1;
																    else if (lowerp &lt;= BINOALPHA) biasFlag = 2;
																    biasProbR = nright / ntarget;
																}
																else biasProbR = -1.0;

																//Write latest data out to OperatorInfo graphics
																alg2Pr.setData(depth, biasProbR);
																alg2Bias.setData(depth, biasFlag);

																//Update the computer choice with latest data
																updateCompChoice(biasFlag, biasProbR);
              </Script>
              <UIEnabled id="2498">false</UIEnabled>
              <UIInfo id="2499">
                <Pos id="2500" x="157" y="785"/>
              </UIInfo>
              <UIOrder id="2502">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2564">
              <Inputs id="2565">biasFlag,biasProbR</Inputs>
              <Name id="2566">updateCompChoice</Name>
              <Script id="2567">																																var center = monkNashPr.value;
																																if ((biasFlag == 1) &amp;&amp; (biasProbR - center &gt; pDev.value)) {
																																    pDev.value = biasProbR - center;
																																    maxDevR.value = biasProbR;
																																    compChoosesRight.value = 0;
																																    biasYes.value = true;
																																}
																																else if ((biasFlag == 2) &amp;&amp; (center - biasProbR &gt; pDev.value)) {
																																    pDev.value = center - biasProbR;
																																    maxDevR.value = biasProbR;
																																    compChoosesRight.value = 1;
																																    biasYes.value = true;
																																}
              </Script>
              <UIEnabled id="2568">false</UIEnabled>
              <UIInfo id="2569">
                <Pos id="2570" x="261" y="733"/>
              </UIInfo>
              <UIOrder id="2572">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2640">
              <Inputs id="2641">x,n,p</Inputs>
              <Name id="2642">binocdf</Name>
              <Script id="2643">																var newx = 0;
																if (x + 1.0 &gt;= n)
																    newx = n;
																else
																    newx = x + 1.0;
																return 1.0-betai(newx, n-newx+1.0, p);</Script>
              <UIEnabled id="2644">false</UIEnabled>
              <UIInfo id="2645">
                <Pos id="2646" x="107" y="896"/>
              </UIInfo>
              <UIOrder id="2648">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2654">
              <Inputs id="2655">a,b,x</Inputs>
              <Name id="2656">betai</Name>
              <Script id="2657">																var bt = 0.0;

																if (x &lt; 0.0 || x &gt; 1.0) return 0.5;
																if (x == 0.0 || x == 1.0) bt = 0.0;
																else
																    bt = Math.exp(gammln(a + b) - gammln(a) - gammln(b) + a * Math.log(x) + b * Math.log(1.0 - x));
																if (x &lt; (a + 1.0) / (a + b + 2.0))
																    return bt * betacf(a, b, x) / a;
																else
																    return 1.0 - bt * betacf(b, a, 1.0 - x) / b;</Script>
              <UIEnabled id="2658">false</UIEnabled>
              <UIInfo id="2659">
                <Pos id="2660" x="207" y="898"/>
              </UIInfo>
              <UIOrder id="2662">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2668">
              <Inputs id="2669">xx</Inputs>
              <Name id="2670">gammln</Name>
              <Script id="2671">																																																var cof = [76.18009172947146, -86.50532032941677,
																																																            24.01409824083091, -1.231739572450155,
																																																            0.1208650973866179e-2, -0.5395239384953e-5];

																																																var y = xx;
																																																var x = xx;
																																																var tmp = x + 5.5;
																																																tmp -= (x + 0.5) * Math.log(tmp);
																																																var ser = 1.000000000190015;
																																																for (var j = 0; j &lt;= 5; j++) ser += cof[j] / ++y;
																																																return -tmp + Math.log(2.5066282746310005 * ser / x);</Script>
              <UIEnabled id="2672">false</UIEnabled>
              <UIInfo id="2673">
                <Pos id="2674" x="203" y="976"/>
              </UIInfo>
              <UIOrder id="2676">0</UIOrder>
            </ScriptFunction>
            <ScriptFunction type="ScriptFunction" id="2682">
              <Inputs id="2683">a,b,x</Inputs>
              <Name id="2684">betacf</Name>
              <Script id="2685">																var FPMIN = 1.0e-30
																var EPS = 3.0e-7;
																var MAXIT = 100;
																var qab = a + b;
																var qap = a + 1.0;
																var qam = a - 1.0;
																var c = 1.0;
																var d = 1.0 - qab * x / qap;
																var aa = 0;
																var del = 0;
																if (Math.abs(d) &lt; FPMIN) d = FPMIN;
																d = 1.0 / d;
																var h = d;
																for (var m = 1; m &lt;= MAXIT; m++) {
																    m2 = 2 * m;
																    aa = m * (b - m) * x / ((qam + m2) * (a + m2));
																    d = 1.0 + aa * d;
																    if (Math.abs(d) &lt; FPMIN) d = FPMIN;
																    c = 1.0 + aa / c;
																    if (Math.abs(c) &lt; FPMIN) c = FPMIN;
																    d = 1.0 / d;
																    h *= d * c;
																    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
																    d = 1.0 + aa * d;
																    if (Math.abs(d) &lt; FPMIN) d = FPMIN;
																    c = 1.0 + aa / c;
																    if (Math.abs(c) &lt; FPMIN) c = FPMIN;
																    d = 1.0 / d;
																    del = d * c;
																    h *= del;
																    if (Math.abs(del - 1.0) &lt; EPS) break;
																}
																return h;</Script>
              <UIEnabled id="2686">false</UIEnabled>
              <UIInfo id="2687">
                <Pos id="2688" x="106" y="976"/>
              </UIInfo>
              <UIOrder id="2690">0</UIOrder>
            </ScriptFunction>
            <Result id="1088">
              <Name id="1089">Complete</Name>
              <UIEnabled id="1090">false</UIEnabled>
              <UIInfo id="1091">
                <Pos id="1092" x="912" y="382"/>
              </UIInfo>
              <UIOrder id="1094">0</UIOrder>
            </Result>
            <StateMachineElement type="State" id="1116">
              <BackgroundColor A="255" B="0" G="0" R="0" id="1117">#000000</BackgroundColor>
              <EntryScript id="1118">FixController.maxAcquisitionTime = fixationWaitTime.value;
FixController.totalTime = fixationWaitTime.value+FixController.fixationTime;</EntryScript>
              <ExitScript id="1119"/>
              <FrameScript id="1120"/>
              <Name id="1121">Fixation</Name>
              <UIEnabled id="1122">false</UIEnabled>
              <UIInfo id="1123">
                <Pos id="1124" x="186" y="155"/>
              </UIInfo>
              <UIOrder id="1126">0</UIOrder>
              <ControlElement type="Target Controller" id="1262">
                <ControlTarget id="1263">fixTarget</ControlTarget>
                <FixationTime id="1264">500</FixationTime>
                <MaxInitialAcquisitionTime id="1265">3000</MaxInitialAcquisitionTime>
                <MaxReacquisitionTime id="1266">0</MaxReacquisitionTime>
                <MinInitialAcquisitionTime id="1267">0</MinInitialAcquisitionTime>
                <Name id="1268">FixController</Name>
                <ReacquisitionAllowed id="1269">false</ReacquisitionAllowed>
                <Result id="627">
                  <Name id="628">Reaquistion Time Exceeded</Name>
                  <UIEnabled id="642">false</UIEnabled>
                  <UIInfo id="644">
                    <Pos id="645" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="668">0</UIOrder>
                </Result>
                <Result id="673">
                  <Name id="1441">Initial Aquistion Time Exceeded</Name>
                  <UIEnabled id="683">false</UIEnabled>
                  <UIInfo id="684">
                    <Pos id="685" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1445">0</UIOrder>
                </Result>
                <Result id="695">
                  <Name id="696">Total Time Excceeded</Name>
                  <UIEnabled id="1449">false</UIEnabled>
                  <UIInfo id="1450">
                    <Pos id="1451" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="701">0</UIOrder>
                </Result>
                <Result id="705">
                  <Name id="706">Broke Fixation</Name>
                  <UIEnabled id="1480">false</UIEnabled>
                  <UIInfo id="712">
                    <Pos id="713" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1488">0</UIOrder>
                </Result>
                <Result id="734">
                  <Name id="735">Success</Name>
                  <UIEnabled id="736">false</UIEnabled>
                  <UIInfo id="737">
                    <Pos id="738" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1499">0</UIOrder>
                </Result>
                <SignalChannel id="1270">Position</SignalChannel>
                <TargetEntryScript id="1271"/>
                <TargetExitScript id="1272"/>
                <TimeUnits id="1273">Ms</TimeUnits>
                <TotalTime id="1274">3500</TotalTime>
                <Type id="1275"/>
                <UIEnabled id="1276">false</UIEnabled>
                <UIInfo id="1277">
                  <Pos id="1278" x="144" y="98"/>
                </UIInfo>
                <UIOrder id="1280">0</UIOrder>
              </ControlElement>
              <Result id="1346">
                <Name id="1347">Success</Name>
                <UIEnabled id="1348">false</UIEnabled>
                <UIInfo id="1349">
                  <Pos id="1350" x="463" y="80"/>
                </UIInfo>
                <UIOrder id="1352">0</UIOrder>
              </Result>
              <Result id="1356">
                <Name id="1357">Fail</Name>
                <UIEnabled id="1358">false</UIEnabled>
                <UIInfo id="1359">
                  <Pos id="1360" x="461" y="245"/>
                </UIInfo>
                <UIOrder id="1362">0</UIOrder>
              </Result>
              <Transition id="1561">
                <Destination id="1562">Fail</Destination>
                <Source id="1563">FixController</Source>
                <SourceResult id="1564">Reaquistion Time Exceeded</SourceResult>
              </Transition>
              <Transition id="1565">
                <Destination id="850">Fail</Destination>
                <Source id="852">FixController</Source>
                <SourceResult id="1566">Initial Aquistion Time Exceeded</SourceResult>
              </Transition>
              <Transition id="854">
                <Destination id="855">Fail</Destination>
                <Source id="1567">FixController</Source>
                <SourceResult id="857">Total Time Excceeded</SourceResult>
              </Transition>
              <Transition id="858">
                <Destination id="1568">Success</Destination>
                <Source id="878">FixController</Source>
                <SourceResult id="880">Success</SourceResult>
              </Transition>
              <Transition id="881">
                <Destination id="882">Fail</Destination>
                <Source id="887">FixController</Source>
                <SourceResult id="1569">Broke Fixation</SourceResult>
              </Transition>
            <Parameter type="Range" id="2752"><Increment id="2753">1</Increment><Max id="2754">100000</Max><Min id="2755">1</Min><Name id="2756">fixationWaitTime</Name><UIEnabled id="2757">true</UIEnabled><UIInfo id="2758"><Pos id="2759" x="161" y="480"/></UIInfo><UIOrder id="2761">0</UIOrder><Units id="2762"/><Value id="2763">3000</Value></Parameter></StateMachineElement>
            <StateMachineElement type="State" id="1134">
              <BackgroundColor A="255" B="0" G="0" R="0" id="1135">#000000</BackgroundColor>
              <EntryScript id="1136">																lCircle.visible = true;
																rCircle.visible = true;
              </EntryScript>
              <ExitScript id="1137">fixGraphic.visible = false;</ExitScript>
              <FrameScript id="1138"/>
              <Name id="1139">Sample</Name>
              <UIEnabled id="1140">false</UIEnabled>
              <UIInfo id="1141">
                <Pos id="1142" x="350" y="157"/>
              </UIInfo>
              <UIOrder id="1144">0</UIOrder>
              <ControlElement type="Target Controller" id="1456">
                <ControlTarget id="1457">fixTarget</ControlTarget>
                <FixationTime id="1458">500</FixationTime>
                <MaxInitialAcquisitionTime id="1459">0</MaxInitialAcquisitionTime>
                <MaxReacquisitionTime id="1460">0</MaxReacquisitionTime>
                <MinInitialAcquisitionTime id="1461">0</MinInitialAcquisitionTime>
                <Name id="1462">OverlapFixControl</Name>
                <ReacquisitionAllowed id="1463">false</ReacquisitionAllowed>
                <Result id="903">
                  <Name id="904">Reaquistion Time Exceeded</Name>
                  <UIEnabled id="905">false</UIEnabled>
                  <UIInfo id="1587">
                    <Pos id="1588" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="923">0</UIOrder>
                </Result>
                <Result id="1593">
                  <Name id="1594">Initial Aquistion Time Exceeded</Name>
                  <UIEnabled id="1595">false</UIEnabled>
                  <UIInfo id="1596">
                    <Pos id="1597" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1599">0</UIOrder>
                </Result>
                <Result id="1603">
                  <Name id="953">Total Time Excceeded</Name>
                  <UIEnabled id="959">false</UIEnabled>
                  <UIInfo id="961">
                    <Pos id="962" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="972">0</UIOrder>
                </Result>
                <Result id="987">
                  <Name id="1003">Broke Fixation</Name>
                  <UIEnabled id="1005">false</UIEnabled>
                  <UIInfo id="1006">
                    <Pos id="1007" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1017">0</UIOrder>
                </Result>
                <Result id="1021">
                  <Name id="1022">Success</Name>
                  <UIEnabled id="1023">false</UIEnabled>
                  <UIInfo id="1024">
                    <Pos id="1025" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1066">0</UIOrder>
                </Result>
                <SignalChannel id="1464">Position</SignalChannel>
                <TargetEntryScript id="1465">ernData.setData(&quot;fstage&quot;,1);</TargetEntryScript>
                <TargetExitScript id="1466"/>
                <TimeUnits id="1467">Ms</TimeUnits>
                <TotalTime id="1468">1000</TotalTime>
                <Type id="1469"/>
                <UIEnabled id="1470">false</UIEnabled>
                <UIInfo id="1471">
                  <Pos id="1472" x="131" y="110"/>
                </UIInfo>
                <UIOrder id="1474">0</UIOrder>
              </ControlElement>
              <Result id="1490">
                <Name id="1491">Success</Name>
                <UIEnabled id="1492">false</UIEnabled>
                <UIInfo id="1493">
                  <Pos id="1494" x="566" y="103"/>
                </UIInfo>
                <UIOrder id="1496">0</UIOrder>
              </Result>
              <Result id="1500">
                <Name id="1501">Fail</Name>
                <UIEnabled id="1502">false</UIEnabled>
                <UIInfo id="1503">
                  <Pos id="1504" x="558" y="226"/>
                </UIInfo>
                <UIOrder id="1506">0</UIOrder>
              </Result>
              <Transition id="1114">
                <Destination id="1115">Fail</Destination>
                <Source id="1125">OverlapFixControl</Source>
                <SourceResult id="1127">Reaquistion Time Exceeded</SourceResult>
              </Transition>
              <Transition id="1128">
                <Destination id="1129">Fail</Destination>
                <Source id="1130">OverlapFixControl</Source>
                <SourceResult id="1131">Initial Aquistion Time Exceeded</SourceResult>
              </Transition>
              <Transition id="1132">
                <Destination id="1133">Fail</Destination>
                <Source id="1143">OverlapFixControl</Source>
                <SourceResult id="1145">Total Time Excceeded</SourceResult>
              </Transition>
              <Transition id="1146">
                <Destination id="1147">Fail</Destination>
                <Source id="1148">OverlapFixControl</Source>
                <SourceResult id="1149">Broke Fixation</SourceResult>
              </Transition>
              <Transition id="1150">
                <Destination id="1151">Success</Destination>
                <Source id="1161">OverlapFixControl</Source>
                <SourceResult id="1163">Success</SourceResult>
              </Transition>
            </StateMachineElement>
            
            <StateMachineElement type="State" id="1170">
              <BackgroundColor A="255" B="0" G="0" R="0" id="1171">#000000</BackgroundColor>
              <EntryScript id="1172">																if ((compChoosesRight.value &amp;&amp; rCircle.visible)
																                || (!compChoosesRight.value &amp;&amp; lCircle.visible)) {	//User Win
																    feedbackRing.red = 255;
																	ernData.setData(&quot;outcomecolor&quot;,0);
																}
																else if (rCircle.visible == rightIsSafe.value) {	//Neutral
																    feedbackRing.blue = 255;
																	ernData.setData(&quot;outcomecolor&quot;,1);
																}
																else {	//User Lose
																    feedbackRing.setColor(192, 192, 192, 255);
																	ernData.setData(&quot;outcomecolor&quot;,2);
																}
																feedbackRing.visible = true;
																ernData.setData(&quot;pickedTargX&quot;,feedbackRing.x);
																ernData.setData(&quot;pickedTargY&quot;,feedbackRing.y);</EntryScript>
              <ExitScript id="1173"/>
              <FrameScript id="1174"/>
              <Name id="1175">ShowRing</Name>
              <UIEnabled id="1176">false</UIEnabled>
              <UIInfo id="1177">
                <Pos id="1178" x="844" y="183"/>
              </UIInfo>
              <UIOrder id="1180">0</UIOrder>
              <ControlElement type="Stopwatch Controller" id="1874">
                <Name id="1875">FeedbackTimer</Name>
                <Result id="1315">
                  <Name id="1316">Success</Name>
                  <UIEnabled id="1317">false</UIEnabled>
                  <UIInfo id="1318">
                    <Pos id="1319" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1321">0</UIOrder>
                </Result>
                <Time id="1876">500</Time>
                <TimeUnits id="1877">Ms</TimeUnits>
                <Type id="1878"/>
                <UIEnabled id="1879">false</UIEnabled>
                <UIInfo id="1880">
                  <Pos id="1881" x="97" y="77"/>
                </UIInfo>
                <UIOrder id="1883">0</UIOrder>
              </ControlElement>
              <Result id="1890">
                <Name id="1891">Done</Name>
                <UIEnabled id="1892">false</UIEnabled>
                <UIInfo id="1893">
                  <Pos id="1894" x="526" y="157"/>
                </UIInfo>
                <UIOrder id="1896">0</UIOrder>
              </Result>
              <Transition id="1336">
                <Destination id="1337">Done</Destination>
                <Source id="1338">FeedbackTimer</Source>
                <SourceResult id="1339">Success</SourceResult>
              </Transition>
            </StateMachineElement>
            <StateMachineElement type="State" id="1188">
              <BackgroundColor A="255" B="0" G="0" R="0" id="1189">#000000</BackgroundColor>
              <EntryScript id="1190">																var tokens = [token0, token1, token2, token3, token4, token5];
																if (feedbackRing.red == 255) {	//Win
																    tokens[tokensCollected.value].outline = false;
																    tokensCollected.value++;
																    numGain.value++;
																    reward.setData(reward.getNumEntries(), 1);
																	ernData.setData(&quot;rewcount&quot;,1);
																}
																else if (feedbackRing.blue != 255 &amp;&amp; tokensCollected.value &gt; 0) {	//Lose
																    tokens[tokensCollected.value - 1].outline = true;
																    tokensCollected.value--;
																    numLoss.value++;
																    reward.setData(reward.getNumEntries(), 0);
																	ernData.setData(&quot;rewcount&quot;,-1);
																}
																else
																{
																    numNeutral.value++;
																    reward.setData(reward.getNumEntries(), 0);
																	ernData.setData(&quot;rewcount&quot;,0);
																}
																blockInfo.setData(&quot;Gain%&quot;,Math.round(100*(numGain.value)/(trialNum.value+1)));
																blockInfo.setData(&quot;Loss%&quot;,Math.round(100*(numLoss.value)/(trialNum.value+1)));
																blockInfo.setData(&quot;Neutral%&quot;,Math.round(100*(numNeutral.value)/(trialNum.value+1)));
																reward.updateValue();</EntryScript>
              <ExitScript id="1191">ernData.setData(&quot;fstage&quot;,5);</ExitScript>
              <FrameScript id="1192"/>
              <Name id="1193">ShowDot</Name>
              <UIEnabled id="1194">false</UIEnabled>
              <UIInfo id="1195">
                <Pos id="1196" x="980" y="200"/>
              </UIInfo>
              <UIOrder id="1198">0</UIOrder>
              <ControlElement type="Stopwatch Controller" id="1914">
                <Name id="1915">TokenOpTimer</Name>
                <Result id="1374">
                  <Name id="1375">Success</Name>
                  <UIEnabled id="1376">false</UIEnabled>
                  <UIInfo id="1377">
                    <Pos id="1378" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1380">0</UIOrder>
                </Result>
                <Time id="1916">300</Time>
                <TimeUnits id="1917">Ms</TimeUnits>
                <Type id="1918"/>
                <UIEnabled id="1919">false</UIEnabled>
                <UIInfo id="1920">
                  <Pos id="1921" x="80" y="66"/>
                </UIInfo>
                <UIOrder id="1923">0</UIOrder>
              </ControlElement>
              <Result id="1930">
                <Name id="1931">Done</Name>
                <UIEnabled id="1932">false</UIEnabled>
                <UIInfo id="1933">
                  <Pos id="1934" x="365" y="125"/>
                </UIInfo>
                <UIOrder id="1936">0</UIOrder>
              </Result>
              <Transition id="1395">
                <Destination id="1396">Done</Destination>
                <Source id="1397">TokenOpTimer</Source>
                <SourceResult id="1398">Success</SourceResult>
              </Transition>
            </StateMachineElement>
            <Transition id="718">
              <Destination id="719">Fixation</Destination>
              <Source id="728"/>
              <SourceResult id="732"/>
            </Transition>
            <ControlTarget type="CircleTarget" id="1238">
              <Color A="255" B="0" G="255" R="0" id="1239">#00ff00</Color>
              <Layer id="1240">10</Layer>
              <Name id="1241">fixTarget</Name>
              <OperatorView id="1242">true</OperatorView>
              <Position id="1243" x="400" y="300"/>
              <Radius id="1244">50</Radius>
              <SubjectView id="1245">false</SubjectView>
              <UIEnabled id="1246">false</UIEnabled>
              <UIInfo id="1247">
                <Pos id="1248" x="246" y="393"/>
              </UIInfo>
              <UIOrder id="1250">0</UIOrder>
              <Visible id="1251">true</Visible>
            </ControlTarget>
            <Result id="1366">
              <Name id="1367">Incomplete</Name>
              <UIEnabled id="1368">false</UIEnabled>
              <UIInfo id="1369">
                <Pos id="1370" x="760" y="445"/>
              </UIInfo>
              <UIOrder id="1372">0</UIOrder>
            </Result>
            <Transition id="1031">
              <Destination id="1032">Incomplete</Destination>
              <Source id="1033">Fixation</Source>
              <SourceResult id="1055">Fail</SourceResult>
            </Transition>
            <Transition id="1061">
              <Destination id="1063">Sample</Destination>
              <Source id="1064">Fixation</Source>
              <SourceResult id="1065">Success</SourceResult>
            </Transition>
            <VisualElement type="Circle Graphic" id="1400">
              <Color A="255" B="0" G="255" R="0" id="1401">#00ff00</Color>
              <Layer id="1402">0</Layer>
              <Name id="1403">lCircle</Name>
              <OperatorView id="1404">true</OperatorView>
              <Outline id="1405">false</Outline>
              <OutlineThickness id="1406">0</OutlineThickness>
              <Position id="1407" x="250" y="300"/>
              <Radius id="1408">15</Radius>
              <SubjectView id="1409">true</SubjectView>
              <UIEnabled id="1410">false</UIEnabled>
              <UIInfo id="1411">
                <Pos id="1412" x="76" y="393"/>
              </UIInfo>
              <UIOrder id="1414">0</UIOrder>
              <Visible id="1415">false</Visible>
            </VisualElement>
            <VisualElement type="Circle Graphic" id="1428">
              <Color A="255" B="0" G="255" R="0" id="1429">#00ff00</Color>
              <Layer id="1430">0</Layer>
              <Name id="1431">rCircle</Name>
              <OperatorView id="1432">true</OperatorView>
              <Outline id="1433">false</Outline>
              <OutlineThickness id="1434">0</OutlineThickness>
              <Position id="1435" x="550" y="300"/>
              <Radius id="1436">15</Radius>
              <SubjectView id="1437">true</SubjectView>
              <UIEnabled id="1438">false</UIEnabled>
              <UIInfo id="1439">
                <Pos id="1440" x="391" y="391"/>
              </UIInfo>
              <UIOrder id="1442">0</UIOrder>
              <Visible id="1443">false</Visible>
            </VisualElement>
            
            <Transition id="1345">
              <Destination id="1351">Incomplete</Destination>
              <Source id="1353">Sample</Source>
              <SourceResult id="1354">Fail</SourceResult>
            </Transition>
            <ControlTarget type="CircleTarget" id="1636">
              <Color A="255" B="0" G="255" R="0" id="1637">#00ff00</Color>
              <Layer id="1638">0</Layer>
              <Name id="1639">lTarget</Name>
              <OperatorView id="1640">true</OperatorView>
              <Position id="1641" x="250" y="300"/>
              <Radius id="1642">65</Radius>
              <SubjectView id="1643">false</SubjectView>
              <UIEnabled id="1644">false</UIEnabled>
              <UIInfo id="1645">
                <Pos id="1646" x="81" y="489"/>
              </UIInfo>
              <UIOrder id="1648">0</UIOrder>
              <Visible id="1649">true</Visible>
            </ControlTarget>
            <ControlTarget type="CircleTarget" id="1660">
              <Color A="255" B="0" G="255" R="0" id="1661">#00ff00</Color>
              <Layer id="1662">0</Layer>
              <Name id="1663">rTarget</Name>
              <OperatorView id="1664">true</OperatorView>
              <Position id="1665" x="550" y="300"/>
              <Radius id="1666">65</Radius>
              <SubjectView id="1667">false</SubjectView>
              <UIEnabled id="1668">false</UIEnabled>
              <UIInfo id="1669">
                <Pos id="1670" x="419" y="498"/>
              </UIInfo>
              <UIOrder id="1672">0</UIOrder>
              <Visible id="1673">true</Visible>
            </ControlTarget>
            
            <StateMachineElement type="ScriptElement" id="1754">
              <Name id="1755">ChoseLeftOps</Name>
              <Result id="1453">
                <Name id="1454">false</Name>
                <UIEnabled id="1455">false</UIEnabled>
                <UIInfo id="1473">
                  <Pos id="1475" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="1477">0</UIOrder>
              </Result>
              <Result id="1481">
                <Name id="1482">true</Name>
                <UIEnabled id="1483">false</UIEnabled>
                <UIInfo id="1484">
                  <Pos id="1485" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="1487">0</UIOrder>
              </Result>
              <Script id="1756">																rCircle.visible = false;
																feedbackRing.x=250;
																choice.setData(choice.getNumEntries(),0);
																choice.updateValue();
																ernData.setData(&quot;monkeyPick&quot;,0);
																return true;</Script>
              <Type id="1757">ScriptElement</Type>
              <UIEnabled id="1758">false</UIEnabled>
              <UIInfo id="1759">
                <Pos id="1760" x="694" y="80"/>
              </UIInfo>
              <UIOrder id="1762">0</UIOrder>
            </StateMachineElement>
            <StateMachineElement type="ScriptElement" id="1768">
              <Name id="1769">ChoseRightOps</Name>
              <Result id="1509">
                <Name id="1510">false</Name>
                <UIEnabled id="1511">false</UIEnabled>
                <UIInfo id="1512">
                  <Pos id="1513" x="2000" y="2000"/>
                </UIInfo>
                <UIOrder id="1515">0</UIOrder>
              </Result>
              <Result id="1519">
                <Name id="1520">true</Name>
                <UIEnabled id="1521">false</UIEnabled>
                <UIInfo id="1522">
                  <Pos id="1523" x="2075" y="2000"/>
                </UIInfo>
                <UIOrder id="1525">0</UIOrder>
              </Result>
              <Script id="1770">																lCircle.visible = false;
																feedbackRing.x=550;
																choice.setData(choice.getNumEntries(),1);
																choice.updateValue();
																ernData.setData(&quot;monkeyPick&quot;,1);
																return true;
              </Script>
              <Type id="1771">ScriptElement</Type>
              <UIEnabled id="1772">false</UIEnabled>
              <UIInfo id="1773">
                <Pos id="1774" x="694" y="214"/>
              </UIInfo>
              <UIOrder id="1776">0</UIOrder>
            </StateMachineElement>
            <Transition id="1535">
              <Destination id="1536">ShowRing</Destination>
              <Source id="1537">ChoseLeftOps</Source>
              <SourceResult id="1538">false</SourceResult>
            </Transition>
            <Transition id="1539">
              <Destination id="1540">ShowRing</Destination>
              <Source id="1541">ChoseLeftOps</Source>
              <SourceResult id="1542">true</SourceResult>
            </Transition>
            <Transition id="1543">
              <Destination id="1544">ShowRing</Destination>
              <Source id="1545">ChoseRightOps</Source>
              <SourceResult id="1546">false</SourceResult>
            </Transition>
            <Transition id="1547">
              <Destination id="1548">ShowRing</Destination>
              <Source id="1549">ChoseRightOps</Source>
              <SourceResult id="1550">true</SourceResult>
            </Transition>
            
            
            <VisualElement type="Circle Graphic" id="1782">
              <Color A="255" B="0" G="0" R="0" id="1783">#000000</Color>
              <Layer id="1784">0</Layer>
              <Name id="1785">feedbackRing</Name>
              <OperatorView id="1786">true</OperatorView>
              <Outline id="1787">true</Outline>
              <OutlineThickness id="1788">4</OutlineThickness>
              <Position id="1789" x="0" y="300"/>
              <Radius id="1790">38</Radius>
              <SubjectView id="1791">true</SubjectView>
              <UIEnabled id="1792">false</UIEnabled>
              <UIInfo id="1793">
                <Pos id="1794" x="232" y="498"/>
              </UIInfo>
              <UIOrder id="1796">0</UIOrder>
              <Visible id="1797">false</Visible>
            </VisualElement>
            <Transition id="1675">
              <Destination id="1676">ShowDot</Destination>
              <Source id="1677">ShowRing</Source>
              <SourceResult id="1678">Done</SourceResult>
            </Transition>
            <Transition id="1679">
              <Destination id="1680">Complete</Destination>
              <Source id="1681">ShowDot</Source>
              <SourceResult id="1682">Done</SourceResult>
            </Transition>
          <Parameter type="Range" id="2792"><Increment id="2793">0</Increment><Max id="2794">400</Max><Min id="2795">1</Min><Name id="2796">saccadeWindowRadius</Name><UIEnabled id="2797">true</UIEnabled><UIInfo id="2798"><Pos id="2799" x="594" y="561"/></UIInfo><UIOrder id="2801">0</UIOrder><Units id="2802"/><Value id="2803">65</Value></Parameter><Parameter type="Range" id="2812"><Increment id="2813">0</Increment><Max id="2814">400</Max><Min id="2815">1</Min><Name id="2816">fixationWindowRadius</Name><UIEnabled id="2817">true</UIEnabled><UIInfo id="2818"><Pos id="2819" x="731" y="560"/></UIInfo><UIOrder id="2821">0</UIOrder><Units id="2822"/><Value id="2823">50</Value></Parameter><Parameter type="Double" id="2856"><Max id="2857">1</Max><Min id="2858">0</Min><Name id="2859">binoAlpha</Name><UIEnabled id="2860">true</UIEnabled><UIInfo id="2861"><Pos id="2862" x="591" y="832"/></UIInfo><UIOrder id="2864">0</UIOrder><Value id="2865">0.025</Value></Parameter><StateMachineElement type="StateMachine" id="3144"><EntryScript id="3145">choiceTimer.restart();</EntryScript><ExitScript id="3146"/><Level id="3147">Stage</Level><Name id="3148">SampleChoiceControl</Name><StateMachineElement type="State" id="3162"><BackgroundColor A="255" B="0" G="0" R="0" id="3163">#000000</BackgroundColor><EntryScript id="3164">fixTarget.outside = true;
MoveController.totalTime = saccadeWaitTime.value;
MoveController.maxAcquisitionTime = saccadeWaitTime.value;</EntryScript><ExitScript id="3165"/><FrameScript id="3166"/><Name id="3167">ExitFixation</Name><UIEnabled id="3168">false</UIEnabled><UIInfo id="3169"><OpenDescendant id="3170">0</OpenDescendant><Pos id="3171" x="113" y="124"/></UIInfo><UIOrder id="3172">0</UIOrder><ControlElement type="Target Controller" id="2870"><ControlTarget id="2871">fixTarget</ControlTarget><FixationTime id="2872">0</FixationTime><MaxInitialAcquisitionTime id="2873">1000</MaxInitialAcquisitionTime><MaxReacquisitionTime id="2874">0</MaxReacquisitionTime><MinInitialAcquisitionTime id="2875">0</MinInitialAcquisitionTime><Name id="2876">MoveController</Name><ReacquisitionAllowed id="2877">false</ReacquisitionAllowed><Result id="1781"><Name id="1795">Reaquistion Time Exceeded</Name></Result><Result id="1806"><Name id="1807">Initial Aquistion Time Exceeded</Name></Result><Result id="1816"><Name id="1817">Total Time Excceeded</Name></Result><Result id="1832"><Name id="1833">Broke Fixation</Name></Result><Result id="1842"><Name id="1843">Success</Name></Result><SignalChannel id="2878">Position</SignalChannel><TargetEntryScript id="2879"/><TargetExitScript id="2880"/><TimeUnits id="2881">Ms</TimeUnits><TotalTime id="2882">1000</TotalTime><Type id="2883"/><UIEnabled id="2896">false</UIEnabled><UIInfo id="2899"><OpenDescendant id="2900">0</OpenDescendant><Pos id="2901" x="91" y="94"/></UIInfo><UIOrder id="2928">0</UIOrder></ControlElement><Result id="2955"><Name id="2956">Success</Name><UIEnabled id="2957">false</UIEnabled><UIInfo id="2963"><OpenDescendant id="2967">0</OpenDescendant><Pos id="2968" x="387" y="115"/></UIInfo><UIOrder id="2969">0</UIOrder></Result><Result id="2981"><Name id="2982">Fail</Name><UIEnabled id="2983">false</UIEnabled><UIInfo id="2984"><OpenDescendant id="2985">0</OpenDescendant><Pos id="2986" x="407" y="251"/></UIInfo><UIOrder id="2987">0</UIOrder></Result><Transition id="1909"><Destination id="1911">Success</Destination><Source id="1912">MoveController</Source><SourceResult id="1913">Success</SourceResult></Transition><Transition id="1922"><Destination id="1924">Fail</Destination><Source id="1925">MoveController</Source><SourceResult id="1926">Reaquistion Time Exceeded</SourceResult></Transition><Transition id="1927"><Destination id="1928">Fail</Destination><Source id="1959">MoveController</Source><SourceResult id="1960">Initial Aquistion Time Exceeded</SourceResult></Transition><Transition id="1961"><Destination id="1962">Fail</Destination><Source id="1963">MoveController</Source><SourceResult id="1964">Total Time Excceeded</SourceResult></Transition><Transition id="1965"><Destination id="1966">Fail</Destination><Source id="1967">MoveController</Source><SourceResult id="1968">Broke Fixation</SourceResult></Transition></StateMachineElement><StateMachineElement type="State" id="3180"><BackgroundColor A="255" B="0" G="0" R="0" id="3181">#000000</BackgroundColor><EntryScript id="3182">totTime = saccadeWaitTime.value+SampleChoiceControl.fixationTime-choiceTimer.value;
if(totTime &lt; 0)
	totTime = 0;
SampleChoiceControl.totalTime = totTime;</EntryScript><ExitScript id="3183"/><FrameScript id="3184"/><Name id="3185">MakeChoice</Name><UIEnabled id="3186">false</UIEnabled><UIInfo id="3187"><OpenDescendant id="3188">0</OpenDescendant><Pos id="3189" x="274" y="125"/></UIInfo><UIOrder id="3190">0</UIOrder><ControlElement type="Choice Controller" id="2991"><AllowReentries id="2992">false</AllowReentries><FixationTime id="2993">500</FixationTime><Name id="3005">SampleChoiceControl</Name><Result id="1993"><Name id="1994">Total Time Exceeded</Name><UIInfo id="1997"><Pos id="1998" x="2000" y="2000"/></UIInfo></Result><Result id="2022"><Name id="2023">Broke Fixation</Name><UIInfo id="2024"><Pos id="2025" x="2159" y="2000"/></UIInfo></Result><Result type="Target" id="3079"><ControlTarget id="3080">lTarget</ControlTarget><Name id="3081">LeftChoice</Name><UIEnabled id="3082">false</UIEnabled><UIInfo id="3083"><OpenDescendant id="3084">0</OpenDescendant><Pos id="3085" x="1999" y="2086"/></UIInfo><UIOrder id="3086">0</UIOrder></Result><Result type="Target" id="3091"><ControlTarget id="3092">rTarget</ControlTarget><Name id="3093">RightChoice</Name><UIEnabled id="3094">false</UIEnabled><UIInfo id="3095"><OpenDescendant id="3096">0</OpenDescendant><Pos id="3097" x="2168" y="2091"/></UIInfo><UIOrder id="3098">0</UIOrder></Result><SignalChannel id="3006">Position</SignalChannel><TargetEntryScript id="3007">choiceEntered.value = true;ernData.setData(&quot;fstage&quot;,2);</TargetEntryScript><TargetExitScript id="3008"/><TimeUnits id="3009">Ms</TimeUnits><TotalTime id="3010">1500</TotalTime><UIEnabled id="3011">false</UIEnabled><UIInfo id="3031"><OpenDescendant id="3032">0</OpenDescendant><Pos id="3033" x="85" y="66"/></UIInfo><UIOrder id="3034">0</UIOrder></ControlElement><Result id="3045"><Name id="3053">ChoseLeft</Name><UIEnabled id="3054">false</UIEnabled><UIInfo id="3055"><OpenDescendant id="3063">0</OpenDescendant><Pos id="3064" x="329" y="74"/></UIInfo><UIOrder id="3065">0</UIOrder></Result><Result id="3069"><Name id="3070">ChoseRight</Name><UIEnabled id="3071">false</UIEnabled><UIInfo id="3072"><OpenDescendant id="3073">0</OpenDescendant><Pos id="3074" x="330" y="187"/></UIInfo><UIOrder id="3075">0</UIOrder></Result><Result id="3103"><Name id="3104">Fail</Name><UIEnabled id="3105">false</UIEnabled><UIInfo id="3106"><OpenDescendant id="3107">0</OpenDescendant><Pos id="3108" x="326" y="290"/></UIInfo><UIOrder id="3109">0</UIOrder></Result><Transition id="2108"><Destination id="2109">ChoseLeft</Destination><Source id="2110">SampleChoiceControl</Source><SourceResult id="2111">LeftChoice</SourceResult></Transition><Transition id="2112"><Destination id="2113">ChoseRight</Destination><Source id="2127">SampleChoiceControl</Source><SourceResult id="2130">RightChoice</SourceResult></Transition><Transition id="2159"><Destination id="2160">Fail</Destination><Source id="2161">SampleChoiceControl</Source><SourceResult id="2162">Total Time Exceeded</SourceResult></Transition><Transition id="2163"><Destination id="2164">Fail</Destination><Source id="2165">SampleChoiceControl</Source><SourceResult id="2181">Broke Fixation</SourceResult></Transition></StateMachineElement><Type id="3149">StateMachine</Type><UIEnabled id="3150">false</UIEnabled><UIInfo id="3151"><OpenDescendant id="3152">0</OpenDescendant><Pos id="3153" x="546" y="146"/></UIInfo><UIOrder id="3154">0</UIOrder><Parameter type="Range" id="3113"><Increment id="3114">0</Increment><Max id="3115">100000</Max><Min id="3116">1</Min><Name id="3117">saccadeWaitTime</Name><UIEnabled id="3118">true</UIEnabled><UIInfo id="3119"><OpenDescendant id="3120">0</OpenDescendant><Pos id="3121" x="108" y="446"/></UIInfo><UIOrder id="3122">0</UIOrder><Units id="3123"/><Value id="3124">1000</Value></Parameter><Parameter type="Boolean" id="3133"><FalseLabel id="3134">False</FalseLabel><Name id="3135">choiceEntered</Name><TrueLabel id="3136">True</TrueLabel><UIEnabled id="3137">false</UIEnabled><UIInfo id="3138"><OpenDescendant id="3139">0</OpenDescendant><Pos id="3140" x="246" y="443"/></UIInfo><UIOrder id="3141">0</UIOrder><Value id="3142">false</Value></Parameter><Parameter type="Timer" id="3160"><Name id="3161">choiceTimer</Name><TimeUnits id="3173">Ms</TimeUnits><UIEnabled id="3174">false</UIEnabled><UIInfo id="3175"><OpenDescendant id="3176">0</OpenDescendant><Pos id="3177" x="104" y="346"/></UIInfo><UIOrder id="3178">0</UIOrder></Parameter><Result id="3194"><Name id="3195">ChoseLeft</Name><UIEnabled id="3196">false</UIEnabled><UIInfo id="3197"><OpenDescendant id="3198">0</OpenDescendant><Pos id="3199" x="554" y="146"/></UIInfo><UIOrder id="3200">0</UIOrder></Result><Result id="3204"><Name id="3205">ChoseRight</Name><UIEnabled id="3206">false</UIEnabled><UIInfo id="3207"><OpenDescendant id="3208">0</OpenDescendant><Pos id="3209" x="555" y="253"/></UIInfo><UIOrder id="3210">0</UIOrder></Result><Result id="3214"><Name id="3215">Fail</Name><UIEnabled id="3216">false</UIEnabled><UIInfo id="3217"><OpenDescendant id="3218">0</OpenDescendant><Pos id="3219" x="549" y="380"/></UIInfo><UIOrder id="3220">0</UIOrder></Result><Transition id="2241"><Destination id="2242">MakeChoice</Destination><Source id="2243">ExitFixation</Source><SourceResult id="2244">Success</SourceResult></Transition><Transition id="2245"><Destination id="2246">ExitFixation</Destination><Source id="2247"/><SourceResult id="2248"/></Transition><Transition id="2249"><Destination id="2250">ChoseLeft</Destination><Source id="2251">MakeChoice</Source><SourceResult id="2252">ChoseLeft</SourceResult></Transition><Transition id="2253"><Destination id="2254">ChoseRight</Destination><Source id="2255">MakeChoice</Source><SourceResult id="2256">ChoseRight</SourceResult></Transition><Transition id="2257"><Destination id="2258">Fail</Destination><Source id="2259">MakeChoice</Source><SourceResult id="2260">Fail</SourceResult></Transition><Transition id="2261"><Destination id="2267">Fail</Destination><Source id="2269">ExitFixation</Source><SourceResult id="2270">Fail</SourceResult></Transition></StateMachineElement><Transition id="2290"><Destination id="2291">ChoseLeftOps</Destination><Source id="2292">SampleChoiceControl</Source><SourceResult id="2293">ChoseLeft</SourceResult></Transition><Transition id="2294"><Destination id="2295">ChoseRightOps</Destination><Source id="2296">SampleChoiceControl</Source><SourceResult id="2297">ChoseRight</SourceResult></Transition><Transition id="2309"><Destination id="2310">Incomplete</Destination><Source id="2311">SampleChoiceControl</Source><SourceResult id="2312">Fail</SourceResult></Transition><Transition id="2026"><Destination id="2027">SampleChoiceControl</Destination><Source id="2028">Sample</Source><SourceResult id="2029">Success</SourceResult></Transition><VisualElement type="Operator Info Graphic" id="3048"><Color A="255" B="0" G="0" R="255" id="3049">#ff0000</Color><Dimensions height="20" id="3050" width="100" x="0" y="0"/><Fields id="3051">pDev</Fields><Layer id="3052">0</Layer><Name id="3056">biasInfo</Name><OperatorView id="3057">true</OperatorView><Position id="3058" x="250" y="370"/><SubjectView id="3059">false</SubjectView><UIEnabled id="3060">false</UIEnabled><UIInfo id="3061"><OpenDescendant id="3062">0</OpenDescendant><Pos id="3066" x="237" y="587"/></UIInfo><UIOrder id="3067">0</UIOrder><Values id="3068"/><Visible id="3076">false</Visible></VisualElement></StateMachineElement>
          <StateMachineElement type="ScriptElement" id="674">
            <Name id="675">IsDone</Name>
            <Result id="629">
              <Name id="630">false</Name>
              <UIEnabled id="631">false</UIEnabled>
              <UIInfo id="637">
                <Pos id="641" x="0" y="0"/>
              </UIInfo>
              <UIOrder id="643">0</UIOrder>
            </Result>
            <Result id="653">
              <Name id="654">true</Name>
              <UIEnabled id="655">false</UIEnabled>
              <UIInfo id="665">
                <Pos id="667" x="0" y="0"/>
              </UIInfo>
              <UIOrder id="669">0</UIOrder>
            </Result>
            <Script id="2487">														blockInfo.updateValue();
														if(trialNum.value &lt; minTrialsPerBlock.value)
														    return false;
														if(Math.random()*100 &gt;= switchProb.value)
														    return false;
														return true;</Script>
            <Type id="677">ScriptElement</Type>
            <UIEnabled id="678">false</UIEnabled>
            <UIInfo id="2489">
              <Pos id="2490" x="711" y="453"/>
            </UIInfo>
            <UIOrder id="682">0</UIOrder>
          </StateMachineElement>
          <Transition id="2532">
            <Destination id="2533">Done</Destination>
            <Source id="2534">IsDone</Source>
            <SourceResult id="690">true</SourceResult>
          </Transition>
          <Parameter type="Range" id="720">
            <Increment id="721">1</Increment>
            <Max id="2535">100</Max>
            <Min id="2548">0</Min>
            <Name id="724">switchProb</Name>
            <UIEnabled id="2552">false</UIEnabled>
            <UIInfo id="2553">
              <Pos id="727" x="251" y="547"/>
            </UIInfo>
            <UIOrder id="2555">0</UIOrder>
            <Units id="2556"/>
            <Value id="731">10</Value>
          </Parameter>
          <Parameter type="Range" id="2573">
            <Increment id="2574">1</Increment>
            <Max id="2575">100</Max>
            <Min id="743">1</Min>
            <Name id="2576">minTrialsPerBlock</Name>
            <UIEnabled id="2577">false</UIEnabled>
            <UIInfo id="2585">
              <Pos id="2588" x="358" y="546"/>
            </UIInfo>
            <UIOrder id="2590">0</UIOrder>
            <Units id="2591"/>
            <Value id="751">40</Value>
          </Parameter>
          <Parameter type="Numeric" id="2609">
            <Name id="761">trialNum</Name>
            <UIEnabled id="2610">false</UIEnabled>
            <UIInfo id="2611">
              <Pos id="2612" x="139" y="549"/>
            </UIInfo>
            <UIOrder id="2614">0</UIOrder>
            <Units id="2615"/>
            <Value id="2616">0</Value>
          </Parameter>
          <Parameter type="Boolean" id="2622">
            <FalseLabel id="793">False</FalseLabel>
            <Name id="2623">rightIsSafe</Name>
            <TrueLabel id="2631">True</TrueLabel>
            <UIEnabled id="2634">false</UIEnabled>
            <UIInfo id="2635">
              <Pos id="2636" x="480" y="549"/>
            </UIInfo>
            <UIOrder id="2638">0</UIOrder>
            <Value id="2639">false</Value>
          </Parameter>
          <StateMachineElement type="ScriptElement" id="2661">
            <Name id="2663">isConsume</Name>
            <Result id="752">
              <Name id="753">false</Name>
              <UIEnabled id="2664">false</UIEnabled>
              <UIInfo id="2665">
                <Pos id="2666" x="2000" y="2000"/>
              </UIInfo>
              <UIOrder id="2675">0</UIOrder>
            </Result>
            <Result id="770">
              <Name id="771">true</Name>
              <UIEnabled id="2720">false</UIEnabled>
              <UIInfo id="2721">
                <Pos id="2722" x="2075" y="2000"/>
              </UIInfo>
              <UIOrder id="2724">0</UIOrder>
            </Result>
            <Script id="2728">														if(tokensCollected.value &lt; 6)
														    return false;
														return true;</Script>
            <Type id="811">ScriptElement</Type>
            <UIEnabled id="2729">false</UIEnabled>
            <UIInfo id="2730">
              <Pos id="2731" x="223" y="100"/>
            </UIInfo>
            <UIOrder id="816">0</UIOrder>
          </StateMachineElement>
          <StateMachineElement type="StateMachine" id="2738">
            <EntryScript id="2739">														Reward.unitQuantity = rewardQuantity.value;

														ernData.setData(&quot;trialType&quot;,0);
														ernData.setData(&quot;nconsume&quot;,6);</EntryScript>
            <ExitScript id="824">														fixGraphic.visible = false;
														tokensCollected.value = Math.floor(Math.random() * 3) + 2;
														var tokens = [token0, token1, token2, token3, token4, token5];
														for (i = 0; i &lt; tokens.length; i++) {
														    tokens[i].visible = false;
														}</ExitScript>
            <Level id="2740">Stage</Level>
            <Name id="2741">ConsumeTrial</Name>
            <Type id="2742">StateMachine</Type>
            <UIEnabled id="2743">false</UIEnabled>
            <UIInfo id="2744">
              <Pos id="2745" x="374" y="259"/>
            </UIInfo>
            <UIOrder id="2747">0</UIOrder>
            <Result id="1098">
              <Name id="1099">Done</Name>
              <UIEnabled id="1100">false</UIEnabled>
              <UIInfo id="1101">
                <Pos id="1102" x="257" y="107"/>
              </UIInfo>
              <UIOrder id="1104">0</UIOrder>
            </Result>
            <Parameter type="Range" id="2168">
              <Increment id="2169">1</Increment>
              <Max id="2170">1000</Max>
              <Min id="2171">1</Min>
              <Name id="2172">rewardQuantity</Name>
              <UIEnabled id="2173">true</UIEnabled>
              <UIInfo id="2174">
                <Pos id="2175" x="102" y="409"/>
              </UIInfo>
              <UIOrder id="2177">0</UIOrder>
              <Units id="2178"/>
              <Value id="2179">200</Value>
            </Parameter>
            <StateMachineElement type="Reward" id="2188">
              <MinRewardPeriod id="2189">0</MinRewardPeriod>
              <Name id="2190">Reward</Name>
              <NumRewards id="2191">1</NumRewards>
              <Result id="1823">
                <Name id="1824">done</Name>
                <UIEnabled id="1825">false</UIEnabled>
                <UIInfo id="1826">
                  <Pos id="1827" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="1829">0</UIOrder>
              </Result>
              <RewardChan id="2192">1</RewardChan>
              <RewardQty id="2193">150</RewardQty>
              <Type id="2194">Reward</Type>
              <UIEnabled id="2195">false</UIEnabled>
              <UIInfo id="2196">
                <Pos id="2197" x="271" y="221"/>
              </UIInfo>
              <UIOrder id="2199">0</UIOrder>
            </StateMachineElement>
            <StateMachineElement type="State" id="2208">
              <BackgroundColor A="255" B="0" G="0" R="0" id="2209">#000000</BackgroundColor>
              <EntryScript id="2210">
                tokens = [token0,token1,token2,token3,token4,token5];
                tokens[tokensCollected.value-1].outline = true;
                tokensCollected.value--;
              </EntryScript>
              <ExitScript id="2211"/>
              <FrameScript id="2212"/>
              <Name id="2213">RemoveToken</Name>
              <UIEnabled id="2214">false</UIEnabled>
              <UIInfo id="2215">
                <Pos id="2216" x="490" y="389"/>
              </UIInfo>
              <UIOrder id="2218">0</UIOrder>
              <Result id="2262">
                <Name id="2263">Done</Name>
                <UIEnabled id="2264">false</UIEnabled>
                <UIInfo id="2265">
                  <Pos id="2266" x="425" y="176"/>
                </UIInfo>
                <UIOrder id="2268">0</UIOrder>
              </Result>
              <ControlElement type="Stopwatch Controller" id="2340">
                <Name id="2341">RewardInterval</Name>
                <Result id="1852">
                  <Name id="1853">Success</Name>
                  <UIEnabled id="1854">false</UIEnabled>
                  <UIInfo id="1855">
                    <Pos id="1856" x="0" y="0"/>
                  </UIInfo>
                  <UIOrder id="1858">0</UIOrder>
                </Result>
                <Time id="2342">500</Time>
                <TimeUnits id="2343">Ms</TimeUnits>
                <Type id="2344"/>
                <UIEnabled id="2345">true</UIEnabled>
                <UIInfo id="2346">
                  <Pos id="2347" x="184" y="143"/>
                </UIInfo>
                <UIOrder id="2349">0</UIOrder>
              </ControlElement>
              <Transition id="1864">
                <Destination id="1865">Done</Destination>
                <Source id="1866">RewardInterval</Source>
                <SourceResult id="1867">Success</SourceResult>
              </Transition>
            </StateMachineElement>
            <StateMachineElement type="ScriptElement" id="2272">
              <Name id="2273">NeedsReward</Name>
              <Result id="1888">
                <Name id="1889">false</Name>
                <UIEnabled id="1895">false</UIEnabled>
                <UIInfo id="1897">
                  <Pos id="1898" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="1900">0</UIOrder>
              </Result>
              <Result id="1904">
                <Name id="1905">true</Name>
                <UIEnabled id="1906">false</UIEnabled>
                <UIInfo id="1907">
                  <Pos id="1908" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="1910">0</UIOrder>
              </Result>
              <Script id="2274">return tokensCollected.value &gt; 0;</Script>
              <Type id="2275">ScriptElement</Type>
              <UIEnabled id="2276">false</UIEnabled>
              <UIInfo id="2277">
                <Pos id="2278" x="103" y="221"/>
              </UIInfo>
              <UIOrder id="2280">0</UIOrder>
            </StateMachineElement>
            <Transition id="1929">
              <Destination id="1935">Reward</Destination>
              <Source id="1937">NeedsReward</Source>
              <SourceResult id="1938">true</SourceResult>
            </Transition>
            <Transition id="1939">
              <Destination id="1940">RemoveToken</Destination>
              <Source id="1941">Reward</Source>
              <SourceResult id="1942">done</SourceResult>
            </Transition>
            <Transition id="1947">
              <Destination id="1948">NeedsReward</Destination>
              <Source id="1949">RemoveToken</Source>
              <SourceResult id="1950">Done</SourceResult>
            </Transition>
            <Transition id="1951">
              <Destination id="1952">Done</Destination>
              <Source id="1953">NeedsReward</Source>
              <SourceResult id="1954">false</SourceResult>
            </Transition>
            <Transition id="1955">
              <Destination id="1956">NeedsReward</Destination>
              <Source id="1957"/>
              <SourceResult id="1958"/>
            </Transition>
          </StateMachineElement>
          <StateMachineElement type="PausePoint" id="2851">
            <BackgroundColor A="255" B="0" G="0" R="0" id="2852">#000000</BackgroundColor>
            <ForcePause id="870">false</ForcePause>
            <Name id="871">Pause</Name>
            <PausingScript id="872"/>
            <RestartingScript id="873"/>
            <Result id="2853">
              <Name id="2854">done</Name>
              <UIEnabled id="2855">false</UIEnabled>
              <UIInfo id="2863">
                <Pos id="2866" x="0" y="0"/>
              </UIInfo>
              <UIOrder id="847">0</UIOrder>
            </Result>
            <Type id="874">PausePoint</Type>
            <UIEnabled id="875">false</UIEnabled>
            <UIInfo id="876">
              <Pos id="877" x="736" y="302"/>
            </UIInfo>
            <UIOrder id="879">0</UIOrder>
          </StateMachineElement>
          <StateMachineElement type="State" id="888">
            <BackgroundColor A="255" B="0" G="0" R="0" id="889">#000000</BackgroundColor>
            <EntryScript id="2894">														var tokens = [token0, token1, token2, token3, token4, token5];
														for (var i = 0; i &lt; tokens.length; i++) {
														    tokens[i].outline = i &gt;= tokensCollected.value;
														    tokens[i].visible = true;
														}


														//Reset all ernData values
														ernData.setData(&quot;totalTrial&quot;,ernData.getDataAsInt(&quot;totalTrial&quot;)+1);
														ernData.setData(&quot;totalTrialInBlock&quot;,ernData.getDataAsInt(&quot;totalTrialInBlock&quot;)+1);
														ernData.setData(&quot;goodTrialInBlock&quot;,-1);
														ernData.setData(&quot;blockNumber&quot;,blockNum.value);
														ernData.setData(&quot;trial_success&quot;,-1);
														ernData.setData(&quot;trialType&quot;,-1);
														ernData.setData(&quot;monkeyPick&quot;,-1);
														ernData.setData(&quot;compPick&quot;,-1);
														ernData.setData(&quot;maxdevpr&quot;,-1);
														ernData.setData(&quot;lambda&quot;,-1);
														ernData.setData(&quot;monkeqpr&quot;,-1);
														ernData.setData(&quot;compeqpr&quot;,-1);
														ernData.setData(&quot;initdot&quot;,-1);
														ernData.setData(&quot;finaldot&quot;,-1);
														ernData.setData(&quot;nring&quot;,-1);
														ernData.setData(&quot;rewcount&quot;,-1000);
														ernData.setData(&quot;feedbacktype&quot;,0);
														ernData.setData(&quot;nconsume&quot;,0);
														ernData.setData(&quot;biasyes&quot;,0);
														ernData.setData(&quot;fstage&quot;,0);
														ernData.setData(&quot;outcomecolor&quot;,-1);
														ernData.setData(&quot;pickedTargX&quot;,-1);
														ernData.setData(&quot;pickedTargY&quot;,-1);</EntryScript>
            <ExitScript id="2895">fixGraphic.visible = true;</ExitScript>
            <FrameScript id="2897"/>
            <Name id="893">PreWatch</Name>
            <UIEnabled id="2898">false</UIEnabled>
            <UIInfo id="2910">
              <Pos id="2911" x="97" y="189"/>
            </UIInfo>
            <UIOrder id="2913">0</UIOrder>
            <ControlElement type="Stopwatch Controller" id="2914">
              <Name id="2915">PreWatchMs</Name>
              <Result id="2916">
                <Name id="2917">Success</Name>
                <UIEnabled id="2918">false</UIEnabled>
                <UIInfo id="2919">
                  <Pos id="2920" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="851">0</UIOrder>
              </Result>
              <Time id="940">300</Time>
              <TimeUnits id="941">Ms</TimeUnits>
              <Type id="942"/>
              <UIEnabled id="2933">true</UIEnabled>
              <UIInfo id="2934">
                <Pos id="2935" x="120" y="81"/>
              </UIInfo>
              <UIOrder id="2937">0</UIOrder>
            </ControlElement>
            <Result id="954">
              <Name id="955">Done</Name>
              <UIEnabled id="956">false</UIEnabled>
              <UIInfo id="957">
                <Pos id="958" x="320" y="90"/>
              </UIInfo>
              <UIOrder id="960">0</UIOrder>
            </Result>
            <Transition id="2971">
              <Destination id="2977">Done</Destination>
              <Source id="2988">PreWatchMs</Source>
              <SourceResult id="2989">Success</SourceResult>
            </Transition>
          </StateMachineElement>
          <StateMachineElement type="State" id="3000">
            <BackgroundColor A="255" B="0" G="0" R="0" id="3001">#000000</BackgroundColor>
            <EntryScript id="908"/>
            <ExitScript id="909">ernData.updateValue();</ExitScript>
            <FrameScript id="3002"/>
            <Name id="3003">PostWatch</Name>
            <UIEnabled id="3004">false</UIEnabled>
            <UIInfo id="913">
              <Pos id="914" x="627" y="162"/>
            </UIInfo>
            <UIOrder id="3013">0</UIOrder>
            <ControlElement type="Stopwatch Controller" id="964">
              <Name id="965">PostWatchMs</Name>
              <Result id="3014">
                <Name id="3015">Success</Name>
                <UIEnabled id="3016">false</UIEnabled>
                <UIInfo id="3017">
                  <Pos id="3018" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="3020">0</UIOrder>
              </Result>
              <Time id="966">300</Time>
              <TimeUnits id="967">Ms</TimeUnits>
              <Type id="968"/>
              <UIEnabled id="969">true</UIEnabled>
              <UIInfo id="970">
                <Pos id="971" x="155" y="111"/>
              </UIInfo>
              <UIOrder id="973">0</UIOrder>
            </ControlElement>
            <Result id="980">
              <Name id="981">Done</Name>
              <UIEnabled id="982">false</UIEnabled>
              <UIInfo id="983">
                <Pos id="984" x="409" y="155"/>
              </UIInfo>
              <UIOrder id="986">0</UIOrder>
            </Result>
            <Transition id="974">
              <Destination id="975">Done</Destination>
              <Source id="976">PostWatchMs</Source>
              <SourceResult id="977">Success</SourceResult>
            </Transition>
          </StateMachineElement>
          <Transition id="3047">
            <Destination id="861">Trial</Destination>
            <Source id="862">isConsume</Source>
            <SourceResult id="863">false</SourceResult>
          </Transition>
          <Transition id="864">
            <Destination id="865">ConsumeTrial</Destination>
            <Source id="3077">isConsume</Source>
            <SourceResult id="3078">true</SourceResult>
          </Transition>
          <Transition id="883">
            <Destination id="884">PreWatch</Destination>
            <Source id="885"/>
            <SourceResult id="886"/>
          </Transition>
          <StateMachineElement type="State" id="990">
            <BackgroundColor A="255" B="0" G="0" R="0" id="991">#000000</BackgroundColor>
            <EntryScript id="992"/>
            <ExitScript id="993"/>
            <FrameScript id="994"/>
            <Name id="995">ITI</Name>
            <UIEnabled id="996">false</UIEnabled>
            <UIInfo id="997">
              <Pos id="998" x="898" y="352"/>
            </UIInfo>
            <UIOrder id="1000">0</UIOrder>
            <ControlElement type="Stopwatch Controller" id="1040">
              <Name id="1041">ITIMs</Name>
              <Result id="988">
                <Name id="989">Success</Name>
                <UIEnabled id="999">false</UIEnabled>
                <UIInfo id="1001">
                  <Pos id="1002" x="0" y="0"/>
                </UIInfo>
                <UIOrder id="1004">0</UIOrder>
              </Result>
              <Time id="1042">400</Time>
              <TimeUnits id="1043">Ms</TimeUnits>
              <Type id="1044"/>
              <UIEnabled id="1045">true</UIEnabled>
              <UIInfo id="1046">
                <Pos id="1047" x="152" y="74"/>
              </UIInfo>
              <UIOrder id="1049">0</UIOrder>
            </ControlElement>
            <Result id="1056">
              <Name id="1057">Done</Name>
              <UIEnabled id="1058">false</UIEnabled>
              <UIInfo id="1059">
                <Pos id="1060" x="361" y="169"/>
              </UIInfo>
              <UIOrder id="1062">0</UIOrder>
            </Result>
            <Transition id="1027">
              <Destination id="1028">Done</Destination>
              <Source id="1029">ITIMs</Source>
              <SourceResult id="1030">Success</SourceResult>
            </Transition>
          </StateMachineElement>
          <Transition id="1009">
            <Destination id="1010">isConsume</Destination>
            <Source id="1011">PreWatch</Source>
            <SourceResult id="1012">Done</SourceResult>
          </Transition>
          <Transition id="1013">
            <Destination id="1014">Pause</Destination>
            <Source id="1015">PostWatch</Source>
            <SourceResult id="1016">Done</SourceResult>
          </Transition>
          <Transition id="1034">
            <Destination id="1035">ITI</Destination>
            <Source id="1036">Pause</Source>
            <SourceResult id="1037">done</SourceResult>
          </Transition>
          <Transition id="1038">
            <Destination id="1039">IsDone</Destination>
            <Source id="1048">ITI</Source>
            <SourceResult id="1050">Done</SourceResult>
          </Transition>
          <Transition id="1051">
            <Destination id="1052">PreWatch</Destination>
            <Source id="1053">IsDone</Source>
            <SourceResult id="1054">false</SourceResult>
          </Transition>
          
          <Transition id="1073">
            <Destination id="1074">PostWatch</Destination>
            <Source id="1075">ConsumeTrial</Source>
            <SourceResult id="1076">Done</SourceResult>
          </Transition>
          <VisualElement type="Box Graphic" id="1206">
            <Color A="255" B="255" G="255" R="255" id="1207">#ffffff</Color>
            <Dimensions height="20" id="1208" width="20" x="0" y="0"/>
            <Layer id="1209">0</Layer>
            <Name id="1210">fixGraphic</Name>
            <OperatorView id="1211">true</OperatorView>
            <Outline id="1212">false</Outline>
            <OutlineThickness id="1213">0</OutlineThickness>
            <Position id="1214" x="400" y="300"/>
            <SubjectView id="1215">true</SubjectView>
            <UIEnabled id="1216">false</UIEnabled>
            <UIInfo id="1217">
              <Pos id="1218" x="143" y="439"/>
            </UIInfo>
            <UIOrder id="1220">0</UIOrder>
            <Visible id="1221">false</Visible>
          </VisualElement>
          <Transition id="1943">
            <Destination id="1944">PostWatch</Destination>
            <Source id="1945">Trial</Source>
            <SourceResult id="1946">Incomplete</SourceResult>
          </Transition>

          <Parameter type="Double" id="2335">
            <Max id="2336">1</Max>
            <Min id="2337">-3.46944695195361e-18</Min>
            <Name id="2338">monkNashPr</Name>
            <UIEnabled id="2339">false</UIEnabled>
            <UIInfo id="2348">
              <Pos id="2350" x="339" y="739"/>
            </UIInfo>
            <UIOrder id="2352">0</UIOrder>
            <Value id="2353">0</Value>
          </Parameter>
          <Parameter type="Double" id="2360">
            <Max id="2361">1</Max>
            <Min id="2362">0</Min>
            <Name id="2363">compNashPr</Name>
            <UIEnabled id="2364">false</UIEnabled>
            <UIInfo id="2365">
              <Pos id="2366" x="339" y="833"/>
            </UIInfo>
            <UIOrder id="2368">0</UIOrder>
            <Value id="2369">0</Value>
          </Parameter>
          <Parameter type="Double" id="2594">
            <Max id="2595">10000000</Max>
            <Min id="2596">0</Min>
            <Name id="2597">maxDevR</Name>
            <UIEnabled id="2598">false</UIEnabled>
            <UIInfo id="2599">
              <Pos id="2600" x="238" y="773"/>
            </UIInfo>
            <UIOrder id="2602">0</UIOrder>
            <Value id="2603">0</Value>
          </Parameter>
          <VisualElement type="Operator Info Graphic" id="2452">
            <Color A="255" B="0" G="255" R="0" id="2453">#00ff00</Color>
            <Dimensions height="20" id="2454" width="800" x="0" y="0"/>
            <Fields id="2455"/>
            <Layer id="2456">0</Layer>
            <Name id="2457">choice</Name>
            <OperatorView id="2458">true</OperatorView>
            <Position id="2459" x="0" y="20"/>
            <SubjectView id="2460">false</SubjectView>
            <UIEnabled id="2461">false</UIEnabled>
            <UIInfo id="2462">
              <Pos id="2463" x="438" y="740"/>
            </UIInfo>
            <UIOrder id="2465">0</UIOrder>
            <Values id="2466"/>
            <Visible id="2467">false</Visible>
          </VisualElement>
          <VisualElement type="Operator Info Graphic" id="2696">
            <Color A="255" B="0" G="255" R="0" id="2697">#00ff00</Color>
            <Dimensions height="20" id="2698" width="800" x="0" y="0"/>
            <Fields id="2699"/>
            <Layer id="2700">0</Layer>
            <Name id="2701">reward</Name>
            <OperatorView id="2702">true</OperatorView>
            <Position id="2703" x="0" y="40"/>
            <SubjectView id="2704">false</SubjectView>
            <UIEnabled id="2705">false</UIEnabled>
            <UIInfo id="2706">
              <Pos id="2707" x="449" y="833"/>
            </UIInfo>
            <UIOrder id="2709">0</UIOrder>
            <Values id="2710"/>
            <Visible id="2711">false</Visible>
          </VisualElement>
          <VisualElement type="Operator Info Graphic" id="2396">
            <Color A="255" B="0" G="255" R="0" id="2397">#00ff00</Color>
            <Dimensions height="20" id="2398" width="800" x="0" y="0"/>
            <Fields id="2399"/>
            <Layer id="2400">0</Layer>
            <Name id="2401">alg1Pr</Name>
            <OperatorView id="2402">true</OperatorView>
            <Position id="2403" x="0" y="60"/>
            <SubjectView id="2404">false</SubjectView>
            <UIEnabled id="2405">false</UIEnabled>
            <UIInfo id="2406">
              <Pos id="2407" x="553" y="730"/>
            </UIInfo>
            <UIOrder id="2409">0</UIOrder>
            <Values id="2410"/>
            <Visible id="2411">false</Visible>
          </VisualElement>
          <VisualElement type="Operator Info Graphic" id="2424">
            <Color A="255" B="0" G="255" R="0" id="2425">#00ff00</Color>
            <Dimensions height="20" id="2426" width="800" x="0" y="0"/>
            <Fields id="2427"/>
            <Layer id="2428">0</Layer>
            <Name id="2429">alg1Bias</Name>
            <OperatorView id="2430">true</OperatorView>
            <Position id="2431" x="0" y="80"/>
            <SubjectView id="2432">false</SubjectView>
            <UIEnabled id="2433">false</UIEnabled>
            <UIInfo id="2434">
              <Pos id="2435" x="550" y="833"/>
            </UIInfo>
            <UIOrder id="2437">0</UIOrder>
            <Values id="2438"/>
            <Visible id="2439">false</Visible>
          </VisualElement>
          <VisualElement type="Operator Info Graphic" id="2508">
            <Color A="255" B="0" G="255" R="0" id="2509">#00ff00</Color>
            <Dimensions height="20" id="2510" width="800" x="0" y="0"/>
            <Fields id="2511"/>
            <Layer id="2512">0</Layer>
            <Name id="2513">alg2Pr</Name>
            <OperatorView id="2514">true</OperatorView>
            <Position id="2515" x="0" y="100"/>
            <SubjectView id="2516">false</SubjectView>
            <UIEnabled id="2517">false</UIEnabled>
            <UIInfo id="2518">
              <Pos id="2519" x="660" y="727"/>
            </UIInfo>
            <UIOrder id="2521">0</UIOrder>
            <Values id="2522"/>
            <Visible id="2523">false</Visible>
          </VisualElement>
          <VisualElement type="Operator Info Graphic" id="2536">
            <Color A="255" B="0" G="255" R="0" id="2537">#00ff00</Color>
            <Dimensions height="20" id="2538" width="800" x="0" y="0"/>
            <Fields id="2539"/>
            <Layer id="2540">0</Layer>
            <Name id="2541">alg2Bias</Name>
            <OperatorView id="2542">true</OperatorView>
            <Position id="2543" x="0" y="120"/>
            <SubjectView id="2544">false</SubjectView>
            <UIEnabled id="2545">false</UIEnabled>
            <UIInfo id="2546">
              <Pos id="2547" x="656" y="832"/>
            </UIInfo>
            <UIOrder id="2549">0</UIOrder>
            <Values id="2550"/>
            <Visible id="2551">false</Visible>
          </VisualElement>
        <StateMachineElement type="ScriptElement" id="2678"><Name id="2679">IncTrialNum</Name><Result id="2443"><Name id="2444">false</Name><UIEnabled id="2445">false</UIEnabled><UIInfo id="2446"><Pos id="2447" x="0" y="0"/></UIInfo><UIOrder id="2449">0</UIOrder></Result><Result id="2468"><Name id="2469">true</Name><UIEnabled id="2470">false</UIEnabled><UIInfo id="2471"><Pos id="2472" x="0" y="0"/></UIInfo><UIOrder id="2474">0</UIOrder></Result><Script id="2680">trialNum.value++;
blockInfo.setData(&quot;Trial&quot;,trialNum.value);
blockInfo.setData(&quot;TotalTrial&quot;,blockInfo.getDataAsInt(&quot;TotalTrial&quot;)+1);

ernData.setData(&quot;trial_success&quot;,1);
ernData.setData(&quot;goodTrialInBlock&quot;,trialNum.value);
ernData.setData(&quot;finaldot&quot;,tokensCollected.value);</Script><Type id="2681">ScriptElement</Type><UIEnabled id="2689">false</UIEnabled><UIInfo id="2691"><Pos id="2692" x="482" y="48"/></UIInfo><UIOrder id="2718">0</UIOrder></StateMachineElement><Transition id="2492"><Destination id="2493">IncTrialNum</Destination><Source id="2501">Trial</Source><SourceResult id="2503">Complete</SourceResult></Transition><Transition id="2504"><Destination id="2505">PostWatch</Destination><Source id="2506">IncTrialNum</Source><SourceResult id="2507">false</SourceResult></Transition><Transition id="2520"><Destination id="2524">PostWatch</Destination><Source id="2525">IncTrialNum</Source><SourceResult id="2526">true</SourceResult></Transition><Parameter type="Numeric" id="2944"><Name id="2945">numGain</Name><UIEnabled id="2946">false</UIEnabled><UIInfo id="2947"><Pos id="2948" x="134" y="922"/></UIInfo><UIOrder id="2950">0</UIOrder><Units id="2951"/><Value id="2952">0</Value></Parameter><Parameter type="Numeric" id="2958"><Name id="2959">numNeutral</Name><UIEnabled id="2960">false</UIEnabled><UIInfo id="2961"><Pos id="2962" x="220" y="923"/></UIInfo><UIOrder id="2964">0</UIOrder><Units id="2965"/><Value id="2966">0</Value></Parameter><Parameter type="Numeric" id="2972"><Name id="2973">numLoss</Name><UIEnabled id="2974">false</UIEnabled><UIInfo id="2975"><Pos id="2976" x="302" y="923"/></UIInfo><UIOrder id="2978">0</UIOrder><Units id="2979"/><Value id="2980">0</Value></Parameter><Parameter type="Range" id="3089"><Increment id="3090">1</Increment><Max id="3099">100</Max><Min id="3100">1</Min><Name id="3101">histDepth</Name><UIEnabled id="3102">false</UIEnabled><UIInfo id="3110"><OpenDescendant id="3111">0</OpenDescendant><Pos id="3191" x="566" y="551"/></UIInfo><UIOrder id="3192">0</UIOrder><Units id="3193"/><Value id="3201">4</Value></Parameter></StateMachineElement>
        <Transition id="619">
          <Destination id="621">Block</Destination>
          <Source id="622"/>
          <SourceResult id="623"/>
        </Transition>
        <Parameter type="Numeric" id="632">
          <Name id="633">blockNum</Name>
          <UIEnabled id="634">false</UIEnabled>
          <UIInfo id="635">
            <Pos id="636" x="143" y="378"/>
          </UIInfo>
          <UIOrder id="638">0</UIOrder>
          <Units id="3397"/>
          <Value id="3398">0</Value>
        </Parameter>
        <Transition id="708">
          <Destination id="3404">Block</Destination>
          <Source id="3405">Block</Source>
          <SourceResult id="3406">Done</SourceResult>
        </Transition>
        <Parameter type="Numeric" id="3407">
          <Name id="3408">lambda</Name>
          <UIEnabled id="780">false</UIEnabled>
          <UIInfo id="3409">
            <Pos id="3410" x="247" y="379"/>
          </UIInfo>
          <UIOrder id="3412">0</UIOrder>
          <Units id="3413"/>
          <Value id="3414">0</Value>
        </Parameter>
        <VisualElement type="Circle Graphic" id="1974">
          <Color A="255" B="0" G="0" R="255" id="1975">#ff0000</Color>
          <Layer id="1976">0</Layer>
          <Name id="1977">token0</Name>
          <OperatorView id="1978">true</OperatorView>
          <Outline id="1979">true</Outline>
          <OutlineThickness id="1980">4</OutlineThickness>
          <Position id="1981" x="425" y="257"/>
          <Radius id="1982">15</Radius>
          <SubjectView id="1983">true</SubjectView>
          <UIEnabled id="1984">false</UIEnabled>
          <UIInfo id="1985">
            <Pos id="1986" x="612" y="77"/>
          </UIInfo>
          <UIOrder id="1988">0</UIOrder>
          <Visible id="1989">true</Visible>
        </VisualElement>
        <VisualElement type="Circle Graphic" id="2002">
          <Color A="255" B="0" G="0" R="255" id="2003">#ff0000</Color>
          <Layer id="2004">0</Layer>
          <Name id="2005">token1</Name>
          <OperatorView id="2006">true</OperatorView>
          <Outline id="2007">true</Outline>
          <OutlineThickness id="2008">4</OutlineThickness>
          <Position id="2009" x="376" y="257"/>
          <Radius id="2010">15</Radius>
          <SubjectView id="2011">true</SubjectView>
          <UIEnabled id="2012">false</UIEnabled>
          <UIInfo id="2013">
            <Pos id="2014" x="456" y="85"/>
          </UIInfo>
          <UIOrder id="2016">0</UIOrder>
          <Visible id="2017">true</Visible>
        </VisualElement>
        <VisualElement type="Circle Graphic" id="2030">
          <Color A="255" B="0" G="0" R="255" id="2031">#ff0000</Color>
          <Layer id="2032">0</Layer>
          <Name id="2033">token2</Name>
          <OperatorView id="2034">true</OperatorView>
          <Outline id="2035">true</Outline>
          <OutlineThickness id="2036">4</OutlineThickness>
          <Position id="2037" x="350" y="300"/>
          <Radius id="2038">15</Radius>
          <SubjectView id="2039">true</SubjectView>
          <UIEnabled id="2040">false</UIEnabled>
          <UIInfo id="2041">
            <Pos id="2042" x="386" y="216"/>
          </UIInfo>
          <UIOrder id="2044">0</UIOrder>
          <Visible id="2045">true</Visible>
        </VisualElement>
        <VisualElement type="Circle Graphic" id="2058">
          <Color A="255" B="0" G="0" R="255" id="2059">#ff0000</Color>
          <Layer id="2060">0</Layer>
          <Name id="2061">token3</Name>
          <OperatorView id="2062">true</OperatorView>
          <Outline id="2063">true</Outline>
          <OutlineThickness id="2064">4</OutlineThickness>
          <Position id="2065" x="375" y="343"/>
          <Radius id="2066">15</Radius>
          <SubjectView id="2067">true</SubjectView>
          <UIEnabled id="2068">false</UIEnabled>
          <UIInfo id="2069">
            <Pos id="2070" x="475" y="347"/>
          </UIInfo>
          <UIOrder id="2072">0</UIOrder>
          <Visible id="2073">true</Visible>
        </VisualElement>
        <VisualElement type="Circle Graphic" id="2086">
          <Color A="255" B="0" G="0" R="255" id="2087">#ff0000</Color>
          <Layer id="2088">0</Layer>
          <Name id="2089">token4</Name>
          <OperatorView id="2090">true</OperatorView>
          <Outline id="2091">true</Outline>
          <OutlineThickness id="2092">4</OutlineThickness>
          <Position id="2093" x="424" y="343"/>
          <Radius id="2094">15</Radius>
          <SubjectView id="2095">true</SubjectView>
          <UIEnabled id="2096">false</UIEnabled>
          <UIInfo id="2097">
            <Pos id="2098" x="608" y="346"/>
          </UIInfo>
          <UIOrder id="2100">0</UIOrder>
          <Visible id="2101">true</Visible>
        </VisualElement>
        <VisualElement type="Circle Graphic" id="2114">
          <Color A="255" B="0" G="0" R="255" id="2115">#ff0000</Color>
          <Layer id="2116">0</Layer>
          <Name id="2117">token5</Name>
          <OperatorView id="2118">true</OperatorView>
          <Outline id="2119">true</Outline>
          <OutlineThickness id="2120">4</OutlineThickness>
          <Position id="2121" x="450" y="300"/>
          <Radius id="2122">15</Radius>
          <SubjectView id="2123">true</SubjectView>
          <UIEnabled id="2124">false</UIEnabled>
          <UIInfo id="2125">
            <Pos id="2126" x="720" y="227"/>
          </UIInfo>
          <UIOrder id="2128">0</UIOrder>
          <Visible id="2129">true</Visible>
        </VisualElement>
        <Parameter type="Numeric" id="2142">
          <Name id="2143">tokensCollected</Name>
          <UIEnabled id="2144">false</UIEnabled>
          <UIInfo id="2145">
            <Pos id="2146" x="137" y="514"/>
          </UIInfo>
          <UIOrder id="2148">0</UIOrder>
          <Units id="2149"/>
          <Value id="2150">0</Value>
        </Parameter>
      <VisualElement type="Operator Info Graphic" id="2902"><Color A="255" B="0" G="255" R="0" id="2903">#00ff00</Color><Dimensions height="20" id="2904" width="800" x="0" y="0"/><Fields id="2905">Block,Trial,TotalTrial,Gain%,Neutral%,Loss%</Fields><Layer id="2906">0</Layer><Name id="2907">blockInfo</Name><OperatorView id="2908">true</OperatorView><Position id="2909" x="0" y="550"/><SubjectView id="2922">false</SubjectView><UIEnabled id="2925">false</UIEnabled><UIInfo id="2926"><Pos id="2927" x="544" y="466"/></UIInfo><UIOrder id="2929">0</UIOrder><Values id="2930">0,0,0,0,0,0</Values><Visible id="2931">true</Visible></VisualElement><VisualElement type="Operator Info Graphic" id="3112"><Color A="255" B="0" G="255" R="0" id="3125">#00ff00</Color><Dimensions height="0" id="3126" width="0" x="0" y="0"/><Fields id="3127"/><Layer id="3128">0</Layer><Name id="3129">ernData</Name><OperatorView id="3130">true</OperatorView><Position id="3131" x="0" y="0"/><SubjectView id="3132">false</SubjectView><UIEnabled id="3143">false</UIEnabled><UIInfo id="3155"><OpenDescendant id="3156">0</OpenDescendant><Pos id="3157" x="268" y="512"/></UIInfo><UIOrder id="3158">0</UIOrder><Values id="3159"/><Visible id="3179">false</Visible></VisualElement></StateMachine>
      <UIInfo id="607">
        <Pos id="608" x="1969" y="1742"/>
      </UIInfo>
    </Task>
  </Experiment></PictoData>