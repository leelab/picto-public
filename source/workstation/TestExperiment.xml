<?xml version="1.0" encoding="UTF-8"?>

<Experiment>
	<Name>Test Experiment</Name>
	<Tasks>
		<Task>
			<Name>Frame Rate Testing</Name>
			<!-- This is a simple state machine designed to test the frame rate 	-->
			<!-- at which we are rendering.  In order to truly "max out" the 		-->
			<!-- rendering engine, we are going to draw an ellipse and use 			-->
			<!-- scripts on entry, exit, and every frame.  To run this as an 		-->
			<!-- actual frame rate test, we'll need to modify the rendering loop 	-->
			<!-- to output frame rates.												-->
			<StateMachine>
				<Name>FrameRateTest</Name>
				<Level>Trial</Level>
				<InitialElement>TestState</InitialElement>
				<Parameters>
					<Parameter type="Boolean">
						<Name>Increasing</Name>
						<OperatorUI>False</OperatorUI>
					</Parameter>
				</Parameters>
				<StateMachineElements>
					<StateMachineElement type="State">
						<Revision>-1</Revision>
						<EngineNeeded>-1</EngineNeeded>
						<Name>TestState</Name>
						<ControlElements>
							<ControlElement type="Stopwatch Controller">
								<OperatorVisible>false</OperatorVisible>
								<SubjectVisible>false</SubjectVisible>
								<Name>Stopwatch</Name>
								<TimeUnits>Ms</TimeUnits>
								<Time>4000</Time>				
							</ControlElement>
						</ControlElements>
						<Scene>
							<Canvas>
								<Layers>
									<BackgroundColor>#000000</BackgroundColor>
									<Layer>
										<Name>Layer1</Name>
										<Order>1</Order>
										<VisualElement type="Ellipse Graphic">
											<Name>Ellipse</Name>
											<Position x="400" y="400"/>
											<Dimensions x="0" y="0" width="300" height="300"/>
											<Color R="255" G="0" B="0" A="255"/>
										</VisualElement>
									</Layer>
								</Layers>
							</Canvas>
							<AudioElement></AudioElement>
						</Scene>
						<Scripts>
							<EntryScript>
									//Upon entry we set the ellipse's color
									Ellipse.setColor(0,255,127,255);
							</EntryScript>
							<FrameScript>
								//Every frame, we change the Ellipse's size
								width = Ellipse.getWidth();
								height = Ellipse.getHeight();
								
								if(width &lt;= 270)
									Increasing.setValue(true);
								if(width &gt;= 480)
									Increasing.setValue(false);
								
								if(Increasing.getValue() == true)
								{
									Ellipse.setDimensions(width+10,height+10);
								}
								else
								{
									Ellipse.setDimensions(width-10,height-10);
								}
							</FrameScript>
							<ExitScript>
								//Upon exit we set the ellipse's color
								Ellipse.setColor(255,0,0,255);
							</ExitScript>
						</Scripts>
						<Results>
							<Result>Success</Result>
						</Results>
						<Link>
							<Source>Stopwatch</Source>
							<SourceResult>Success</SourceResult>
							<Destination>Success</Destination>
						</Link>
					</StateMachineElement>
					<StateMachineElement type="Result">
						<Name>Done</Name>
					</StateMachineElement>
				</StateMachineElements>
				<Transitions>
					<Transition>
						<Source>TestState</Source>
						<SourceResult>Success</SourceResult>
						<Destination>Done</Destination>
					</Transition>
				</Transitions>
			</StateMachine>

		</Task>
    <Task>
      <Name>Frame Rate Testing 2</Name>
      <!-- This is a simple state machine designed to test the frame rate 	-->
      <!-- at which we are rendering.  The task repeats the trial infinitely -->
      <!-- The trial consists of an ellipse which is moved (but not resized) -->
      <!-- every frame.  -->
      <StateMachine>
        <Name>Frame Rate Testing Experiment</Name>
        <Level>Task</Level>
        <InitialElement>FrameRateTrial</InitialElement>
        <StateMachineElements>
        
          <StateMachine>
            <Name>FrameRateTrial</Name>
            <Level>Trial</Level>
            <InitialElement>TestState</InitialElement>
            <Parameters>
              <Parameter type="Boolean">
                <Name>MovingUp</Name>
				<OperatorUI>False</OperatorUI>
              </Parameter>
            </Parameters>
            <StateMachineElements>

              <StateMachineElement type="State">
                <Revision>-1</Revision>
                <EngineNeeded>-1</EngineNeeded>
                <Name>TestState</Name>
                <ControlElements>
                  <ControlElement type="Stopwatch Controller">
                    <Name>Stopwatch</Name>
					<OperatorVisible>false</OperatorVisible>
					<SubjectVisible>false</SubjectVisible>
					<TimeUnits>Ms</TimeUnits>
                    <Time>5000</Time>
                  </ControlElement>
                </ControlElements>
                <Scene>
                  <Canvas>
                    <Layers>
                      <BackgroundColor>#000000</BackgroundColor>
                      <Layer>
                        <Name>Layer1</Name>
                        <Order>1</Order>
                        <VisualElement type="Ellipse Graphic">
                          <Name>Ellipse</Name>
                          <Position x="400" y="199"/>
                          <Dimensions x="0" y="0" width="300" height="300"/>
                          <Color R="255" G="0" B="0" A="255"/>
                        </VisualElement>
                      </Layer>
                    </Layers>
                  </Canvas>
                  <AudioElement></AudioElement>
                </Scene>
                <Scripts>
                  <FrameScript>
                    //Every frame, we move the ellipse
                    x = Ellipse.getX();
                    y = Ellipse.getY();
                    

                    if(y &gt;= 600)
                      MovingUp.setValue(true);
                    if(y &lt;= 200)
                    MovingUp.setValue(false);

                    if(MovingUp.getValue() == true)
                      Ellipse.setPosition(x,y-10);
                    else
                      Ellipse.setPosition(x,y+10);
                  </FrameScript>
                </Scripts>
                <Results>
                  <Result>Success</Result>
                </Results>
				<Link>
					<Source>Stopwatch</Source>
					<SourceResult>Success</SourceResult>
					<Destination>Success</Destination>
				</Link>
              </StateMachineElement>
              <StateMachineElement type="Result">
                <Name>Done</Name>
              </StateMachineElement>
            </StateMachineElements>
            <Transitions>
              <Transition>
                <Source>TestState</Source>
                <SourceResult>Success</SourceResult>
                <Destination>Done</Destination>
              </Transition>
            </Transitions>
          </StateMachine>

          <StateMachineElement type="State">
            <Revision>-1</Revision>
            <EngineNeeded>-1</EngineNeeded>
            <Name>InterTrialInterval</Name>
            <ControlElements>
              <ControlElement type="Stopwatch Controller">
				<OperatorVisible>false</OperatorVisible>
				<SubjectVisible>false</SubjectVisible>
                <Name>Stopwatch</Name>
				<TimeUnits>Ms</TimeUnits>
                <Time>2000</Time>
              </ControlElement>
            </ControlElements>
            <Scene>
              <Canvas>
                <Layers>
                  <BackgroundColor>#000000</BackgroundColor>
                  <Layer>
                    <Name>Layer1</Name>
                    <Order>1</Order>
                  </Layer>
                </Layers>
              </Canvas>
              <AudioElement></AudioElement>
            </Scene>
            <Scripts></Scripts>
            <Results>
            	<Result>Success</Result>
            </Results>
			<Link>
				<Source>Stopwatch</Source>
				<SourceResult>Success</SourceResult>
				<Destination>Success</Destination>
			</Link>
           </StateMachineElement>

        </StateMachineElements>

        <Transitions>
          <Transition>
            <Source>FrameRateTrial</Source>
            <SourceResult>Done</SourceResult>
            <Destination>InterTrialInterval</Destination>
          </Transition>
          <Transition>
            <Source>InterTrialInterval</Source>
            <SourceResult>Success</SourceResult>
            <Destination>FrameRateTrial</Destination>
          </Transition>
        </Transitions>
        
     </StateMachine>
    </Task>
 
    <Task>
			<Name>Simple Test</Name>
			<StateMachine>
				<Name>Dumb Trial</Name>
				<Level>Trial</Level>
				<InitialElement>Stage 1</InitialElement>
				<StateMachineElements>
				
					<!-- This stage is a test of the TargetController controlElement 		-->
					<!-- The input device must fixate on the displayed target.  If 			-->
					<!-- successful, then another target is displayed.  If unsuccessful,	-->
					<!-- then we move on to Stage 2.  This stage can last indefinitely 		-->
					<StateMachine>
						<Name>Stage 1</Name>
						<Level>Stage</Level>
						<InitialElement>Initialize Values</InitialElement>
						<Parameters>
							<Parameter type="Numeric">
								<Name>SuccessfulAttempts</Name>
								<OperatorUI>False</OperatorUI>
								<Order>1</Order>
							</Parameter>
						</Parameters>
						<StateMachineElements>
							<StateMachineElement type = "ScriptElement">
								<!-- TEST1TEST1	-->
								<Name>Initialize Values</Name>
								<!-- TEST2 -->
								<Script>
									SuccessfulAttempts.setValue(0);
								</Script>

								<!-- TEST3 -->
							</StateMachineElement>
							<StateMachineElement type = "ScriptElement">
								<Name>Increment successful attempts</Name>
								<Script>
									SuccessfulAttempts.setValue(SuccessfulAttempts.getValue()+1);
								</Script>
							</StateMachineElement>

							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 1</Name>
								<ControlElements>
									<ControlElement type="Target Controller">
										<Name>TargetCont</Name>
										<OperatorVisible>false</OperatorVisible>
										<SubjectVisible>false</SubjectVisible>
										<SignalChannel>PositionChannel</SignalChannel>
										<Shape>Rectangle</Shape>
										<Target x="400" y="400" width="100" height="100"/>
										<TimeUnits>Ms</TimeUnits>
										<TotalTime>10000</TotalTime>
										<FixationTime>1000</FixationTime>
										<MinInitialAcquisitionTime>0</MinInitialAcquisitionTime>
										<MaxInitialAcquisitionTime>4000</MaxInitialAcquisitionTime>
										<MaxReacquisitionTime>1000</MaxReacquisitionTime>
										<ReacquisitionAllowed>Yes</ReacquisitionAllowed>
									</ControlElement>
								</ControlElements>
								<Scene>
									<Canvas>
										<Layers>
											<BackgroundColor>#000000</BackgroundColor>
											<Layer>
												<Name>Layer1</Name>
												<Order>1</Order>
												<VisualElement type="Box Graphic">
													<Name>LeftBox</Name>
													<Position x="400" y="400"/>
													<Dimensions x="0" y="0" width="100" height="100"/>
													<Color R="255" G="0" B="0" A="255"/>
												</VisualElement>
											</Layer>
										</Layers>
									</Canvas>
									<AudioElement></AudioElement>
								</Scene>
								<Scripts>
									<!-- Upon entry we set the box's color to red, yellow, or green -->
									<!-- depending on the number of successful attempts -->
									<EntryScript>
										if(SuccessfulAttempts.getValue() == 0)
										{
											LeftBox.setColor(255,0,0,255);
										}
										else if(SuccessfulAttempts.getValue() == 1)
										{
											LeftBox.setColor(255,255,0);	//testing the use of a default variable
										}
										else if(SuccessfulAttempts.getValue() == 2)
										{
											LeftBox.setColor(0,255,0,255);
										}
									</EntryScript>
								</Scripts>
								<Results>
									<Result>Success</Result>
									<Result>Broke Fixation</Result>
									<Result>Total Time Excceeded</Result>
									<Result>Initial Aquistion Time Exceeded</Result>
									<Result>Reaquistion Time Exceeded</Result>
								</Results>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Broke Fixation</SourceResult>
									<Destination>Broke Fixation</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Total Time Excceeded</SourceResult>
									<Destination>Total Time Excceeded</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
									<Destination>Initial Aquistion Time Exceeded</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Reaquistion Time Exceeded</SourceResult>
									<Destination>Reaquistion Time Exceeded</Destination>
								</Link>
							</StateMachineElement>
							
							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 2</Name>
								<ControlElements>
									<ControlElement type="Target Controller">
										<Name>TargetCont</Name>
										<OperatorVisible>false</OperatorVisible>
										<SubjectVisible>false</SubjectVisible>
										<SignalChannel>PositionChannel</SignalChannel>
										<Shape>Rectangle</Shape>
										<TimeUnits>Ms</TimeUnits>
										<Target x="600" y="400" width="100" height="100"/>
										<TotalTime>10000</TotalTime>
										<FixationTime>1000</FixationTime>
										<MinInitialAcquisitionTime>0</MinInitialAcquisitionTime>
										<MaxInitialAcquisitionTime>4000</MaxInitialAcquisitionTime>
										<MaxReacquisitionTime>1000</MaxReacquisitionTime>
										<ReacquisitionAllowed>Yes</ReacquisitionAllowed>
									</ControlElement>
								</ControlElements>
								<Scene>
									<Canvas>
										<Layers>
											<BackgroundColor>#000000</BackgroundColor>
											<Layer>
												<Name>Layer1</Name>
												<Order>1</Order>
							  <VisualElement type="Box Graphic">
								<Name>RightBox</Name>
								<Position x="600" y="400"/>
								<Dimensions x="0" y="0" width="100" height="100"/>
								<Color R="255" G="0" B="0" A="255"/>
							  </VisualElement>
											</Layer>
										</Layers>
									</Canvas>
									<AudioElement></AudioElement>
								</Scene>
								<Scripts>
									<!-- Upon exit we set the box's color to red, yellow, or green -->
									<!-- depending on the number of successful attempts. -->
									<!-- Remember that the number of successful attempts hasn't yet -->
									<!-- been updated upon exit from the state -->
									<ExitScript>
										if(SuccessfulAttempts.getValue() == 0)
										{
											RightBox.setColor(255,255,0,255);
										}
										else if(SuccessfulAttempts.getValue() == 1)
										{
											RightBox.setColor(0,255,0);	//testing the use of a default variable
										}
									</ExitScript>
								</Scripts>
								<Results>
									<Result>Success</Result>
									<Result>Broke Fixation</Result>
									<Result>Total Time Excceeded</Result>
									<Result>Initial Aquistion Time Exceeded</Result>
									<Result>Reaquistion Time Exceeded</Result>
								</Results>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Broke Fixation</SourceResult>
									<Destination>Broke Fixation</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Total Time Excceeded</SourceResult>
									<Destination>Total Time Excceeded</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
									<Destination>Initial Aquistion Time Exceeded</Destination>
								</Link>
								<Link>
									<Source>TargetCont</Source>
									<SourceResult>Reaquistion Time Exceeded</SourceResult>
									<Destination>Reaquistion Time Exceeded</Destination>
								</Link>
							</StateMachineElement>
							
							<StateMachineElement type="FlowElement">
								<Name>Finish Stage</Name>
								<Conditions>
									<Condition>
										<Name>Finished</Name>
										<Order>1</Order>
										<LeftParameter>SuccessfulAttempts</LeftParameter>
										<Comparison>Greater than</Comparison>
										<Value>2</Value>
									</Condition>
									<Condition>
										<Name>NotFinished</Name>
										<Order>2</Order>
										<LeftParameter>SuccessfulAttempts</LeftParameter>
										<Comparison>Less than or equal</Comparison>
										<Value>2</Value>
									</Condition>
								</Conditions>
								<Results>
									<Result>Finished</Result>
									<Result>NotFinished</Result>
								</Results>
							</StateMachineElement>
							
							<StateMachineElement type="Result">
								<Name>Success</Name>
								<RewardQty>5</RewardQty>
								<RewardChan>1</RewardChan>
							</StateMachineElement>
						</StateMachineElements>
						
						<Transitions>
							<Transition>
								<Source>Initialize Values</Source>
								<SourceResult>done</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Success</SourceResult>
								<Destination>State 2</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Broke Fixation</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Total Time Excceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Reaquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Success</SourceResult>
								<Destination>Increment successful attempts</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Broke Fixation</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Total Time Excceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Reaquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>Increment successful attempts</Source>
								<SourceResult>done</SourceResult>
								<Destination>Finish Stage</Destination>
							</Transition>
							<Transition>
								<Source>Finish Stage</Source>
								<SourceResult>Finished</SourceResult>
								<Destination>Success</Destination>
							</Transition>
							<Transition>
								<Source>Finish Stage</Source>
								<SourceResult>NotFinished</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
						 </Transitions>
						<!--<Results>
							<Result>
							<Name>Success</Name>
							</Result>
						</Results>-->
					</StateMachine>

				<!-- This stage is used to test the ChoiceController.  It consists of -->
				<!-- a single state with a top and bottom target.  Selecting the top -->
				<!-- target leads to result of "KeepGoing" (with 1 reward), which connects -->
				<!-- to Stage 3.  Selecting the bottom leads to a result of "Stop" -->
				<!-- Which leads to the trial's "Done" result.-->
				<StateMachine>
				  <Name>Stage 2</Name>
				  <Level>Stage</Level>
				  <InitialElement>State 1</InitialElement>
				  <StateMachineElements>
					<StateMachineElement type="State">
					  <Revision>-1</Revision>
					  <EngineNeeded>-1</EngineNeeded>
					  <Name>State 1</Name>
					  <ControlElements>
						<ControlElement type="Choice Controller">
						  <Name>MyChoiceController</Name>
						  <OperatorVisible>true</OperatorVisible>
						  <SubjectVisible>false</SubjectVisible>
						  <SignalChannel>PositionChannel</SignalChannel>
						  <Shape>Ellipse</Shape>
						  <TimeUnits>Ms</TimeUnits>
						  <TotalTime>10000</TotalTime>
						  <FixationTime>1000</FixationTime>
						  <AllowReentries>Yes</AllowReentries>
						  <Target name="TopTarget" x="400" y="300" width="150" height="150"/>
						  <Target name="BottomTarget" x="400" y="500" width="150" height="150"/>
						</ControlElement>
					  </ControlElements>
					  <Scene>
						<Canvas>
						  <Layers>
							<BackgroundColor>#000000</BackgroundColor>
							<Layer>
							  <Name>Layer1</Name>
							  <Order>1</Order>
							  <VisualElement type="Circle Graphic">
								<Name>TopCircle</Name>
								<Position x="400" y="300"/>
								<Radius>75</Radius>
								<Color R="255" G="255" B="0" A="255"/>
							  </VisualElement>
							  <VisualElement type="Circle Graphic">
								<Name>BottomCircle</Name>
								<Position x="400" y="500"/>
								<Radius>75</Radius>
								<Color R="255" G="255" B="0" A="255"/>
								</VisualElement>
							</Layer>
						  </Layers>
						</Canvas>
						<AudioElement>
						</AudioElement>
					  </Scene>
					  <Results>
						<Result>Success</Result>
						<Result>TopTarget</Result>
						<Result>BottomTarget</Result>
						<Result>Broke Fixation</Result>
						<Result>Total Time Excceeded</Result>
					  </Results>
					  <Link>
						<Source>MyChoiceController</Source>
						<SourceResult>Broke Fixation</SourceResult>
						<Destination>Broke Fixation</Destination>
					  </Link>
					  <Link>
						<Source>MyChoiceController</Source>
						<SourceResult>Total Time Excceeded</SourceResult>
						<Destination>Total Time Excceeded</Destination>
					  </Link>
					  <Link>
						<Source>MyChoiceController</Source>
						<SourceResult>BottomTarget</SourceResult>
						<Destination>BottomTarget</Destination>
					  </Link>
					  <Link>
						<Source>MyChoiceController</Source>
						<SourceResult>TopTarget</SourceResult>
						<Destination>TopTarget</Destination>
					  </Link>
					</StateMachineElement>
					<StateMachineElement type="Result">
					  <Name>KeepGoing</Name>
					  <RewardQty>1</RewardQty>
					  <RewardChan>1</RewardChan>
					</StateMachineElement>
					<StateMachineElement type="Result">
					  <Name>Stop</Name>
					</StateMachineElement>

				  </StateMachineElements>
				  <Parameters/>
				  <Transitions>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>Success</SourceResult>
					  <Destination>KeepGoing</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>TopTarget</SourceResult>
					  <Destination>KeepGoing</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>BottomTarget</SourceResult>
					  <Destination>Stop</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>Broke Fixation</SourceResult>
					  <Destination>Stop</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>Total Time Excceeded</SourceResult>
					  <Destination>Stop</Destination>
					</Transition>
				  </Transitions>
				  <!--<Results>
					<Result>
					  <Name>KeepGoing</Name>
					</Result>
					<Result>
					  <Name>Stop</Name>
					</Result>
				  </Results>-->
				</StateMachine>



				<!-- This is a really simple stage that uses the testConmtroller -->
					<!-- and StopwatchController to flip back and forth between two scenes -->
					<StateMachine>
						<Name>Stage 3</Name>
						<Level>Stage</Level>
						<InitialElement>State 1</InitialElement>
						<StateMachineElements>
							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 1</Name>
								<ControlElements>
									<ControlElement type="Test Controller">
										<Name>TestCont</Name>
						 		 		<OperatorVisible>true</OperatorVisible>
						  				<SubjectVisible>true</SubjectVisible>
										<NumberOfFrames>120</NumberOfFrames>
									</ControlElement>
								</ControlElements>
								<Scene>
									<Canvas>
										<Layers>
											<BackgroundColor>#000000</BackgroundColor>
											<Layer>
												<Name>Layer1</Name>
												<Order>1</Order>
							  						<VisualElement type="Box Graphic">
														<Name>box</Name>
														<Position x="30" y="30"/>
														<Dimensions x="0" y="0" width="50" height="100"/>
														<Color R="255" G="255" B="0" A="255"/>
							 						</VisualElement>
											</Layer>
										</Layers>
									</Canvas>
									<AudioElement></AudioElement>
								</Scene>
								<Results>
									<Result>Success</Result>
								</Results>
					  			<Link>
									<Source>TestCont</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
					  			</Link>
							</StateMachineElement>
							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 2</Name>
								<ControlElements>
									<ControlElement type="Stopwatch Controller">
										<OperatorVisible>true</OperatorVisible>
										<SubjectVisible>true</SubjectVisible>
										<Name>Stopwatch</Name>
										<TimeUnits>Ms</TimeUnits>
										<Time>5000</Time>
									</ControlElement>
								</ControlElements>
								<Scene>
									<Canvas>
										<Layers>
											<BackgroundColor>#000000</BackgroundColor>
											<Layer>
												<Name>Layer1</Name>
												<Order>1</Order>
												<VisualElement type="Box Graphic">
													<Name>box</Name>
													<Position x="100" y="30"/>
													<Dimensions x="0" y="0" width="50" height="100"/>
													<Color R="255" G="0" B="255" A="255"/>
												</VisualElement>
											</Layer>
										</Layers>
									</Canvas>
									<AudioElement></AudioElement>
								</Scene>
								<Scripts>
									<FrameScript>
										x = box.getX();
										y = box.getY()+10;
										box.setPosition(x,y);
									</FrameScript>
								</Scripts>
								<Results>
									<Result>Success</Result>
								</Results>
					  			<Link>
									<Source>Stopwatch</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
					  			</Link>
							</StateMachineElement>  
							<StateMachineElement type="Result">
								<Name>Done</Name>
							</StateMachineElement>
			 
						</StateMachineElements>
						<Parameters/>
						<Transitions>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Success</SourceResult>
								<Destination>State 2</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Success</SourceResult>
								<Destination>Done</Destination>
							</Transition>
						 </Transitions>
					</StateMachine>
					
					
					<StateMachineElement type="Result">
						<Name>Done</Name>
					</StateMachineElement>
					
				</StateMachineElements>
				<Parameters/>
				<Transitions>
					<Transition>
						<Source>Stage 1</Source>
						<SourceResult>Success</SourceResult>
						<Destination>Stage 2</Destination>
					</Transition>
				<Transition>
				  <Source>Stage 2</Source>
				  <SourceResult>KeepGoing</SourceResult>
				  <Destination>Stage 3</Destination>
				</Transition>
				<Transition>
				  <Source>Stage 2</Source>
				  <SourceResult>Stop</SourceResult>
				  <Destination>Done</Destination>
				</Transition>
				<Transition>
				  <Source>Stage 3</Source>
				  <SourceResult>Done</SourceResult>
				  <Destination>Done</Destination>
				</Transition>
			  </Transitions>
			</StateMachine>
		</Task>
	</Tasks>
</Experiment>