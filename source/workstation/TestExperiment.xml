<Experiment>
	<Name>Test Experiment</Name>
	
		<Task>
			<Name>Frame Rate Testing</Name>
			<!-- This is a simple state machine designed to test the frame rate 	-->
			<!-- at which we are rendering.  In order to truly "max out" the 		-->
			<!-- rendering engine, we are going to draw an ellipse and use 			-->
			<!-- scripts on entry, exit, and every frame.  To run this as an 		-->
			<!-- actual frame rate test, we'll need to modify the rendering loop 	-->
			<!-- to output frame rates.												-->
			<StateMachine>
				<Name>FrameRateTest</Name>
				<Level>Trial</Level>
				<InitialElement>TestState</InitialElement>
				
					<Scriptable type="Boolean">
						<Name>Increasing</Name>
						<OperatorUI>False</OperatorUI>
					<UIInfo><Pos x="100" y="100"/></UIInfo></Scriptable>

				
					<StateMachineElement type="State">
						<Revision>-1</Revision>
						<EngineNeeded>-1</EngineNeeded>
						<Name>TestState</Name>
						<ControlElement type="Stopwatch Controller">
							<OperatorVisible>false</OperatorVisible>
							<SubjectVisible>false</SubjectVisible>
							<Name>Stopwatch</Name>
							<TimeUnits>Ms</TimeUnits>
							<Time>4000</Time>
						<UIInfo><Pos x="100" y="100"/></UIInfo></ControlElement>
						
							
								
									<BackgroundColor>#000000</BackgroundColor>


										<Scriptable type="Ellipse Graphic">
											<Order>1</Order>
											<Name>Ellipse</Name>
											<Position x="400" y="400"/>
											<Dimensions x="0" y="0" width="300" height="300"/>
											<Color R="255" G="0" B="0" A="255"/>
										</Scriptable>
								
								
							
							<EntryScript>
									//Upon entry we set the ellipse's color
									Ellipse.setColor(0,255,127,255);
							</EntryScript>
							<FrameScript>
								//Every frame, we change the Ellipse's size
								width = Ellipse.getWidth();
								height = Ellipse.getHeight();
								
								if(width &lt;= 270)
									Increasing.setValue(true);
								if(width &gt;= 480)
									Increasing.setValue(false);
								
								if(Increasing.getValue() == true)
								{
									Ellipse.setDimensions(width+10,height+10);
								}
								else
								{
									Ellipse.setDimensions(width-10,height-10);
								}
							</FrameScript>
							<ExitScript>
								//Upon exit we set the ellipse's color
								Ellipse.setColor(255,0,0,255);
							</ExitScript>
						
						
							<Result><Name>Success</Name><UIInfo><Pos x="334" y="97"/></UIInfo></Result>
						
						<Transition>
							<Source>Stopwatch</Source>
							<SourceResult>Success</SourceResult>
							<Destination>Success</Destination>
						</Transition>
					<UIInfo><Pos x="399" y="126"/></UIInfo></StateMachineElement>
				
				
					<Result><Name>Done</Name><UIInfo><Pos x="183" y="361"/></UIInfo></Result>
				
				
					<Transition>
						<Source>TestState</Source>
						<SourceResult>Success</SourceResult>
						<Destination>Done</Destination>
					</Transition>
				
			<UIInfo><Pos x="92" y="99"/></UIInfo></StateMachine>

		<UIInfo><Pos x="100" y="100"/></UIInfo></Task>
    <Task>
      <Name>Frame Rate Testing 2</Name>
      <!-- This is a simple state machine designed to test the frame rate 	-->
      <!-- at which we are rendering.  The task repeats the trial infinitely -->
      <!-- The trial consists of an ellipse which is moved (but not resized) -->
      <!-- every frame.  -->
      <StateMachine>
        <Name>Frame Rate Testing Experiment</Name>
        <Level>Task</Level>
        <InitialElement>FrameRateTrial</InitialElement>
        
        
          <StateMachineElement type="StateMachine">
            <Name>FrameRateTrial</Name>
            <Level>Trial</Level>
            <InitialElement>TestState</InitialElement>
            
              <Scriptable type="Boolean">
                <Name>MovingUp</Name>
				<OperatorUI>False</OperatorUI>
              </Scriptable>

            

              <StateMachineElement type="State">
                <Revision>-1</Revision>
                <EngineNeeded>-1</EngineNeeded>
                <Name>TestState</Name>
                
                  <ControlElement type="Stopwatch Controller">
                    <Name>Stopwatch</Name>
					<OperatorVisible>false</OperatorVisible>
					<SubjectVisible>false</SubjectVisible>
					<TimeUnits>Ms</TimeUnits>
                    <Time>5000</Time>
                  </ControlElement>
                
                
                  
                    
                      <BackgroundColor>#000000</BackgroundColor>

                        <Scriptable type="Ellipse Graphic">
                          <Name>Ellipse</Name>
                          <Order>1</Order>
                          <Position x="400" y="199"/>
                          <Dimensions x="0" y="0" width="300" height="300"/>
                          <Color R="255" G="0" B="0" A="255"/>
                        </Scriptable>

                    
                  
                
                
                  <FrameScript>
                    //Every frame, we move the ellipse
                    x = Ellipse.getX();
                    y = Ellipse.getY();
                    

                    if(y &gt;= 600)
                      MovingUp.setValue(true);
                    if(y &lt;= 200)
                    MovingUp.setValue(false);

                    if(MovingUp.getValue() == true)
                      Ellipse.setPosition(x,y-10);
                    else
                      Ellipse.setPosition(x,y+10);
                  </FrameScript>
                
                
                  <Result><Name>Success</Name></Result>
                
				<Transition>
					<Source>Stopwatch</Source>
					<SourceResult>Success</SourceResult>
					<Destination>Success</Destination>
				</Transition>
              <UIInfo><Pos x="700" y="100"/></UIInfo></StateMachineElement>
            
			
				<Result><Name>Done</Name><UIInfo><Pos x="400" y="100"/></UIInfo></Result>
			
            
              <Transition>
                <Source>TestState</Source>
                <SourceResult>Success</SourceResult>
                <Destination>Done</Destination>
              </Transition>
            
          <UIInfo><Pos x="100" y="98"/></UIInfo></StateMachineElement>

          <StateMachineElement type="State">
            <Revision>-1</Revision>
            <EngineNeeded>-1</EngineNeeded>
            <Name>InterTrialInterval</Name>
            
              <ControlElement type="Stopwatch Controller">
				<OperatorVisible>false</OperatorVisible>
				<SubjectVisible>false</SubjectVisible>
                <Name>Stopwatch</Name>
				<TimeUnits>Ms</TimeUnits>
                <Time>2000</Time>
              <UIInfo><Pos x="100" y="100"/></UIInfo></ControlElement>
                  <BackgroundColor>#000000</BackgroundColor>

            	<Result><Name>Success</Name><UIInfo><Pos x="400" y="100"/></UIInfo></Result>
			<Transition>
				<Source>Stopwatch</Source>
				<SourceResult>Success</SourceResult>
				<Destination>Success</Destination>
			</Transition>
           <UIInfo><Pos x="400" y="100"/></UIInfo></StateMachineElement>

        
        
          <Transition>
            <Source>FrameRateTrial</Source>
            <SourceResult>Done</SourceResult>
            <Destination>InterTrialInterval</Destination>
          </Transition>
          <Transition>
            <Source>InterTrialInterval</Source>
            <SourceResult>Success</SourceResult>
            <Destination>FrameRateTrial</Destination>
          </Transition>
        
        
     <UIInfo><Pos x="100" y="100"/></UIInfo></StateMachine>
    <UIInfo><Pos x="400" y="100"/></UIInfo></Task>
 
    <Task>
			<Name>Simple Test</Name>
			<StateMachine>
				<Name>Dumb Trial</Name>
				<Level>Trial</Level>
				<InitialElement>Stage 1</InitialElement>
				
				
					<!-- This stage is a test of the TargetController controlElement 		-->
					<!-- The input device must fixate on the displayed target.  If 			-->
					<!-- successful, then another target is displayed.  If unsuccessful,	-->
					<!-- then we move on to Stage 2.  This stage can last indefinitely 		-->
					<StateMachineElement type="StateMachine">
						<Name>Stage 1</Name>
						<Level>Stage</Level>
						<InitialElement>Initialize Values</InitialElement>
						
							<Scriptable type="Numeric">
								<Name>SuccessfulAttempts</Name>
								<OperatorUI>False</OperatorUI>
								<Order>1</Order>
							<UIInfo><Pos x="168" y="681"/></UIInfo></Scriptable>

						
							<StateMachineElement type="ScriptElement">
								<!-- TEST1TEST1	-->
								<Name>Initialize Values</Name>
								<!-- TEST2 -->
								<Script>
									SuccessfulAttempts.setValue(0);
								</Script>

								<!-- TEST3 -->
							<UIInfo><Pos x="147" y="119"/></UIInfo></StateMachineElement>
							<StateMachineElement type="ScriptElement">
								<Name>Increment successful attempts</Name>
								<Script>
									SuccessfulAttempts.setValue(SuccessfulAttempts.getValue()+1); return;
								</Script>
							<UIInfo><Pos x="141" y="371"/></UIInfo></StateMachineElement>

							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 1</Name>
								
									<ControlElement type="Target Controller">
										<Name>TargetCont</Name>
										<OperatorVisible>false</OperatorVisible>
										<SubjectVisible>false</SubjectVisible>
										<SignalChannel>PositionChannel</SignalChannel>
										<Shape>Rectangle</Shape>
										<Target x="400" y="400" width="100" height="100"/>
										<TimeUnits>Ms</TimeUnits>
										<TotalTime>10000</TotalTime>
										<FixationTime>1000</FixationTime>
										<MinInitialAcquisitionTime>0</MinInitialAcquisitionTime>
										<MaxInitialAcquisitionTime>4000</MaxInitialAcquisitionTime>
										<MaxReacquisitionTime>1000</MaxReacquisitionTime>
										<ReacquisitionAllowed>Yes</ReacquisitionAllowed>
									<UIInfo><Pos x="97" y="95"/></UIInfo><Result><Name>Broke Fixation</Name><UIInfo><Pos x="100" y="100"/></UIInfo></Result><Result><Name>Initial Aquistion Time Exceeded</Name><UIInfo><Pos x="354" y="253"/></UIInfo></Result><Result><Name>Reaquistion Time Exceeded</Name><UIInfo><Pos x="566" y="406"/></UIInfo></Result><Result><Name>Success</Name><UIInfo><Pos x="480" y="623"/></UIInfo></Result><Result><Name>Total Time Excceeded</Name><UIInfo><Pos x="297" y="840"/></UIInfo></Result></ControlElement>
								
								
									
										
											<BackgroundColor>#000000</BackgroundColor>
											
												<Scriptable type="Box Graphic">
													<Name>LeftBox</Name>
													<Order>1</Order>
													<Position x="400" y="400"/>
													<Dimensions x="0" y="0" width="100" height="100"/>
													<Color R="255" G="0" B="0" A="255"/>
												<UIInfo><Pos x="2200" y="100"/></UIInfo></Scriptable>

									
								
									<!-- Upon entry we set the box's color to red, yellow, or green -->
									<!-- depending on the number of successful attempts -->
									<EntryScript>
										if(SuccessfulAttempts.getValue() == 0)
										{
											LeftBox.setColor(255,0,0,255);
										}
										else if(SuccessfulAttempts.getValue() == 1)
										{
											LeftBox.setColor(255,255,0);	//testing the use of a default variable
										}
										else if(SuccessfulAttempts.getValue() == 2)
										{
											LeftBox.setColor(0,255,0,255);
										}
									</EntryScript>
								
								
									<Result><Name>Success</Name><UIInfo><Pos x="616" y="838"/></UIInfo></Result>
									<Result><Name>Broke Fixation</Name><UIInfo><Pos x="895" y="149"/></UIInfo></Result>
									<Result><Name>Total Time Excceeded</Name><UIInfo><Pos x="314" y="860"/></UIInfo></Result>
									<Result><Name>Initial Aquistion Time Exceeded</Name><UIInfo><Pos x="942" y="404"/></UIInfo></Result>
									<Result><Name>Reaquistion Time Exceeded</Name><UIInfo><Pos x="896" y="649"/></UIInfo></Result>
								
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Broke Fixation</SourceResult>
									<Destination>Broke Fixation</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Total Time Excceeded</SourceResult>
									<Destination>Total Time Excceeded</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
									<Destination>Initial Aquistion Time Exceeded</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Reaquistion Time Exceeded</SourceResult>
									<Destination>Reaquistion Time Exceeded</Destination>
								</Transition>
							<UIInfo><Pos x="723" y="153"/></UIInfo></StateMachineElement>
							
							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 2</Name>
								
									<ControlElement type="Target Controller">
										<Name>TargetCont</Name>
										<OperatorVisible>false</OperatorVisible>
										<SubjectVisible>false</SubjectVisible>
										<SignalChannel>PositionChannel</SignalChannel>
										<Shape>Rectangle</Shape>
										<TimeUnits>Ms</TimeUnits>
										<Target x="600" y="400" width="100" height="100"/>
										<TotalTime>10000</TotalTime>
										<FixationTime>1000</FixationTime>
										<MinInitialAcquisitionTime>0</MinInitialAcquisitionTime>
										<MaxInitialAcquisitionTime>4000</MaxInitialAcquisitionTime>
										<MaxReacquisitionTime>1000</MaxReacquisitionTime>
										<ReacquisitionAllowed>Yes</ReacquisitionAllowed>
									<UIInfo><Pos x="100" y="100"/></UIInfo></ControlElement>
								
								
									
										
											<BackgroundColor>#000000</BackgroundColor>
											
							  <Scriptable type="Box Graphic">
								<Name>RightBox</Name>
								<Order>1</Order>
								<Position x="600" y="400"/>
								<Dimensions x="0" y="0" width="100" height="100"/>
								<Color R="255" G="0" B="0" A="255"/>
							  </Scriptable>



								
									<!-- Upon exit we set the box's color to red, yellow, or green -->
									<!-- depending on the number of successful attempts. -->
									<!-- Remember that the number of successful attempts hasn't yet -->
									<!-- been updated upon exit from the state -->
									<ExitScript>
										if(SuccessfulAttempts.getValue() == 0)
										{
											RightBox.setColor(255,255,0,255);
										}
										else if(SuccessfulAttempts.getValue() == 1)
										{
											RightBox.setColor(0,255,0);	//testing the use of a default variable
										}
									</ExitScript>
								
								
									<Result><Name>Success</Name><UIInfo><Pos x="373" y="585"/></UIInfo></Result>
									<Result><Name>Broke Fixation</Name><UIInfo><Pos x="717" y="111"/></UIInfo></Result>
									<Result><Name>Total Time Excceeded</Name><UIInfo><Pos x="242" y="808"/></UIInfo></Result>
									<Result><Name>Initial Aquistion Time Exceeded</Name><UIInfo><Pos x="682" y="321"/></UIInfo></Result>
									<Result><Name>Reaquistion Time Exceeded</Name><UIInfo><Pos x="670" y="537"/></UIInfo></Result>
								
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Broke Fixation</SourceResult>
									<Destination>Broke Fixation</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Total Time Excceeded</SourceResult>
									<Destination>Total Time Excceeded</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
									<Destination>Initial Aquistion Time Exceeded</Destination>
								</Transition>
								<Transition>
									<Source>TargetCont</Source>
									<SourceResult>Reaquistion Time Exceeded</SourceResult>
									<Destination>Reaquistion Time Exceeded</Destination>
								</Transition>
							<UIInfo><Pos x="1027" y="142"/></UIInfo></StateMachineElement>
							
							
							
							<StateMachineElement type="Reward">
								<Name>GiveReward</Name>
								<RewardQty>5</RewardQty>
								<RewardChan>1</RewardChan>
							<UIInfo><Pos x="705" y="550"/></UIInfo></StateMachineElement>
						
						
							<Result><Name>Success</Name><UIInfo><Pos x="934" y="469"/></UIInfo></Result>
						
						
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Success</SourceResult>
								<Destination>State 2</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Broke Fixation</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Total Time Excceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Reaquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Success</SourceResult>
								<Destination>Increment successful attempts</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Broke Fixation</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Total Time Excceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Initial Aquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Reaquistion Time Exceeded</SourceResult>
								<Destination>State 1</Destination>
							</Transition>
							
							
							<Transition>
								<Source>GiveReward</Source>
								<SourceResult>done</SourceResult>
								<Destination>Success</Destination>
							</Transition>
						 
						<!--
							<Result><Name>
							<Name>Success</Name>
							</Name></Result>
						-->
					<UIInfo><Pos x="153" y="347"/></UIInfo><Transition><Destination>State 1</Destination><Source>Initialize Values</Source><SourceResult>true</SourceResult></Transition><Transition><Destination>State 1</Destination><Source>Initialize Values</Source><SourceResult>false</SourceResult></Transition><StateMachineElement type="StateMachine"><InitialElement>isFinished</InitialElement><Name>CheckIfFinished</Name><Result><Name>Finished</Name><UIInfo><Pos x="610" y="432"/></UIInfo></Result><Result><Name>NotFinished</Name><UIInfo><Pos x="840" y="213"/></UIInfo></Result><StateMachineElement type="ScriptElement"><Name>isFinished</Name><UIInfo><Pos x="397" y="160"/></UIInfo><Script>return (SuccessfulAttempts.getValue() &gt; 2);</Script><Result><Name>false</Name><UIInfo><Pos x="100" y="100"/></UIInfo></Result><Result><Name>true</Name><UIInfo><Pos x="400" y="100"/></UIInfo></Result></StateMachineElement><UIInfo><Pos x="434" y="400"/></UIInfo><Transition><Destination>NotFinished</Destination><Source>isFinished</Source><SourceResult>false</SourceResult></Transition><Transition><Destination>Finished</Destination><Source>isFinished</Source><SourceResult>true</SourceResult></Transition></StateMachineElement><Transition><Destination>GiveReward</Destination><Source>CheckIfFinished</Source><SourceResult>Finished</SourceResult></Transition><Transition><Destination>State 1</Destination><Source>CheckIfFinished</Source><SourceResult>NotFinished</SourceResult></Transition><Transition><Destination>CheckIfFinished</Destination><Source>Increment successful attempts</Source><SourceResult>false</SourceResult></Transition><Transition><Destination>CheckIfFinished</Destination><Source>Increment successful attempts</Source><SourceResult>true</SourceResult></Transition></StateMachineElement>

				<!-- This stage is used to test the ChoiceController.  It consists of -->
				<!-- a single state with a top and bottom target.  Selecting the top -->
				<!-- target leads to result of "KeepGoing" (with 1 reward), which connects -->
				<!-- to Stage 3.  Selecting the bottom leads to a result of "Stop" -->
				<!-- Which leads to the trial's "Done" result.-->
				<StateMachineElement type="StateMachine">
				  <Name>Stage 2</Name>
				  <Level>Stage</Level>
				  <InitialElement>State 1</InitialElement>
				  
					<StateMachineElement type="State">
					  <Revision>-1</Revision>
					  <EngineNeeded>-1</EngineNeeded>
					  <Name>State 1</Name>
					  
						<ControlElement type="Choice Controller">
						  <Name>MyChoiceController</Name>
						  <OperatorVisible>true</OperatorVisible>
						  <SubjectVisible>false</SubjectVisible>
						  <SignalChannel>PositionChannel</SignalChannel>
						  <Shape>Ellipse</Shape>
						  <TimeUnits>Ms</TimeUnits>
						  <TotalTime>10000</TotalTime>
						  <FixationTime>1000</FixationTime>
						  <AllowReentries>Yes</AllowReentries>
						  <Result type="Target"> 
						    <Name>TopTarget</Name> 
							<Bounds x="400" y="300" width="150" height="150"/>
						  <UIInfo><Pos x="100" y="98"/></UIInfo></Result>
						  <Result type="Target"> 
						    <Name>BottomTarget</Name> 
							<Bounds x="400" y="500" width="150" height="150"/>
						  <UIInfo><Pos x="400" y="99"/></UIInfo></Result>
						<UIInfo><Pos x="100" y="100"/></UIInfo><Result><Name>Broke Fixation</Name><UIInfo><Pos x="700" y="100"/></UIInfo></Result><Result><Name>Total Time Exceeded</Name><UIInfo><Pos x="1000" y="99"/></UIInfo></Result></ControlElement>
					  
					  
						
						  
							<BackgroundColor>#000000</BackgroundColor>
							
							  <Scriptable type="Circle Graphic">
								<Name>TopCircle</Name>
								<Order>1</Order>
								<Position x="400" y="300"/>
								<Radius>75</Radius>
								<Color R="255" G="255" B="0" A="255"/>
							  <UIInfo><Pos x="1900" y="100"/></UIInfo></Scriptable>
							  <Scriptable type="Circle Graphic">
								<Name>BottomCircle</Name>
								<Order>1</Order>
								<Position x="400" y="500"/>
								<Radius>75</Radius>
								<Color R="255" G="255" B="0" A="255"/>
								<UIInfo><Pos x="2200" y="100"/></UIInfo></Scriptable>
						  
						
						

					  
						<Result><Name>TopTarget</Name><UIInfo><Pos x="522" y="602"/></UIInfo></Result>
						<Result><Name>BottomTarget</Name><UIInfo><Pos x="438" y="822"/></UIInfo></Result>
						<Result><Name>Broke Fixation</Name><UIInfo><Pos x="474" y="110"/></UIInfo></Result>
						<Result><Name>Total Time Exceeded</Name><UIInfo><Pos x="536" y="355"/></UIInfo></Result>
					  
					  <Transition>
						<Source>MyChoiceController</Source>
						<SourceResult>Broke Fixation</SourceResult>
						<Destination>Broke Fixation</Destination>
					  </Transition>
					  <Transition>
						<Source>MyChoiceController</Source>
						<SourceResult>Total Time Exceeded</SourceResult>
						<Destination>Total Time Exceeded</Destination>
					  </Transition>
					  <Transition>
						<Source>MyChoiceController</Source>
						<SourceResult>BottomTarget</SourceResult>
						<Destination>BottomTarget</Destination>
					  </Transition>
					  <Transition>
						<Source>MyChoiceController</Source>
						<SourceResult>TopTarget</SourceResult>
						<Destination>TopTarget</Destination>
					  </Transition>
					<UIInfo><Pos x="339" y="141"/></UIInfo></StateMachineElement>
					<StateMachineElement type="Reward">
					  <Name>KeepGoingReward</Name>
					  <RewardQty>1</RewardQty>
					  <RewardChan>1</RewardChan>
					<UIInfo><Pos x="628" y="114"/></UIInfo></StateMachineElement>
					<StateMachineElement type="Reward">
					  <Name>StopReward</Name>
					<UIInfo><Pos x="660" y="402"/></UIInfo></StateMachineElement>

				  
				  
					<Result><Name>KeepGoing</Name><UIInfo><Pos x="922" y="144"/></UIInfo></Result>
					<Result><Name>Stop</Name><UIInfo><Pos x="994" y="434"/></UIInfo></Result>
				  

				  
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>TopTarget</SourceResult>
					  <Destination>KeepGoingReward</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>BottomTarget</SourceResult>
					  <Destination>StopReward</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>Broke Fixation</SourceResult>
					  <Destination>StopReward</Destination>
					</Transition>
					<Transition>
					  <Source>State 1</Source>
					  <SourceResult>Total Time Exceeded</SourceResult>
					  <Destination>StopReward</Destination>
					</Transition>
					<Transition>
					  <Source>KeepGoingReward</Source>
					  <SourceResult>done</SourceResult>
					  <Destination>KeepGoing</Destination>
					</Transition>
					<Transition>
					  <Source>StopReward</Source>
					  <SourceResult>done</SourceResult>
					  <Destination>Stop</Destination>
					</Transition>

				  
				  <!--
					<Result><Name>
					  <Name>KeepGoing</Name>
					</Name></Result>
					<Result><Name>
					  <Name>Stop</Name>
					</Name></Result>
				  -->
				<UIInfo><Pos x="456" y="402"/></UIInfo></StateMachineElement>



				<!-- This is a really simple stage that uses the testConmtroller -->
					<!-- and StopwatchController to flip back and forth between two scenes -->
					<StateMachineElement type="StateMachine">
						<Name>Stage 3</Name>
						<Level>Stage</Level>
						<InitialElement>State 1</InitialElement>
						
							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 1</Name>
								
									<ControlElement type="Test Controller">
										<Name>TestCont</Name>
						 		 		<OperatorVisible>true</OperatorVisible>
						  				<SubjectVisible>true</SubjectVisible>
										<NumberOfFrames>120</NumberOfFrames>
									<UIInfo><Pos x="100" y="100"/></UIInfo></ControlElement>
								
								
									
										
											<BackgroundColor>#000000</BackgroundColor>

							  						<Scriptable type="Box Graphic">
														<Name>box</Name>
														<Order>1</Order>
														<Position x="30" y="30"/>
														<Dimensions x="0" y="0" width="50" height="100"/>
														<Color R="255" G="255" B="0" A="255"/>
							 						</Scriptable>

																	
									<Result><Name>Success</Name><UIInfo><Pos x="400" y="100"/></UIInfo></Result>
								
					  			<Transition>
									<Source>TestCont</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
					  			</Transition>
							<UIInfo><Pos x="346" y="138"/></UIInfo></StateMachineElement>
							<StateMachineElement type="State">
								<Revision>-1</Revision>
								<EngineNeeded>-1</EngineNeeded>
								<Name>State 2</Name>
								
									<ControlElement type="Stopwatch Controller">
										<OperatorVisible>true</OperatorVisible>
										<SubjectVisible>true</SubjectVisible>
										<Name>Stopwatch</Name>
										<TimeUnits>Ms</TimeUnits>
										<Time>5000</Time>
									<UIInfo><Pos x="100" y="100"/></UIInfo></ControlElement>
								
								
									
										
											<BackgroundColor>#000000</BackgroundColor>

												<Scriptable type="Box Graphic">
													<Name>box</Name>
													<Order>1</Order>
													<Position x="100" y="30"/>
													<Dimensions x="0" y="0" width="50" height="100"/>
													<Color R="255" G="0" B="255" A="255"/>
												<UIInfo><Pos x="1000" y="100"/></UIInfo></Scriptable>

									
								
									<FrameScript>
										x = box.getX();
										y = box.getY()+10;
										box.setPosition(x,y);
									</FrameScript>
								
								
									<Result><Name>Success</Name><UIInfo><Pos x="400" y="100"/></UIInfo></Result>
								
					  			<Transition>
									<Source>Stopwatch</Source>
									<SourceResult>Success</SourceResult>
									<Destination>Success</Destination>
					  			</Transition>
							<UIInfo><Pos x="622" y="186"/></UIInfo></StateMachineElement>  
						
						
							<Result><Name>Done</Name><UIInfo><Pos x="858" y="194"/></UIInfo></Result>
						
						
							<Transition>
								<Source>State 1</Source>
								<SourceResult>Success</SourceResult>
								<Destination>State 2</Destination>
							</Transition>
							<Transition>
								<Source>State 2</Source>
								<SourceResult>Success</SourceResult>
								<Destination>Done</Destination>
							</Transition>
						 
					<UIInfo><Pos x="713" y="173"/></UIInfo></StateMachineElement>	
				
				
					<Result><Name>Done</Name><UIInfo><Pos x="745" y="526"/></UIInfo></Result>
				
				
					<Transition>
						<Source>Stage 1</Source>
						<SourceResult>Success</SourceResult>
						<Destination>Stage 2</Destination>
					</Transition>
				<Transition>
				  <Source>Stage 2</Source>
				  <SourceResult>KeepGoing</SourceResult>
				  <Destination>Stage 3</Destination>
				</Transition>
				<Transition>
				  <Source>Stage 2</Source>
				  <SourceResult>Stop</SourceResult>
				  <Destination>Done</Destination>
				</Transition>
				<Transition>
				  <Source>Stage 3</Source>
				  <SourceResult>Done</SourceResult>
				  <Destination>Done</Destination>
				</Transition>
			  
			<UIInfo><Pos x="111" y="105"/></UIInfo></StateMachine>
		<UIInfo><Pos x="695" y="93"/></UIInfo></Task>
	
<SyntaxVersion>0.0.1</SyntaxVersion></Experiment>